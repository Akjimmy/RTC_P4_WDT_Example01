ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EnableRtcOperation,"ax",%progbits
  20              		.align	2
  21              		.global	EnableRtcOperation
  22              		.code	16
  23              		.thumb_func
  24              		.type	EnableRtcOperation, %function
  25              	EnableRtcOperation:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 1.00
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This is the source code for the example project of the RTC_P4 component.
   8:main.c        **** *
   9:main.c        **** ********************************************************************************
  10:main.c        **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  11:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  12:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  13:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  14:main.c        **** * accompanying the software package from which you obtained this software.
  15:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  16:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  17:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  18:main.c        **** *******************************************************************************/
  19:main.c        **** 
  20:main.c        **** #include <project.h>
  21:main.c        **** #include <stdio.h>
  22:main.c        **** 
  23:main.c        **** #define LFCLK_CYCLES_PER_SECOND     (3276)//(16384)//(32768u)
  24:main.c        **** 
  25:main.c        **** #define WCO_STARTUP_DELAY_CYCLES    (LFCLK_CYCLES_PER_SECOND)
  26:main.c        **** 
  27:main.c        **** /* Time: 13:48:00 */
  28:main.c        **** #define TIME_HOUR           (0x13u)
  29:main.c        **** #define TIME_MIN            (0x48u)
  30:main.c        **** #define TIME_SEC            (0x00u)
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 2


  31:main.c        **** #define HOUR_OFFSET         (16u)
  32:main.c        **** #define MIN_OFFSET          (8u)
  33:main.c        **** #define TIME_HR_MIN_SEC     ((uint32)(TIME_HOUR << HOUR_OFFSET) | \
  34:main.c        ****                             (uint32)(TIME_MIN << MIN_OFFSET)    | \
  35:main.c        ****                              TIME_SEC)
  36:main.c        **** /* Date: mm/dd/yy :08/10/2020 */
  37:main.c        **** #define DATE_MONTH          (RTC_AUGUST)
  38:main.c        **** #define DATE_DAY            (0x10)
  39:main.c        **** #define DATE_YEAR           (0x2020u)
  40:main.c        **** #define MONTH_OFFSET        (24u)
  41:main.c        **** #define DAY_OFFSET          (16u)
  42:main.c        **** #define DATE_MONTH_DAY_YEAR ((uint32)(DATE_MONTH << MONTH_OFFSET)   | \
  43:main.c        ****                             (uint32)(DATE_DAY << DAY_OFFSET)        | \
  44:main.c        ****                              DATE_YEAR)
  45:main.c        **** 
  46:main.c        **** /* Alarm Time: 15:44:00 */
  47:main.c        **** #define ALARM_HOUR                  (0x04u)
  48:main.c        **** #define ALARM_MIN                   (0x01u)
  49:main.c        **** #define ALARM_SEC                   (0x30u)
  50:main.c        **** #define ALARM_TIME_HR_MIN_SEC       ((uint32)(ALARM_HOUR << HOUR_OFFSET) | \
  51:main.c        ****                                     (uint32)(ALARM_MIN << MIN_OFFSET)    | \
  52:main.c        ****                                      ALARM_SEC)
  53:main.c        **** 
  54:main.c        **** /* Alarm Date: 12/18/2014 */
  55:main.c        **** #define ALARM_DATE_MONTH_DAY_YEAR   (DATE_MONTH_DAY_YEAR)
  56:main.c        **** 
  57:main.c        **** #define TICK_EACH_1_HZ      (1u)
  58:main.c        **** #define TICK_EACH_2_HZ      (2u)
  59:main.c        **** #define TICK_EACH_10_HZ     (10u)
  60:main.c        **** 
  61:main.c        **** /* Alarm structure declaration */
  62:main.c        **** RTC_DATE_TIME alarmTimeDate;
  63:main.c        **** 
  64:main.c        **** /* Alarm flag initialization */
  65:main.c        **** uint32 alarmFlag = 0;
  66:main.c        **** 
  67:main.c        **** /* Interrupt prototypes */
  68:main.c        **** CY_ISR_PROTO(EnableRtcOperation);
  69:main.c        **** CY_ISR_PROTO(UpdateTimeIsrHandler);
  70:main.c        **** CY_ISR_PROTO(AlarmIsrHandler);
  71:main.c        **** 
  72:main.c        **** CY_ISR_PROTO(Time1_ISR_Handler);
  73:main.c        **** 
  74:main.c        **** 
  75:main.c        **** uint32 ui100mS=0;
  76:main.c        **** uint8   byUpdateTime=0;
  77:main.c        **** 
  78:main.c        **** uint32  Timer1Count;
  79:main.c        **** uint8   byUpdateCapture=0;
  80:main.c        **** 
  81:main.c        **** 
  82:main.c        **** #define _TEST_TIMER_    // if test timer mode,Low power is sleep mode
  83:main.c        **** 
  84:main.c        **** //#define _CAPTURE_MODE_  //Timer1 must configed as Capture mode,and select Interrupt on Compare/ca
  85:main.c        ****                           // Timer1 capture trigger input select falling edge   
  86:main.c        **** /*******************************************************************************
  87:main.c        **** * Function Name: main
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 3


  88:main.c        **** ********************************************************************************
  89:main.c        **** *
  90:main.c        **** * Summary:
  91:main.c        **** *  The main() function.
  92:main.c        **** *
  93:main.c        **** * Parameters:
  94:main.c        **** *  None.
  95:main.c        **** *
  96:main.c        **** * Return:
  97:main.c        **** *  None.
  98:main.c        **** *
  99:main.c        **** *******************************************************************************/
 100:main.c        **** int main()
 101:main.c        **** {
 102:main.c        ****     char timeBuffer[16u];
 103:main.c        ****     char dateBuffer[16u];
 104:main.c        ****     
 105:main.c        ****     #ifdef _TEST_TIMER_
 106:main.c        ****     char TimerCountBuffer[16u]; 
 107:main.c        ****     uint32 time;
 108:main.c        ****     uint32 date;
 109:main.c        ****     uint32 intmask;
 110:main.c        ****     uint32 intSource;
 111:main.c        ****     #endif
 112:main.c        ****    
 113:main.c        ****     /* Enable WCO */
 114:main.c        ****     CySysClkWcoStart();
 115:main.c        ****     
 116:main.c        ****     /* Enable global interrupts */
 117:main.c        ****     CyGlobalIntEnable;
 118:main.c        **** 
 119:main.c        ****     /* Alarm structure initialization */
 120:main.c        ****     alarmTimeDate.time = ALARM_TIME_HR_MIN_SEC;
 121:main.c        ****     alarmTimeDate.date = ALARM_DATE_MONTH_DAY_YEAR;
 122:main.c        ****     
 123:main.c        ****     /* Prepare COUNTER0 to use it by CySysTimerDelay function in
 124:main.c        ****      * "INTERRUPT" mode: disable "clear on match" functionality, configure
 125:main.c        ****      * COUNTER0 to generate interrupts on match.
 126:main.c        ****      */
 127:main.c        ****     CySysWdtSetClearOnMatch(CY_SYS_WDT_COUNTER0, 0u);
 128:main.c        ****     CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_INT);
 129:main.c        ****     
 130:main.c        ****     /* Enable WDT COUNTER0 */
 131:main.c        ****     CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
 132:main.c        ****     
 133:main.c        ****     /* Disable servicing interrupts from WDT_COUNTER0 to prevent
 134:main.c        ****        trigger callback before the CySysTimerDelay() function. */
 135:main.c        ****     CySysWdtDisableCounterIsr(CY_SYS_WDT_COUNTER0);
 136:main.c        ****     
 137:main.c        ****     /* Register EnableRtcOperation() by the COUNTER0. */
 138:main.c        ****     CySysWdtSetInterruptCallback(CY_SYS_WDT_COUNTER0, EnableRtcOperation);
 139:main.c        ****     
 140:main.c        ****     /* Initiate run the EnableRtcOperation() callback in WCO_STARTUP_DELAY_CYCLES interval. */
 141:main.c        ****     CySysTimerDelay(CY_SYS_WDT_COUNTER0, CY_SYS_TIMER_INTERRUPT, WCO_STARTUP_DELAY_CYCLES);
 142:main.c        ****     
 143:main.c        ****     /* Start RTC component */
 144:main.c        ****     RTC_Start();
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 4


 145:main.c        ****     
 146:main.c        ****     /* Set Date and Time */
 147:main.c        ****     RTC_SetDateAndTime(TIME_HR_MIN_SEC,DATE_MONTH_DAY_YEAR);
 148:main.c        **** 
 149:main.c        ****     /* Ignore second mask to call alarm */
 150:main.c        ****     RTC_SetAlarmMask((uint32)~RTC_ALARM_SEC_MASK);
 151:main.c        ****     
 152:main.c        ****     /* Set Alarm Date and Time */
 153:main.c        ****     RTC_SetAlarmDateAndTime(&alarmTimeDate);
 154:main.c        **** 
 155:main.c        ****     /* Set RTC time update period */
 156:main.c        ****     //RTC_SetPeriod(1u, TICK_EACH_1_HZ);
 157:main.c        ****     //RTC_SetPeriod(1u,TICK_EACH_2_HZ);
 158:main.c        ****     RTC_SetPeriod(1u,TICK_EACH_10_HZ);
 159:main.c        ****     /* Set function AlarmIsrHandler to be called when alarm triggers */
 160:main.c        ****     RTC_SetAlarmHandler(AlarmIsrHandler);
 161:main.c        ****     
 162:main.c        ****     #ifdef _TEST_TIMER_
 163:main.c        ****     isrTimer1_StartEx(Time1_ISR_Handler);
 164:main.c        ****     Timer1_Start();
 165:main.c        ****     #endif
 166:main.c        ****     
 167:main.c        ****     //###########################################
 168:main.c        ****     //intmask=Timer1_GetInterruptSourceMasked();
 169:main.c        ****     //intSource=Timer1_GetInterruptSource();
 170:main.c        ****     
 171:main.c        ****     //if(intmask==Timer1_INTR_MASK_TC ||intSource==Timer1_INTR_MASK_TC)
 172:main.c        ****     //{
 173:main.c        ****     //    CyDelay(100);    
 174:main.c        ****     //}
 175:main.c        ****     //if(intmask==Timer1_INTR_MASK_CC_MATCH || intSource==Timer1_INTR_MASK_CC_MATCH)
 176:main.c        ****     //{
 177:main.c        ****     //    CyDelay(100);    
 178:main.c        ****     //}
 179:main.c        ****     //##############################################
 180:main.c        ****     while(1)// #1 while(1)
 181:main.c        ****     {
 182:main.c        ****         if(byUpdateTime)
 183:main.c        ****         {
 184:main.c        ****             byUpdateTime=0;
 185:main.c        ****             /* Get Date and Time from RTC */
 186:main.c        ****             time = RTC_GetTime();
 187:main.c        ****             date = RTC_GetDate();
 188:main.c        ****             /* Print Date and Time to UART */
 189:main.c        ****             sprintf(timeBuffer, "%02lu:%02lu:%02lu.%1lu", RTC_GetHours(time), RTC_GetMinutes(time),
 190:main.c        ****             sprintf(dateBuffer, "%02lu/%02lu/%02lu", RTC_GetMonth(date), RTC_GetDay(date), RTC_GetY
 191:main.c        **** 
 192:main.c        ****             UART_PutString(timeBuffer);
 193:main.c        ****             UART_PutString(" | ");
 194:main.c        ****             UART_PutString(dateBuffer);
 195:main.c        ****             UART_PutString(" | ");
 196:main.c        **** 
 197:main.c        ****             if (alarmFlag == 1u)
 198:main.c        ****             {
 199:main.c        ****                 UART_PutString("  Alarm ");
 200:main.c        ****                 alarmFlag  = 0u;
 201:main.c        ****             }
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 5


 202:main.c        ****             else
 203:main.c        ****             {
 204:main.c        ****                 UART_PutString("No alarm");
 205:main.c        ****             }
 206:main.c        **** 
 207:main.c        ****                 UART_PutString("\r");
 208:main.c        ****         }
 209:main.c        ****         
 210:main.c        ****         #ifdef _TEST_TIMER_
 211:main.c        ****             #ifdef _CAPTURE_MODE_
 212:main.c        ****             if(byUpdateCapture)
 213:main.c        ****             {
 214:main.c        ****                 byUpdateCapture=0;
 215:main.c        ****                 sprintf(TimerCountBuffer, "%5lu",Timer1Count);
 216:main.c        ****                 UART_PutString("Timer count= ");
 217:main.c        ****                 UART_PutString(TimerCountBuffer);
 218:main.c        ****                 UART_PutString("\r");
 219:main.c        ****             }
 220:main.c        ****             #endif
 221:main.c        ****         #endif
 222:main.c        ****         
 223:main.c        ****         #ifndef _TEST_TIMER_ // timer can not wakeup CPU from deepsleep
 224:main.c        ****             CySysPmDeepSleep();  // Switch to Deepsleep Mode         
 225:main.c        ****         #endif
 226:main.c        ****         
 227:main.c        ****         #ifdef _TEST_TIMER_
 228:main.c        ****             CySysPmSleep();   // Switch to Sleep Mode       
 229:main.c        ****         #endif    
 230:main.c        ****     }// Loop of #1 while(1)
 231:main.c        **** }
 232:main.c        **** 
 233:main.c        **** 
 234:main.c        **** /*******************************************************************************
 235:main.c        **** * Function Name: UpdateTimeIsrHandler
 236:main.c        **** ********************************************************************************
 237:main.c        **** * Summary: 
 238:main.c        **** *  This interrupt handler is intended to switch LFCLK source from ILO to WCO and
 239:main.c        **** *  enable RTC operation. 
 240:main.c        **** *
 241:main.c        **** * Parameters:
 242:main.c        **** *  None
 243:main.c        **** *
 244:main.c        **** * Return:
 245:main.c        **** *  None
 246:main.c        **** *
 247:main.c        **** *******************************************************************************/
 248:main.c        **** void EnableRtcOperation(void)
 249:main.c        **** {
  28              		.loc 1 249 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 250:main.c        ****     /* Switch LFCLK source from ILO to WCO. */
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 6


 251:main.c        ****     CySysClkSetLfclkSource(CY_SYS_CLK_LFCLK_SRC_WCO);
  36              		.loc 1 251 0
  37 0002 8020     		movs	r0, #128
  38 0004 C005     		lsls	r0, r0, #23
  39 0006 FFF7FEFF 		bl	CySysClkSetLfclkSource
  40              	.LVL0:
 252:main.c        ****     
 253:main.c        ****     /* Configure COUNTER0 to generate interrupt every second. */
 254:main.c        ****     CySysWdtDisable(CY_SYS_WDT_COUNTER0_MASK);
  41              		.loc 1 254 0
  42 000a 0120     		movs	r0, #1
  43 000c FFF7FEFF 		bl	CySysWdtDisable
  44              	.LVL1:
 255:main.c        ****     CySysWdtSetClearOnMatch(CY_SYS_WDT_COUNTER0, 1u);
  45              		.loc 1 255 0
  46 0010 0121     		movs	r1, #1
  47 0012 0020     		movs	r0, #0
  48 0014 FFF7FEFF 		bl	CySysWdtSetClearOnMatch
  49              	.LVL2:
 256:main.c        ****     CySysWdtSetMatch(CY_SYS_WDT_COUNTER0, LFCLK_CYCLES_PER_SECOND);
  50              		.loc 1 256 0
  51 0018 0849     		ldr	r1, .L2
  52 001a 0020     		movs	r0, #0
  53 001c FFF7FEFF 		bl	CySysWdtSetMatch
  54              	.LVL3:
 257:main.c        ****     CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
  55              		.loc 1 257 0
  56 0020 0120     		movs	r0, #1
  57 0022 FFF7FEFF 		bl	CySysWdtEnable
  58              	.LVL4:
 258:main.c        ****     
 259:main.c        ****     /* Eegister UpdateTimeIsrHandler() by the COUNTER0. */
 260:main.c        ****     CySysWdtSetInterruptCallback(CY_SYS_WDT_COUNTER0, UpdateTimeIsrHandler);
  59              		.loc 1 260 0
  60 0026 0649     		ldr	r1, .L2+4
  61 0028 0020     		movs	r0, #0
  62 002a FFF7FEFF 		bl	CySysWdtSetInterruptCallback
  63              	.LVL5:
 261:main.c        ****     
 262:main.c        ****     /* Enable the COUNTER0 ISR handler. */
 263:main.c        ****     CySysWdtEnableCounterIsr(CY_SYS_WDT_COUNTER0);
  64              		.loc 1 263 0
  65 002e 0020     		movs	r0, #0
  66 0030 FFF7FEFF 		bl	CySysWdtEnableCounterIsr
  67              	.LVL6:
 264:main.c        ****     
 265:main.c        ****     /* Configure the LFCLK_Out pin to drive it by LFCLK. */
 266:main.c        ****     LFCLK_Out_SetDriveMode(LFCLK_Out_DM_STRONG);
  68              		.loc 1 266 0
  69 0034 0620     		movs	r0, #6
  70 0036 FFF7FEFF 		bl	LFCLK_Out_SetDriveMode
  71              	.LVL7:
 267:main.c        **** }
  72              		.loc 1 267 0
  73              		@ sp needed
  74 003a 10BD     		pop	{r4, pc}
  75              	.L3:
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 7


  76              		.align	2
  77              	.L2:
  78 003c CC0C0000 		.word	3276
  79 0040 00000000 		.word	UpdateTimeIsrHandler
  80              		.cfi_endproc
  81              	.LFE64:
  82              		.size	EnableRtcOperation, .-EnableRtcOperation
  83              		.section	.text.UpdateTimeIsrHandler,"ax",%progbits
  84              		.align	2
  85              		.global	UpdateTimeIsrHandler
  86              		.code	16
  87              		.thumb_func
  88              		.type	UpdateTimeIsrHandler, %function
  89              	UpdateTimeIsrHandler:
  90              	.LFB65:
 268:main.c        **** 
 269:main.c        **** 
 270:main.c        **** /*******************************************************************************
 271:main.c        **** * Function Name: UpdateTimeIsrHandler
 272:main.c        **** ********************************************************************************
 273:main.c        **** * Summary: 
 274:main.c        **** *  The interrupt handler for WDT counter 0 interrupts. Toggles the LED_WdtIsr 
 275:main.c        **** *  pin.
 276:main.c        **** *
 277:main.c        **** * Parameters:
 278:main.c        **** *  None
 279:main.c        **** *
 280:main.c        **** * Return:
 281:main.c        **** *  None
 282:main.c        **** *
 283:main.c        **** *******************************************************************************/
 284:main.c        **** void UpdateTimeIsrHandler(void)
 285:main.c        **** {
  91              		.loc 1 285 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95 0000 10B5     		push	{r4, lr}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 4, -8
  98              		.cfi_offset 14, -4
 286:main.c        ****     /* Toggle pin state */
 287:main.c        ****     ui100mS++;
  99              		.loc 1 287 0
 100 0002 074A     		ldr	r2, .L6
 101 0004 1368     		ldr	r3, [r2]
 102 0006 0133     		adds	r3, r3, #1
 103 0008 1360     		str	r3, [r2]
 288:main.c        ****     if(ui100mS>9)
 104              		.loc 1 288 0
 105 000a 092B     		cmp	r3, #9
 106 000c 02D9     		bls	.L5
 289:main.c        ****         ui100mS=0;
 107              		.loc 1 289 0
 108 000e 0022     		movs	r2, #0
 109 0010 034B     		ldr	r3, .L6
 110 0012 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 8


 111              	.L5:
 290:main.c        ****     #ifndef _TEST_TIMER_
 291:main.c        ****     LED_WdtIsr_Write((uint8)~(LED_WdtIsr_Read()));
 292:main.c        ****     #endif
 293:main.c        ****     
 294:main.c        ****     RTC_Update();
 112              		.loc 1 294 0
 113 0014 FFF7FEFF 		bl	RTC_Update
 114              	.LVL8:
 295:main.c        ****     byUpdateTime=1;
 115              		.loc 1 295 0
 116 0018 0122     		movs	r2, #1
 117 001a 014B     		ldr	r3, .L6
 118 001c 1A71     		strb	r2, [r3, #4]
 296:main.c        **** }
 119              		.loc 1 296 0
 120              		@ sp needed
 121 001e 10BD     		pop	{r4, pc}
 122              	.L7:
 123              		.align	2
 124              	.L6:
 125 0020 00000000 		.word	.LANCHOR0
 126              		.cfi_endproc
 127              	.LFE65:
 128              		.size	UpdateTimeIsrHandler, .-UpdateTimeIsrHandler
 129              		.section	.text.AlarmIsrHandler,"ax",%progbits
 130              		.align	2
 131              		.global	AlarmIsrHandler
 132              		.code	16
 133              		.thumb_func
 134              		.type	AlarmIsrHandler, %function
 135              	AlarmIsrHandler:
 136              	.LFB66:
 297:main.c        **** 
 298:main.c        **** 
 299:main.c        **** /*******************************************************************************
 300:main.c        **** * Function Name: AlarmIsrHandler
 301:main.c        **** ********************************************************************************
 302:main.c        **** * Summary:
 303:main.c        **** *  The interrupt handler for Alarm interrupts. Toggles the LED_WdtInt pin.
 304:main.c        **** *
 305:main.c        **** * Parameters:
 306:main.c        **** *  None
 307:main.c        **** *
 308:main.c        **** * Return:
 309:main.c        **** *  None
 310:main.c        **** *
 311:main.c        **** *******************************************************************************/
 312:main.c        **** void AlarmIsrHandler(void)
 313:main.c        **** {
 137              		.loc 1 313 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141 0000 10B5     		push	{r4, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 4, -8
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 9


 144              		.cfi_offset 14, -4
 314:main.c        ****     alarmFlag = 1u;
 145              		.loc 1 314 0
 146 0002 0122     		movs	r2, #1
 147 0004 024B     		ldr	r3, .L9
 148 0006 9A60     		str	r2, [r3, #8]
 315:main.c        **** 
 316:main.c        ****     /* Toggle pin state */
 317:main.c        ****     #ifndef _TEST_TIMER_
 318:main.c        ****     LED_Alarm_Write((uint8)~(LED_Alarm_Read()));
 319:main.c        ****     #endif
 320:main.c        **** 
 321:main.c        ****     /* Clear interrupts state */
 322:main.c        ****     RTC_ClearAlarmStatus();
 149              		.loc 1 322 0
 150 0008 FFF7FEFF 		bl	RTC_ClearAlarmStatus
 151              	.LVL9:
 323:main.c        **** }
 152              		.loc 1 323 0
 153              		@ sp needed
 154 000c 10BD     		pop	{r4, pc}
 155              	.L10:
 156 000e C046     		.align	2
 157              	.L9:
 158 0010 00000000 		.word	.LANCHOR0
 159              		.cfi_endproc
 160              	.LFE66:
 161              		.size	AlarmIsrHandler, .-AlarmIsrHandler
 162              		.section	.text.Time1_ISR_Handler,"ax",%progbits
 163              		.align	2
 164              		.global	Time1_ISR_Handler
 165              		.code	16
 166              		.thumb_func
 167              		.type	Time1_ISR_Handler, %function
 168              	Time1_ISR_Handler:
 169              	.LFB67:
 324:main.c        **** 
 325:main.c        **** /*******************************************************************************
 326:main.c        **** * Function Name: Time1_ISR_Handle
 327:main.c        **** ********************************************************************************
 328:main.c        **** * Summary:
 329:main.c        **** *  The interrupt handler for Alarm interrupts. Toggles the LED_WdtInt pin.
 330:main.c        **** *
 331:main.c        **** * Parameters:
 332:main.c        **** *  None
 333:main.c        **** *
 334:main.c        **** * Return:
 335:main.c        **** *  None
 336:main.c        **** *
 337:main.c        **** *******************************************************************************/
 338:main.c        **** CY_ISR(Time1_ISR_Handler)
 339:main.c        **** {
 170              		.loc 1 339 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 10


 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 4, -8
 177              		.cfi_offset 14, -4
 340:main.c        ****     // ******************************************************
 341:main.c        ****     isrTimer1_ClearPending();
 178              		.loc 1 341 0
 179 0002 FFF7FEFF 		bl	isrTimer1_ClearPending
 180              	.LVL10:
 342:main.c        ****     
 343:main.c        ****      // ******************************************************
 344:main.c        ****     
 345:main.c        ****     //######################################################
 346:main.c        ****     //uint32  intSource;
 347:main.c        ****     //intSource=Timer1_GetInterruptSource();// do not use this Function.
 348:main.c        ****     //Timer1_ClearInterrupt(intSource);
 349:main.c        ****     //######################################################
 350:main.c        ****     
 351:main.c        ****     uint32  intmask;
 352:main.c        ****     intmask=Timer1_GetInterruptSourceMasked();// get masked interrupt source which raising this int
 181              		.loc 1 352 0
 182 0006 FFF7FEFF 		bl	Timer1_GetInterruptSourceMasked
 183              	.LVL11:
 184 000a 0400     		movs	r4, r0
 185              	.LVL12:
 353:main.c        ****    
 354:main.c        ****     Timer1_ClearInterrupt(intmask);
 186              		.loc 1 354 0
 187 000c FFF7FEFF 		bl	Timer1_ClearInterrupt
 188              	.LVL13:
 355:main.c        ****         
 356:main.c        ****     if(intmask==Timer1_INTR_MASK_TC)    //timer counts overflow event
 189              		.loc 1 356 0
 190 0010 012C     		cmp	r4, #1
 191 0012 09D1     		bne	.L12
 357:main.c        ****     {
 358:main.c        ****         Timer1Count=Timer1_ReadCounter();
 192              		.loc 1 358 0
 193 0014 FFF7FEFF 		bl	Timer1_ReadCounter
 194              	.LVL14:
 195 0018 0A4B     		ldr	r3, .L14
 196 001a 1860     		str	r0, [r3]
 359:main.c        ****         LED_Alarm_Write((uint8)~(LED_Alarm_Read()));//Red LED
 197              		.loc 1 359 0
 198 001c FFF7FEFF 		bl	LED_Alarm_Read
 199              	.LVL15:
 200 0020 C043     		mvns	r0, r0
 201 0022 C0B2     		uxtb	r0, r0
 202 0024 FFF7FEFF 		bl	LED_Alarm_Write
 203              	.LVL16:
 204              	.L12:
 360:main.c        ****        
 361:main.c        ****     }
 362:main.c        ****     if(intmask==Timer1_INTR_MASK_CC_MATCH) // timer counts compare match event
 205              		.loc 1 362 0
 206 0028 022C     		cmp	r4, #2
 207 002a 09D1     		bne	.L11
 363:main.c        ****     {
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 11


 364:main.c        ****         Timer1Count=Timer1_ReadCounter();
 208              		.loc 1 364 0
 209 002c FFF7FEFF 		bl	Timer1_ReadCounter
 210              	.LVL17:
 211 0030 044B     		ldr	r3, .L14
 212 0032 1860     		str	r0, [r3]
 365:main.c        ****        
 366:main.c        ****         LED_WdtIsr_Write((uint8)~(LED_WdtIsr_Read()));//Blue LED
 213              		.loc 1 366 0
 214 0034 FFF7FEFF 		bl	LED_WdtIsr_Read
 215              	.LVL18:
 216 0038 C043     		mvns	r0, r0
 217 003a C0B2     		uxtb	r0, r0
 218 003c FFF7FEFF 		bl	LED_WdtIsr_Write
 219              	.LVL19:
 220              	.L11:
 367:main.c        ****         
 368:main.c        ****         #ifdef _CAPTURE_MODE_
 369:main.c        ****         byUpdateCapture=1;
 370:main.c        ****         #endif
 371:main.c        ****     }
 372:main.c        ****   
 373:main.c        **** }   
 221              		.loc 1 373 0
 222              		@ sp needed
 223              	.LVL20:
 224 0040 10BD     		pop	{r4, pc}
 225              	.L15:
 226 0042 C046     		.align	2
 227              	.L14:
 228 0044 00000000 		.word	Timer1Count
 229              		.cfi_endproc
 230              	.LFE67:
 231              		.size	Time1_ISR_Handler, .-Time1_ISR_Handler
 232              		.section	.text.main,"ax",%progbits
 233              		.align	2
 234              		.global	main
 235              		.code	16
 236              		.thumb_func
 237              		.type	main, %function
 238              	main:
 239              	.LFB63:
 101:main.c        ****     char timeBuffer[16u];
 240              		.loc 1 101 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 32
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 245              		.cfi_def_cfa_offset 20
 246              		.cfi_offset 4, -20
 247              		.cfi_offset 5, -16
 248              		.cfi_offset 6, -12
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 4746     		mov	r7, r8
 252 0004 80B4     		push	{r7}
 253              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 12


 254              		.cfi_offset 8, -24
 255 0006 8AB0     		sub	sp, sp, #40
 256              		.cfi_def_cfa_offset 64
 114:main.c        ****     
 257              		.loc 1 114 0
 258 0008 FFF7FEFF 		bl	CySysClkWcoStart
 259              	.LVL21:
 117:main.c        **** 
 260              		.loc 1 117 0
 261              		.syntax divided
 262              	@ 117 "main.c" 1
 263 000c 62B6     		CPSIE   i
 264              	@ 0 "" 2
 120:main.c        ****     alarmTimeDate.date = ALARM_DATE_MONTH_DAY_YEAR;
 265              		.loc 1 120 0
 266              		.thumb
 267              		.syntax unified
 268 000e 584C     		ldr	r4, .L21
 269 0010 584B     		ldr	r3, .L21+4
 270 0012 2360     		str	r3, [r4]
 121:main.c        ****     
 271              		.loc 1 121 0
 272 0014 584D     		ldr	r5, .L21+8
 273 0016 6560     		str	r5, [r4, #4]
 127:main.c        ****     CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_INT);
 274              		.loc 1 127 0
 275 0018 0021     		movs	r1, #0
 276 001a 0020     		movs	r0, #0
 277 001c FFF7FEFF 		bl	CySysWdtSetClearOnMatch
 278              	.LVL22:
 128:main.c        ****     
 279              		.loc 1 128 0
 280 0020 0121     		movs	r1, #1
 281 0022 0020     		movs	r0, #0
 282 0024 FFF7FEFF 		bl	CySysWdtSetMode
 283              	.LVL23:
 131:main.c        ****     
 284              		.loc 1 131 0
 285 0028 0120     		movs	r0, #1
 286 002a FFF7FEFF 		bl	CySysWdtEnable
 287              	.LVL24:
 135:main.c        ****     
 288              		.loc 1 135 0
 289 002e 0020     		movs	r0, #0
 290 0030 FFF7FEFF 		bl	CySysWdtDisableCounterIsr
 291              	.LVL25:
 138:main.c        ****     
 292              		.loc 1 138 0
 293 0034 5149     		ldr	r1, .L21+12
 294 0036 0020     		movs	r0, #0
 295 0038 FFF7FEFF 		bl	CySysWdtSetInterruptCallback
 296              	.LVL26:
 141:main.c        ****     
 297              		.loc 1 141 0
 298 003c 504A     		ldr	r2, .L21+16
 299 003e 0121     		movs	r1, #1
 300 0040 0020     		movs	r0, #0
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 13


 301 0042 FFF7FEFF 		bl	CySysTimerDelay
 302              	.LVL27:
 144:main.c        ****     
 303              		.loc 1 144 0
 304 0046 FFF7FEFF 		bl	RTC_Start
 305              	.LVL28:
 147:main.c        **** 
 306              		.loc 1 147 0
 307 004a 2900     		movs	r1, r5
 308 004c 4D48     		ldr	r0, .L21+20
 309 004e FFF7FEFF 		bl	RTC_SetDateAndTime
 310              	.LVL29:
 150:main.c        ****     
 311              		.loc 1 150 0
 312 0052 0220     		movs	r0, #2
 313 0054 4042     		rsbs	r0, r0, #0
 314 0056 FFF7FEFF 		bl	RTC_SetAlarmMask
 315              	.LVL30:
 153:main.c        **** 
 316              		.loc 1 153 0
 317 005a 2000     		movs	r0, r4
 318 005c FFF7FEFF 		bl	RTC_SetAlarmDateAndTime
 319              	.LVL31:
 158:main.c        ****     /* Set function AlarmIsrHandler to be called when alarm triggers */
 320              		.loc 1 158 0
 321 0060 0A21     		movs	r1, #10
 322 0062 0120     		movs	r0, #1
 323 0064 FFF7FEFF 		bl	RTC_SetPeriod
 324              	.LVL32:
 160:main.c        ****     
 325              		.loc 1 160 0
 326 0068 4748     		ldr	r0, .L21+24
 327 006a FFF7FEFF 		bl	RTC_SetAlarmHandler
 328              	.LVL33:
 163:main.c        ****     Timer1_Start();
 329              		.loc 1 163 0
 330 006e 4748     		ldr	r0, .L21+28
 331 0070 FFF7FEFF 		bl	isrTimer1_StartEx
 332              	.LVL34:
 164:main.c        ****     #endif
 333              		.loc 1 164 0
 334 0074 FFF7FEFF 		bl	Timer1_Start
 335              	.LVL35:
 336              	.L20:
 182:main.c        ****         {
 337              		.loc 1 182 0
 338 0078 454B     		ldr	r3, .L21+32
 339 007a 1B79     		ldrb	r3, [r3, #4]
 340 007c 002B     		cmp	r3, #0
 341 007e 74D0     		beq	.L17
 184:main.c        ****             /* Get Date and Time from RTC */
 342              		.loc 1 184 0
 343 0080 434F     		ldr	r7, .L21+32
 344 0082 0023     		movs	r3, #0
 345 0084 3B71     		strb	r3, [r7, #4]
 186:main.c        ****             date = RTC_GetDate();
 346              		.loc 1 186 0
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 14


 347 0086 FFF7FEFF 		bl	RTC_GetTime
 348              	.LVL36:
 349 008a 0500     		movs	r5, r0
 350              	.LVL37:
 187:main.c        ****             /* Print Date and Time to UART */
 351              		.loc 1 187 0
 352 008c FFF7FEFF 		bl	RTC_GetDate
 353              	.LVL38:
 354 0090 0400     		movs	r4, r0
 355              	.LVL39:
 356              	.LBB14:
 357              	.LBB15:
 358              		.file 2 "Generated_Source\\PSoC4/RTC.h"
   1:Generated_Source\PSoC4/RTC.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/RTC.h **** * \file Name: RTC.h
   3:Generated_Source\PSoC4/RTC.h **** * \version 1.30
   4:Generated_Source\PSoC4/RTC.h **** *
   5:Generated_Source\PSoC4/RTC.h **** *  This file provides constants and parameter values for the RTC_P4 Component.
   6:Generated_Source\PSoC4/RTC.h **** *
   7:Generated_Source\PSoC4/RTC.h **** ********************************************************************************
   8:Generated_Source\PSoC4/RTC.h **** * Copyright 2015-2017, Cypress Semiconductor Corporation.  All rights reserved.
   9:Generated_Source\PSoC4/RTC.h **** * You may use this file only in accordance with the license, terms, conditions,
  10:Generated_Source\PSoC4/RTC.h **** * disclaimers, and limitations in the end user license agreement accompanying
  11:Generated_Source\PSoC4/RTC.h **** * the software package with which this file was provided.
  12:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  13:Generated_Source\PSoC4/RTC.h **** 
  14:Generated_Source\PSoC4/RTC.h **** #if !defined(CY_RTC_P4_RTC_H)
  15:Generated_Source\PSoC4/RTC.h **** #define CY_RTC_P4_RTC_H
  16:Generated_Source\PSoC4/RTC.h **** 
  17:Generated_Source\PSoC4/RTC.h **** #include <cytypes.h>
  18:Generated_Source\PSoC4/RTC.h **** #include <CyLib.h>
  19:Generated_Source\PSoC4/RTC.h **** 
  20:Generated_Source\PSoC4/RTC.h **** 
  21:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
  22:Generated_Source\PSoC4/RTC.h **** *    Data types definition
  23:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  24:Generated_Source\PSoC4/RTC.h **** /**
  25:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_enums
  26:Generated_Source\PSoC4/RTC.h **** * \{
  27:Generated_Source\PSoC4/RTC.h **** */
  28:Generated_Source\PSoC4/RTC.h **** /** Daylight saving Time format enumeration */
  29:Generated_Source\PSoC4/RTC.h **** typedef enum
  30:Generated_Source\PSoC4/RTC.h **** {
  31:Generated_Source\PSoC4/RTC.h ****     RTC_DST_DATE_RELATIVE = 0u,  /**< Relative DST format */
  32:Generated_Source\PSoC4/RTC.h ****     RTC_DST_DATE_FIXED = 1u      /**< Fixed DST format */
  33:Generated_Source\PSoC4/RTC.h **** }RTC_DST_DATETYPE_ENUM;
  34:Generated_Source\PSoC4/RTC.h **** /** \} group_enums */
  35:Generated_Source\PSoC4/RTC.h **** 
  36:Generated_Source\PSoC4/RTC.h **** /**
  37:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_structures
  38:Generated_Source\PSoC4/RTC.h **** * \{
  39:Generated_Source\PSoC4/RTC.h **** */
  40:Generated_Source\PSoC4/RTC.h **** 
  41:Generated_Source\PSoC4/RTC.h **** /** RTC_DATE_TIME structure is the data structure that is used to 
  42:Generated_Source\PSoC4/RTC.h **** * save the current time and date (RTC_currentTimeDate), and Alarm time and date 
  43:Generated_Source\PSoC4/RTC.h **** *(RTC_alarmCfgTimeDate)
  44:Generated_Source\PSoC4/RTC.h **** *
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 15


  45:Generated_Source\PSoC4/RTC.h **** */
  46:Generated_Source\PSoC4/RTC.h **** typedef struct
  47:Generated_Source\PSoC4/RTC.h **** {
  48:Generated_Source\PSoC4/RTC.h ****     uint32 time;        /**< Time in the format used in API*/
  49:Generated_Source\PSoC4/RTC.h ****     uint32 date;        /**< Date in the format used in API*/
  50:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfWeek;   /**< Day of the week, see \ref group_rtc_day_of_the_week */
  51:Generated_Source\PSoC4/RTC.h ****     uint32 status;      /**< RTC status, see \ref group_rtc_status */
  52:Generated_Source\PSoC4/RTC.h **** }RTC_DATE_TIME;
  53:Generated_Source\PSoC4/RTC.h **** 
  54:Generated_Source\PSoC4/RTC.h **** /*
  55:Generated_Source\PSoC4/RTC.h **** * RTC_DST_TIME structure is the data structure that is used to 
  56:Generated_Source\PSoC4/RTC.h **** * save time and date values for Daylight Savings Time Start and Stop 
  57:Generated_Source\PSoC4/RTC.h **** * (RTC_dstTimeDateStart and RTC_dstTimeDateStop)
  58:Generated_Source\PSoC4/RTC.h **** */
  59:Generated_Source\PSoC4/RTC.h **** typedef struct
  60:Generated_Source\PSoC4/RTC.h **** {
  61:Generated_Source\PSoC4/RTC.h ****     uint32 hour;          /**< Hour value */
  62:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfWeek;     /**< Day of the week, see \ref group_rtc_day_of_the_week */
  63:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfMonth;    /**< Day of the month */
  64:Generated_Source\PSoC4/RTC.h ****     uint32 weekOfMonth;   /**< Week of the month, see \ref group_rtc_dst_week_of_month */
  65:Generated_Source\PSoC4/RTC.h ****     uint32 month;         /**< Month value, see \ref group_rtc_month */
  66:Generated_Source\PSoC4/RTC.h ****     uint8  timeFormat;    /**< The DST operation mode, see \ref 
  67:Generated_Source\PSoC4/RTC.h ****                                RTC_DST_DATETYPE_ENUM */
  68:Generated_Source\PSoC4/RTC.h **** }RTC_DST_TIME;
  69:Generated_Source\PSoC4/RTC.h **** /** \} group_structures */
  70:Generated_Source\PSoC4/RTC.h **** 
  71:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
  72:Generated_Source\PSoC4/RTC.h **** *    Enumerated Types and Parameters
  73:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  74:Generated_Source\PSoC4/RTC.h **** /* Time Format setting constants */
  75:Generated_Source\PSoC4/RTC.h **** #define RTC__HOUR_12 1
  76:Generated_Source\PSoC4/RTC.h **** #define RTC__HOUR_24 0
  77:Generated_Source\PSoC4/RTC.h **** 
  78:Generated_Source\PSoC4/RTC.h **** /*  Date Format setting constants */
  79:Generated_Source\PSoC4/RTC.h **** #define RTC__MM_DD_YYYY 0
  80:Generated_Source\PSoC4/RTC.h **** #define RTC__DD_MM_YYYY 1
  81:Generated_Source\PSoC4/RTC.h **** #define RTC__YYYY_MM_DD 2
  82:Generated_Source\PSoC4/RTC.h **** 
  83:Generated_Source\PSoC4/RTC.h **** /* Date Type setting constants */
  84:Generated_Source\PSoC4/RTC.h **** #define RTC__RELATIVE 0
  85:Generated_Source\PSoC4/RTC.h **** #define RTC__FIXED 1
  86:Generated_Source\PSoC4/RTC.h **** 
  87:Generated_Source\PSoC4/RTC.h **** /* DST Hour setting constants */
  88:Generated_Source\PSoC4/RTC.h **** #define RTC__H0000 0
  89:Generated_Source\PSoC4/RTC.h **** #define RTC__H0100 1
  90:Generated_Source\PSoC4/RTC.h **** #define RTC__H0200 2
  91:Generated_Source\PSoC4/RTC.h **** #define RTC__H0300 3
  92:Generated_Source\PSoC4/RTC.h **** #define RTC__H0400 4
  93:Generated_Source\PSoC4/RTC.h **** #define RTC__H0500 5
  94:Generated_Source\PSoC4/RTC.h **** #define RTC__H0600 6
  95:Generated_Source\PSoC4/RTC.h **** #define RTC__H0700 7
  96:Generated_Source\PSoC4/RTC.h **** #define RTC__H0800 8
  97:Generated_Source\PSoC4/RTC.h **** #define RTC__H0900 9
  98:Generated_Source\PSoC4/RTC.h **** #define RTC__H1000 10
  99:Generated_Source\PSoC4/RTC.h **** #define RTC__H1100 11
 100:Generated_Source\PSoC4/RTC.h **** #define RTC__H1200 12
 101:Generated_Source\PSoC4/RTC.h **** #define RTC__H1300 13
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 16


 102:Generated_Source\PSoC4/RTC.h **** #define RTC__H1400 14
 103:Generated_Source\PSoC4/RTC.h **** #define RTC__H1500 15
 104:Generated_Source\PSoC4/RTC.h **** #define RTC__H1600 16
 105:Generated_Source\PSoC4/RTC.h **** #define RTC__H1700 17
 106:Generated_Source\PSoC4/RTC.h **** #define RTC__H1800 18
 107:Generated_Source\PSoC4/RTC.h **** #define RTC__H1900 19
 108:Generated_Source\PSoC4/RTC.h **** #define RTC__H2000 20
 109:Generated_Source\PSoC4/RTC.h **** #define RTC__H2100 21
 110:Generated_Source\PSoC4/RTC.h **** #define RTC__H2200 22
 111:Generated_Source\PSoC4/RTC.h **** #define RTC__H2300 23
 112:Generated_Source\PSoC4/RTC.h **** 
 113:Generated_Source\PSoC4/RTC.h **** /* DST DayOfWeek setting constants */
 114:Generated_Source\PSoC4/RTC.h **** #define RTC__SUNDAY 1
 115:Generated_Source\PSoC4/RTC.h **** #define RTC__MONDAY 2
 116:Generated_Source\PSoC4/RTC.h **** #define RTC__TUESDAY 3
 117:Generated_Source\PSoC4/RTC.h **** #define RTC__WEDNESDAY 4
 118:Generated_Source\PSoC4/RTC.h **** #define RTC__THURSDAY 5
 119:Generated_Source\PSoC4/RTC.h **** #define RTC__FRIDAY 6
 120:Generated_Source\PSoC4/RTC.h **** #define RTC__SATURDAY 7
 121:Generated_Source\PSoC4/RTC.h **** 
 122:Generated_Source\PSoC4/RTC.h **** /* DST Month setting constants */
 123:Generated_Source\PSoC4/RTC.h **** #define RTC__JAN 1
 124:Generated_Source\PSoC4/RTC.h **** #define RTC__FEB 2
 125:Generated_Source\PSoC4/RTC.h **** #define RTC__MAR 3
 126:Generated_Source\PSoC4/RTC.h **** #define RTC__APR 4
 127:Generated_Source\PSoC4/RTC.h **** #define RTC__MAY 5
 128:Generated_Source\PSoC4/RTC.h **** #define RTC__JUN 6
 129:Generated_Source\PSoC4/RTC.h **** #define RTC__JUL 7
 130:Generated_Source\PSoC4/RTC.h **** #define RTC__AUG 8
 131:Generated_Source\PSoC4/RTC.h **** #define RTC__SEP 9
 132:Generated_Source\PSoC4/RTC.h **** #define RTC__OCT 10
 133:Generated_Source\PSoC4/RTC.h **** #define RTC__NOV 11
 134:Generated_Source\PSoC4/RTC.h **** #define RTC__DEC 12
 135:Generated_Source\PSoC4/RTC.h **** 
 136:Generated_Source\PSoC4/RTC.h **** /* DST WeekOfMonth setting constants */
 137:Generated_Source\PSoC4/RTC.h **** #define RTC__FIRST 1
 138:Generated_Source\PSoC4/RTC.h **** #define RTC__SECOND 2
 139:Generated_Source\PSoC4/RTC.h **** #define RTC__THIRD 3
 140:Generated_Source\PSoC4/RTC.h **** #define RTC__FOURTH 4
 141:Generated_Source\PSoC4/RTC.h **** #define RTC__FIFTH 5
 142:Generated_Source\PSoC4/RTC.h **** #define RTC__LAST 6
 143:Generated_Source\PSoC4/RTC.h **** 
 144:Generated_Source\PSoC4/RTC.h **** 
 145:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DATA_FORMAT     (0u)
 146:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_TIME_FORMAT     (0u)
 147:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_UPDATE_MODE     (0u)
 148:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_SECOND          (0u)
 149:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_MINUTE          (0u)
 150:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_HOUR            (0u)
 151:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DAY             (1u)
 152:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_MONTH           (1u)
 153:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_YEAR            (1970u)
 154:Generated_Source\PSoC4/RTC.h **** 
 155:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_ALARM_STATUS    (1u)
 156:Generated_Source\PSoC4/RTC.h **** 
 157:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STATUS      (1u)
 158:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_DATE_TYPE   (1u)
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 17


 159:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_MONTH (3uL)
 160:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_WOM   (6uL)
 161:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_DOM   (22uL)
 162:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_DOW   (1uL)
 163:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_HRS   (3uL)
 164:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_MONTH  (10uL)
 165:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_DOM    (22uL)
 166:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_DOW    (1uL)
 167:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_WOM    (6uL)
 168:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_HRS    (3uL)
 169:Generated_Source\PSoC4/RTC.h **** 
 170:Generated_Source\PSoC4/RTC.h **** /**
 171:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_constants
 172:Generated_Source\PSoC4/RTC.h **** * \{
 173:Generated_Source\PSoC4/RTC.h **** */
 174:Generated_Source\PSoC4/RTC.h **** 
 175:Generated_Source\PSoC4/RTC.h **** /**
 176:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_day_of_the_week Day of the week definitions
 177:Generated_Source\PSoC4/RTC.h **** * \{
 178:Generated_Source\PSoC4/RTC.h **** * Definitions of days in the week
 179:Generated_Source\PSoC4/RTC.h **** */
 180:Generated_Source\PSoC4/RTC.h **** #define RTC_SUNDAY     (RTC__SUNDAY)       /**< Sequential number of Sunday in the week */
 181:Generated_Source\PSoC4/RTC.h **** #define RTC_MONDAY     (RTC__MONDAY)       /**< Sequential number of Monday in the week */
 182:Generated_Source\PSoC4/RTC.h **** #define RTC_TUESDAY    (RTC__TUESDAY)      /**< Sequential number of Tuesday in the week */
 183:Generated_Source\PSoC4/RTC.h **** #define RTC_WEDNESDAY  (RTC__WEDNESDAY)    /**< Sequential number of Wednesday in the week */
 184:Generated_Source\PSoC4/RTC.h **** #define RTC_THURSDAY   (RTC__THURSDAY)     /**< Sequential number of Thursday in the week */
 185:Generated_Source\PSoC4/RTC.h **** #define RTC_FRIDAY     (RTC__FRIDAY)       /**< Sequential number of Friday in the week */
 186:Generated_Source\PSoC4/RTC.h **** #define RTC_SATURDAY   (RTC__SATURDAY)     /**< Sequential number of Saturday in the week */
 187:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_day_of_the_week */
 188:Generated_Source\PSoC4/RTC.h **** 
 189:Generated_Source\PSoC4/RTC.h **** /**
 190:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_dst_week_of_month DST Week of month setting constants definitions
 191:Generated_Source\PSoC4/RTC.h **** * \{
 192:Generated_Source\PSoC4/RTC.h **** * Week of month setting constants definitions for Daylight Saving Time feature
 193:Generated_Source\PSoC4/RTC.h **** */
 194:Generated_Source\PSoC4/RTC.h **** #define RTC_FIRST      (RTC__FIRST)   /**< First week in the month */
 195:Generated_Source\PSoC4/RTC.h **** #define RTC_SECOND     (RTC__SECOND)  /**< Second week in the month  */
 196:Generated_Source\PSoC4/RTC.h **** #define RTC_THIRD      (RTC__THIRD)   /**< Third week in the month  */
 197:Generated_Source\PSoC4/RTC.h **** #define RTC_FOURTH     (RTC__FOURTH)  /**< Fourth week in the month  */
 198:Generated_Source\PSoC4/RTC.h **** #define RTC_FIFTH      (RTC__FIFTH)   /**< Fifth week in the month  */
 199:Generated_Source\PSoC4/RTC.h **** #define RTC_LAST       (RTC__LAST)    /**< Last week in the month  */
 200:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_dst_week_of_month */
 201:Generated_Source\PSoC4/RTC.h **** 
 202:Generated_Source\PSoC4/RTC.h **** /**
 203:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_month Month definitions
 204:Generated_Source\PSoC4/RTC.h **** * \{
 205:Generated_Source\PSoC4/RTC.h **** * Constants definition for Months
 206:Generated_Source\PSoC4/RTC.h **** */
 207:Generated_Source\PSoC4/RTC.h **** #define RTC_JANUARY    (RTC__JAN)    /**< Sequential number of January in the year */
 208:Generated_Source\PSoC4/RTC.h **** #define RTC_FEBRUARY   (RTC__FEB)    /**< Sequential number of February in the year */
 209:Generated_Source\PSoC4/RTC.h **** #define RTC_MARCH      (RTC__MAR)    /**< Sequential number of March in the year */
 210:Generated_Source\PSoC4/RTC.h **** #define RTC_APRIL      (RTC__APR)    /**< Sequential number of April in the year */
 211:Generated_Source\PSoC4/RTC.h **** #define RTC_MAY        (RTC__MAY)    /**< Sequential number of May in the year */
 212:Generated_Source\PSoC4/RTC.h **** #define RTC_JUNE       (RTC__JUN)    /**< Sequential number of June in the year */
 213:Generated_Source\PSoC4/RTC.h **** #define RTC_JULY       (RTC__JUL)    /**< Sequential number of July in the year */
 214:Generated_Source\PSoC4/RTC.h **** #define RTC_AUGUST     (RTC__AUG)    /**< Sequential number of August in the year */
 215:Generated_Source\PSoC4/RTC.h **** #define RTC_SEPTEMBER  (RTC__SEP)    /**< Sequential number of September in the year */
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 18


 216:Generated_Source\PSoC4/RTC.h **** #define RTC_OCTOBER    (RTC__OCT)    /**< Sequential number of October in the year */
 217:Generated_Source\PSoC4/RTC.h **** #define RTC_NOVEMBER   (RTC__NOV)    /**< Sequential number of November in the year */
 218:Generated_Source\PSoC4/RTC.h **** #define RTC_DECEMBER   (RTC__DEC)    /**< Sequential number of December in the year */
 219:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_month */
 220:Generated_Source\PSoC4/RTC.h **** 
 221:Generated_Source\PSoC4/RTC.h **** /**
 222:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_am_pm AM/PM status definitions
 223:Generated_Source\PSoC4/RTC.h **** * \{
 224:Generated_Source\PSoC4/RTC.h **** * Definitions for 12 hour format for indicating the AM/PM period of day
 225:Generated_Source\PSoC4/RTC.h **** */
 226:Generated_Source\PSoC4/RTC.h **** #define RTC_AM                 (0u)    /**< AM period of day */
 227:Generated_Source\PSoC4/RTC.h **** #define RTC_PM                 (1u)    /**< PM period of day */
 228:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_am_pm */
 229:Generated_Source\PSoC4/RTC.h **** 
 230:Generated_Source\PSoC4/RTC.h **** /**
 231:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_hour_format Hour format definitions
 232:Generated_Source\PSoC4/RTC.h **** * \{
 233:Generated_Source\PSoC4/RTC.h **** * Definitions for hour format
 234:Generated_Source\PSoC4/RTC.h **** */
 235:Generated_Source\PSoC4/RTC.h **** #define RTC_12_HOURS_FORMAT    (RTC__HOUR_12) /**< The 12 hour (AM/PM) format */
 236:Generated_Source\PSoC4/RTC.h **** #define RTC_24_HOURS_FORMAT    (RTC__HOUR_24) /**< The 24 hour format */
 237:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_hour_format */
 238:Generated_Source\PSoC4/RTC.h **** 
 239:Generated_Source\PSoC4/RTC.h **** /**
 240:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_days_in_month Number of days in month definitions
 241:Generated_Source\PSoC4/RTC.h **** * \{
 242:Generated_Source\PSoC4/RTC.h **** * Definition of days in current month
 243:Generated_Source\PSoC4/RTC.h **** */
 244:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JANUARY     (31u)    /**< Number of days in January  */
 245:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_FEBRUARY    (28u)    /**< Number of days in February */
 246:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_MARCH       (31u)    /**< Number of days in March */
 247:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_APRIL       (30u)    /**< Number of days in April */
 248:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_MAY         (31u)    /**< Number of days in May */
 249:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JUNE        (30u)    /**< Number of days in June */
 250:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JULY        (31u)    /**< Number of days in July */
 251:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_AUGUST      (31u)    /**< Number of days in August */
 252:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_SEPTEMBER   (30u)    /**< Number of days in September */
 253:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_OCTOBER     (31u)    /**< Number of days in October */
 254:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_NOVEMBER    (30u)    /**< Number of days in November */
 255:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_DECEMBER    (31u)    /**< Number of days in December */
 256:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_days_in_month */
 257:Generated_Source\PSoC4/RTC.h **** 
 258:Generated_Source\PSoC4/RTC.h **** /**
 259:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_status Definitions of the RTC status values
 260:Generated_Source\PSoC4/RTC.h **** * \{
 261:Generated_Source\PSoC4/RTC.h **** * Definitions for status software register, which has flags for DST (DST),
 262:Generated_Source\PSoC4/RTC.h **** * Leap Year (LY), AM/PM (AM_PM).
 263:Generated_Source\PSoC4/RTC.h **** */
 264:Generated_Source\PSoC4/RTC.h **** 
 265:Generated_Source\PSoC4/RTC.h **** /** Status of Daylight Saving Time. This bit
 266:Generated_Source\PSoC4/RTC.h **** * goes high when the current time and date match the DST time and date and the 
 267:Generated_Source\PSoC4/RTC.h **** * time is incremented. This bit goes low after the DST interval and the time is 
 268:Generated_Source\PSoC4/RTC.h **** * decremented.
 269:Generated_Source\PSoC4/RTC.h **** */
 270:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_DST     (1uL << RTC_STATUS_DST_OFFSET)
 271:Generated_Source\PSoC4/RTC.h **** 
 272:Generated_Source\PSoC4/RTC.h **** /** Status of Leap Year. This bit goes high when the current year is a leap year */
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 19


 273:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_LY      (1uL << RTC_STATUS_LY_OFFSET)
 274:Generated_Source\PSoC4/RTC.h **** 
 275:Generated_Source\PSoC4/RTC.h **** /** Status of Current Time. This bit is low from midnight to noon and high from 
 276:Generated_Source\PSoC4/RTC.h **** *  noon to midnight. */
 277:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_AM_PM   (1uL << RTC_STATUS_AM_PM_OFFSET)
 278:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_status */
 279:Generated_Source\PSoC4/RTC.h **** 
 280:Generated_Source\PSoC4/RTC.h **** /**
 281:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_alarm_mask Definitions for Alarm Mask software register
 282:Generated_Source\PSoC4/RTC.h **** * \{
 283:Generated_Source\PSoC4/RTC.h **** * Definitions for Alarm Mask software register. These masks allow 
 284:Generated_Source\PSoC4/RTC.h **** * matching the alarm value register with the current value register.
 285:Generated_Source\PSoC4/RTC.h **** */
 286:Generated_Source\PSoC4/RTC.h **** 
 287:Generated_Source\PSoC4/RTC.h **** /** The second alarm mask allows matching the alarm second register with the 
 288:Generated_Source\PSoC4/RTC.h **** *   current second register.
 289:Generated_Source\PSoC4/RTC.h **** */
 290:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_SEC_MASK         (0x00000001uL)
 291:Generated_Source\PSoC4/RTC.h **** 
 292:Generated_Source\PSoC4/RTC.h **** /** The minute alarm mask allows matching the alarm minute register with the 
 293:Generated_Source\PSoC4/RTC.h **** *   current minute register.
 294:Generated_Source\PSoC4/RTC.h **** */
 295:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_MIN_MASK         (0x00000002uL)
 296:Generated_Source\PSoC4/RTC.h **** 
 297:Generated_Source\PSoC4/RTC.h **** /** The hour alarm mask allows matching the alarm hour register with the 
 298:Generated_Source\PSoC4/RTC.h **** *   current hour register.
 299:Generated_Source\PSoC4/RTC.h **** */
 300:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_HOUR_MASK        (0x00000004uL)
 301:Generated_Source\PSoC4/RTC.h **** 
 302:Generated_Source\PSoC4/RTC.h **** /** The day of the week alarm mask allows matching the alarm hour register with 
 303:Generated_Source\PSoC4/RTC.h **** *   the current day of the week register.
 304:Generated_Source\PSoC4/RTC.h **** */
 305:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_DAYOFWEEK_MASK   (0x00000008uL)
 306:Generated_Source\PSoC4/RTC.h **** 
 307:Generated_Source\PSoC4/RTC.h **** /** The day of the Month alarm mask allows matching the alarm hour register with 
 308:Generated_Source\PSoC4/RTC.h **** *   the current day of the Month register.
 309:Generated_Source\PSoC4/RTC.h **** */
 310:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_DAYOFMONTH_MASK  (0x00000010uL)
 311:Generated_Source\PSoC4/RTC.h **** 
 312:Generated_Source\PSoC4/RTC.h **** /** The month alarm mask allows matching the alarm hour register with the
 313:Generated_Source\PSoC4/RTC.h **** *   current month register.
 314:Generated_Source\PSoC4/RTC.h **** */
 315:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_MONTH_MASK       (0x00000020uL)
 316:Generated_Source\PSoC4/RTC.h **** 
 317:Generated_Source\PSoC4/RTC.h **** /** The year alarm mask allows matching the alarm hour register with the
 318:Generated_Source\PSoC4/RTC.h **** *   current year register.
 319:Generated_Source\PSoC4/RTC.h **** */
 320:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_YEAR_MASK        (0x00000040uL)
 321:Generated_Source\PSoC4/RTC.h **** 
 322:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_alarm_mask */
 323:Generated_Source\PSoC4/RTC.h **** /** \} group_constants */
 324:Generated_Source\PSoC4/RTC.h **** 
 325:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_PER_WEEK       (7u)
 326:Generated_Source\PSoC4/RTC.h **** 
 327:Generated_Source\PSoC4/RTC.h **** #define RTC_MONTHS_PER_YEAR     (12uL)
 328:Generated_Source\PSoC4/RTC.h **** 
 329:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_PER_DAY       (24uL)
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 20


 330:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_PER_HALF_DAY  (12uL)
 331:Generated_Source\PSoC4/RTC.h **** 
 332:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_MINUTE  (60uL)
 333:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_HOUR    (3600uL)
 334:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_DAY     (24uL * 3600uL)
 335:Generated_Source\PSoC4/RTC.h **** 
 336:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_LEAP_YEAR    (366uL * 24uL * 3600uL)
 337:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_NONLEAP_YEAR (365uL * 24uL * 3600uL)
 338:Generated_Source\PSoC4/RTC.h **** 
 339:Generated_Source\PSoC4/RTC.h **** #define RTC_UNIX_TIME_PM        ((12uL * 3600uL) + 1uL)
 340:Generated_Source\PSoC4/RTC.h **** 
 341:Generated_Source\PSoC4/RTC.h **** /* Unix time begins in 1970 year */
 342:Generated_Source\PSoC4/RTC.h **** #define RTC_YEAR_0             (1970u)
 343:Generated_Source\PSoC4/RTC.h **** 
 344:Generated_Source\PSoC4/RTC.h **** /* Definition of date register fields */
 345:Generated_Source\PSoC4/RTC.h **** #if(RTC_INITIAL_DATA_FORMAT == RTC__MM_DD_YYYY)
 346:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (28u)
 347:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (24u)
 348:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (20u)
 349:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (16u)
 350:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (12u)
 351:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (8u)
 352:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (4u)
 353:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (0u)
 354:Generated_Source\PSoC4/RTC.h **** #elif(RTC_INITIAL_DATA_FORMAT == RTC__DD_MM_YYYY)
 355:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (20u)
 356:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (16u)
 357:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (28u)
 358:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (24u)
 359:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (12u)
 360:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (8u)
 361:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (4u)
 362:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (0u)
 363:Generated_Source\PSoC4/RTC.h **** #else
 364:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (12u)
 365:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (8u)
 366:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (4u)
 367:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (0u)
 368:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (28u)
 369:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (24u)
 370:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (20u)
 371:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (16u)
 372:Generated_Source\PSoC4/RTC.h **** #endif /* (RTC_INITIAL_DATA_FORMAT == RTC__MM_DD_YYYY) */
 373:Generated_Source\PSoC4/RTC.h **** 
 374:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MONTH_MASK          (0x00000001uL << RTC_10_MONTH_OFFSET)
 375:Generated_Source\PSoC4/RTC.h **** #define RTC_MONTH_MASK             (0x0000000FuL << RTC_MONTH_OFFSET)
 376:Generated_Source\PSoC4/RTC.h **** #define RTC_10_DAY_MASK            (0x00000003uL << RTC_10_DAY_OFFSET)
 377:Generated_Source\PSoC4/RTC.h **** #define RTC_DAY_MASK               (0x0000000FuL << RTC_DAY_OFFSET)
 378:Generated_Source\PSoC4/RTC.h **** #define RTC_1000_YEAR_MASK         (0x00000003uL << RTC_1000_YEAR_OFFSET)
 379:Generated_Source\PSoC4/RTC.h **** #define RTC_100_YEAR_MASK          (0x0000000FuL << RTC_100_YEAR_OFFSET)
 380:Generated_Source\PSoC4/RTC.h **** #define RTC_10_YEAR_MASK           (0x0000000FuL << RTC_10_YEAR_OFFSET)
 381:Generated_Source\PSoC4/RTC.h **** #define RTC_YEAR_MASK              (0x0000000FuL << RTC_YEAR_OFFSET)
 382:Generated_Source\PSoC4/RTC.h **** 
 383:Generated_Source\PSoC4/RTC.h **** #define  RTC_MONTH_FULL_MASK       (RTC_10_MONTH_MASK  | RTC_MONTH_MASK)
 384:Generated_Source\PSoC4/RTC.h **** #define  RTC_DAY_FULL_MASK         (RTC_10_DAY_MASK    | RTC_DAY_MASK)
 385:Generated_Source\PSoC4/RTC.h **** #define  RTC_YEAR_FULL_MASK        (RTC_1000_YEAR_MASK | RTC_100_YEAR_MASK |\
 386:Generated_Source\PSoC4/RTC.h ****                                                  RTC_10_YEAR_MASK   | RTC_YEAR_MASK)
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 21


 387:Generated_Source\PSoC4/RTC.h **** 
 388:Generated_Source\PSoC4/RTC.h **** /* Definition of time register fields */
 389:Generated_Source\PSoC4/RTC.h **** #define RTC_TIME_FORMAT_OFFSET     (23u)
 390:Generated_Source\PSoC4/RTC.h **** #define RTC_PERIOD_OF_DAY_OFFSET   (22u)
 391:Generated_Source\PSoC4/RTC.h **** #define RTC_10_HOURS_OFFSET        (20u)
 392:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_OFFSET           (16u)
 393:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MINUTES_OFFSET      (12u)
 394:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_OFFSET         (8u)
 395:Generated_Source\PSoC4/RTC.h **** #define RTC_10_SECONDS_OFFSET      (4u)
 396:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_OFFSET         (0u)
 397:Generated_Source\PSoC4/RTC.h **** 
 398:Generated_Source\PSoC4/RTC.h **** #define RTC_TIME_FORMAT_MASK       (0x00000001uL << RTC_TIME_FORMAT_OFFSET)
 399:Generated_Source\PSoC4/RTC.h **** #define RTC_PERIOD_OF_DAY_MASK     (0x00000001uL << RTC_PERIOD_OF_DAY_OFFSET)
 400:Generated_Source\PSoC4/RTC.h **** #define RTC_10_HOURS_MASK          (0x00000003uL << RTC_10_HOURS_OFFSET)
 401:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_MASK             (0x0000000FuL << RTC_HOURS_OFFSET)
 402:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MINUTES_MASK        (0x00000007uL << RTC_10_MINUTES_OFFSET)
 403:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_MASK           (0x0000000FuL << RTC_MINUTES_OFFSET)
 404:Generated_Source\PSoC4/RTC.h **** #define RTC_10_SECONDS_MASK        (0x00000007uL << RTC_10_SECONDS_OFFSET)
 405:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_MASK           (0x0000000FuL << RTC_SECONDS_OFFSET)
 406:Generated_Source\PSoC4/RTC.h **** 
 407:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_FULL_MASK        (RTC_10_HOURS_MASK   | RTC_HOURS_MASK)
 408:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_FULL_MASK      (RTC_10_MINUTES_MASK | RTC_MINUTES_MASK)
 409:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_FULL_MASK      (RTC_10_SECONDS_MASK | RTC_SECONDS_MASK)
 410:Generated_Source\PSoC4/RTC.h **** 
 411:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_DST_OFFSET      (1u)
 412:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_ALARM_OFFSET    (2u)
 413:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_LY_OFFSET       (3u)
 414:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_AM_PM_OFFSET    (4u)
 415:Generated_Source\PSoC4/RTC.h **** 
 416:Generated_Source\PSoC4/RTC.h **** /* Number of bits per one BCD digit */
 417:Generated_Source\PSoC4/RTC.h **** #define RTC_BCD_NUMBER_SIZE        (4u)
 418:Generated_Source\PSoC4/RTC.h **** #define RTC_BCD_ONE_DIGIT_MASK     (0x0000000FuL)
 419:Generated_Source\PSoC4/RTC.h **** 
 420:Generated_Source\PSoC4/RTC.h **** 
 421:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 422:Generated_Source\PSoC4/RTC.h **** *    External Variables
 423:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 424:Generated_Source\PSoC4/RTC.h **** /**
 425:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_globals
 426:Generated_Source\PSoC4/RTC.h **** * \{
 427:Generated_Source\PSoC4/RTC.h **** */
 428:Generated_Source\PSoC4/RTC.h **** 
 429:Generated_Source\PSoC4/RTC.h **** /**
 430:Generated_Source\PSoC4/RTC.h **** * Indicates whether the RTC has been initialized; The variable is initialized to
 431:Generated_Source\PSoC4/RTC.h **** * 0 and set to 1 the first time RTC_Start() is called. This allows the component
 432:Generated_Source\PSoC4/RTC.h **** * to restart without reinitialization after the first call to the RTC_Start() 
 433:Generated_Source\PSoC4/RTC.h **** * routine.
 434:Generated_Source\PSoC4/RTC.h **** */
 435:Generated_Source\PSoC4/RTC.h **** extern uint8  RTC_initVar;
 436:Generated_Source\PSoC4/RTC.h **** 
 437:Generated_Source\PSoC4/RTC.h **** /** The DST start/stop status */
 438:Generated_Source\PSoC4/RTC.h **** extern uint8  RTC_dstStatus;
 439:Generated_Source\PSoC4/RTC.h **** 
 440:Generated_Source\PSoC4/RTC.h **** /**
 441:Generated_Source\PSoC4/RTC.h **** * The uint64 variable represents the standard Unix time (number of seconds 
 442:Generated_Source\PSoC4/RTC.h **** * elapsed from January 1, 1970 00:00 hours UTC) in 64-bit 
 443:Generated_Source\PSoC4/RTC.h **** */
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 22


 444:Generated_Source\PSoC4/RTC.h **** extern volatile uint64 RTC_unixTime;
 445:Generated_Source\PSoC4/RTC.h **** 
 446:Generated_Source\PSoC4/RTC.h **** /** The values for the time and date of the DST start */
 447:Generated_Source\PSoC4/RTC.h **** extern RTC_DST_TIME RTC_dstStartTime;
 448:Generated_Source\PSoC4/RTC.h **** 
 449:Generated_Source\PSoC4/RTC.h **** /** The values for the time and date of the DST stop */
 450:Generated_Source\PSoC4/RTC.h **** extern RTC_DST_TIME RTC_dstStopTime;
 451:Generated_Source\PSoC4/RTC.h **** 
 452:Generated_Source\PSoC4/RTC.h **** /**
 453:Generated_Source\PSoC4/RTC.h **** * The last updated time and date values are stored in this structure (update 
 454:Generated_Source\PSoC4/RTC.h **** * happens in Get time/date APIs)
 455:Generated_Source\PSoC4/RTC.h **** */
 456:Generated_Source\PSoC4/RTC.h **** extern RTC_DATE_TIME RTC_currentTimeDate;
 457:Generated_Source\PSoC4/RTC.h **** 
 458:Generated_Source\PSoC4/RTC.h **** /** The alarm time and date values are stored in this variable */
 459:Generated_Source\PSoC4/RTC.h **** extern RTC_DATE_TIME RTC_alarmCfgTimeDate;
 460:Generated_Source\PSoC4/RTC.h **** 
 461:Generated_Source\PSoC4/RTC.h **** /**
 462:Generated_Source\PSoC4/RTC.h **** * This variable is used to mask alarm events; mask seconds alarm, mask minutes 
 463:Generated_Source\PSoC4/RTC.h **** * alarm, and so on. It will have bit masks for each time item masking that item 
 464:Generated_Source\PSoC4/RTC.h **** * for alarm generation
 465:Generated_Source\PSoC4/RTC.h **** */
 466:Generated_Source\PSoC4/RTC.h **** extern uint32  RTC_alarmCfgMask;
 467:Generated_Source\PSoC4/RTC.h **** 
 468:Generated_Source\PSoC4/RTC.h **** /**
 469:Generated_Source\PSoC4/RTC.h **** * This variable is used to indicate current active alarm status per time item 
 470:Generated_Source\PSoC4/RTC.h **** * used in the alarm; whether seconds alarm is active, minute's alarm is active, 
 471:Generated_Source\PSoC4/RTC.h **** * and so on. It will have bit masks for each time item (seconds, minutes, hours,
 472:Generated_Source\PSoC4/RTC.h **** * day, and so on) showing the status
 473:Generated_Source\PSoC4/RTC.h **** */
 474:Generated_Source\PSoC4/RTC.h **** extern uint32 RTC_alarmCurStatus;
 475:Generated_Source\PSoC4/RTC.h **** 
 476:Generated_Source\PSoC4/RTC.h **** /** \} group_globals */
 477:Generated_Source\PSoC4/RTC.h **** 
 478:Generated_Source\PSoC4/RTC.h **** extern void (*RTC_alarmCallbackPtr)(void);
 479:Generated_Source\PSoC4/RTC.h **** 
 480:Generated_Source\PSoC4/RTC.h **** extern const uint16 RTC_daysBeforeMonthTbl[RTC_MONTHS_PER_YEAR];
 481:Generated_Source\PSoC4/RTC.h **** extern const uint8  RTC_daysInMonthTbl[RTC_MONTHS_PER_YEAR];
 482:Generated_Source\PSoC4/RTC.h **** 
 483:Generated_Source\PSoC4/RTC.h **** 
 484:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 485:Generated_Source\PSoC4/RTC.h **** *    Function Prototypes
 486:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 487:Generated_Source\PSoC4/RTC.h **** /**
 488:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_general
 489:Generated_Source\PSoC4/RTC.h **** * \{
 490:Generated_Source\PSoC4/RTC.h **** */
 491:Generated_Source\PSoC4/RTC.h **** void   RTC_Start(void);
 492:Generated_Source\PSoC4/RTC.h **** void   RTC_Stop(void);
 493:Generated_Source\PSoC4/RTC.h **** void   RTC_Init(void);
 494:Generated_Source\PSoC4/RTC.h **** void   RTC_SetUnixTime(uint64 unixTime);
 495:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetUnixTime(void);
 496:Generated_Source\PSoC4/RTC.h **** void   RTC_SetPeriod(uint32 ticks, uint32 refOneSecTicks);
 497:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetPeriod(void);
 498:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetRefOneSec(void);
 499:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDateAndTime(uint32 inputTime, uint32 inputDate);
 500:Generated_Source\PSoC4/RTC.h **** void   RTC_GetDateAndTime(RTC_DATE_TIME* dateTime);
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 23


 501:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetTime(void);
 502:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetDate(void);
 503:Generated_Source\PSoC4/RTC.h **** void   RTC_SetAlarmDateAndTime(const RTC_DATE_TIME* alarmTime);
 504:Generated_Source\PSoC4/RTC.h **** void   RTC_GetAlarmDateAndTime(RTC_DATE_TIME* alarmTimeDate);
 505:Generated_Source\PSoC4/RTC.h **** void   RTC_SetAlarmMask(uint32 mask);
 506:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetAlarmMask(void);
 507:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ReadStatus(void);
 508:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetAlarmStatus(void);
 509:Generated_Source\PSoC4/RTC.h **** void   RTC_ClearAlarmStatus(void);
 510:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDSTStartTime(const RTC_DST_TIME* dstStartTime,
 511:Generated_Source\PSoC4/RTC.h ****                                               RTC_DST_DATETYPE_ENUM type);
 512:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDSTStopTime(const RTC_DST_TIME* dstStopTime,
 513:Generated_Source\PSoC4/RTC.h ****                                              RTC_DST_DATETYPE_ENUM type);
 514:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ConvertBCDToDec(uint32 bcdNum);
 515:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ConvertDecToBCD(uint32 decNum);
 516:Generated_Source\PSoC4/RTC.h **** void   RTC_Update(void);
 517:Generated_Source\PSoC4/RTC.h **** void*  RTC_SetAlarmHandler(void (*CallbackFunction)(void));
 518:Generated_Source\PSoC4/RTC.h **** 
 519:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_ConstructDate(uint32 month, uint32 day, uint32 year);
 520:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_ConstructTime(uint32 timeFormat, uint32 stateAmPm, uint32 hour, uint32 min, uint3
 521:Generated_Source\PSoC4/RTC.h **** /** \} group_general */
 522:Generated_Source\PSoC4/RTC.h **** 
 523:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetTimeFormat(uint32 inputTime);
 524:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetTimeFormat(uint32 inputTime, uint32 timeFormat);
 525:Generated_Source\PSoC4/RTC.h **** 
 526:Generated_Source\PSoC4/RTC.h **** /**
 527:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_general
 528:Generated_Source\PSoC4/RTC.h **** * \{
 529:Generated_Source\PSoC4/RTC.h **** */
 530:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_LeapYear(uint32 year);
 531:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_IsBitSet(uint32 var, uint32 mask);
 532:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetSecond(uint32 inputTime);
 533:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetMinutes(uint32 inputTime);
 534:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetHours(uint32 inputTime);
 535:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetAmPm(uint32 inputTime);
 536:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetDay(uint32 date);
 537:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetMonth(uint32 date);
 538:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetYear(uint32 date);
 539:Generated_Source\PSoC4/RTC.h **** /** \} group_general */
 540:Generated_Source\PSoC4/RTC.h **** 
 541:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetSecond(uint32 inputTime, uint32 inputSecond);
 542:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetMinutes(uint32 inputTime, uint32 inputMinute);
 543:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetHours(uint32 inputTime, uint32 inputHours);
 544:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetAmPm(uint32 inputTime, uint32 periodOfDay);
 545:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetDay(uint32 inputDate, uint32 inputDay);
 546:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetMonth(uint32 inputDate, uint32 inputMonth);
 547:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetYear(uint32 inputDate, uint32 inputYear);
 548:Generated_Source\PSoC4/RTC.h **** 
 549:Generated_Source\PSoC4/RTC.h **** uint64 RTC_ConstructUnixAlarmTime(const RTC_DATE_TIME* alarmTime, uint8 alarmCfgMask);
 550:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetDstUnixTime(const RTC_DST_TIME* dstTime);
 551:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetNexAlarmTime(uint64 curUnixTime, uint8 alarmCfgMask);
 552:Generated_Source\PSoC4/RTC.h **** 
 553:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextMinSec(uint32 curVal);
 554:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextHour(uint32 curVal);
 555:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextDay(uint32 curYear, uint32 curMonth, uint32 curDay, uint32 alarmCfgMask);
 556:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextMonth(uint32 curMonth);
 557:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextYear(uint32 curYear);
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 24


 558:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetDayOfWeek(uint32 day, uint32 month, uint32 year);
 559:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_DaysBeforeMonth(uint32 month, uint32 year);
 560:Generated_Source\PSoC4/RTC.h **** 
 561:Generated_Source\PSoC4/RTC.h **** uint32 RTC_DaysInMonth(uint32 month, uint32 year);
 562:Generated_Source\PSoC4/RTC.h **** 
 563:Generated_Source\PSoC4/RTC.h **** /**
 564:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_general
 565:Generated_Source\PSoC4/RTC.h **** * \{
 566:Generated_Source\PSoC4/RTC.h **** */
 567:Generated_Source\PSoC4/RTC.h **** void   RTC_UnixToDateTime(RTC_DATE_TIME* dateTime, uint64 unixTime, uint32 timeFormat);
 568:Generated_Source\PSoC4/RTC.h **** uint64 RTC_DateTimeToUnix(uint32 inputDate, uint32 inputTime);
 569:Generated_Source\PSoC4/RTC.h **** 
 570:Generated_Source\PSoC4/RTC.h **** #if defined(CYDEV_RTC_SOURCE_WDT)
 571:Generated_Source\PSoC4/RTC.h ****     #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE))
 572:Generated_Source\PSoC4/RTC.h ****         static void RTC_CySysRtcSetCallback(uint32 wdtNumber);
 573:Generated_Source\PSoC4/RTC.h ****         static void RTC_CySysRtcResetCallback(uint32 wdtNumber);
 574:Generated_Source\PSoC4/RTC.h ****     #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE)) */
 575:Generated_Source\PSoC4/RTC.h **** #endif /* (CYDEV_RTC_SOURCE_WDT) */
 576:Generated_Source\PSoC4/RTC.h **** 
 577:Generated_Source\PSoC4/RTC.h **** /** \} group_general */
 578:Generated_Source\PSoC4/RTC.h **** 
 579:Generated_Source\PSoC4/RTC.h **** uint32 RTC_RelativeToFixed(uint32 dayOfWeek, uint32 weekOfMonth, uint32 month, uint32 year);
 580:Generated_Source\PSoC4/RTC.h **** 
 581:Generated_Source\PSoC4/RTC.h **** 
 582:Generated_Source\PSoC4/RTC.h **** 
 583:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 584:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_IsBitSet
 585:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 586:Generated_Source\PSoC4/RTC.h **** *
 587:Generated_Source\PSoC4/RTC.h **** * Checks the state of a bit passed through parameter.
 588:Generated_Source\PSoC4/RTC.h **** *
 589:Generated_Source\PSoC4/RTC.h **** * \param var
 590:Generated_Source\PSoC4/RTC.h **** * The variable to be checked.
 591:Generated_Source\PSoC4/RTC.h **** *
 592:Generated_Source\PSoC4/RTC.h **** * \param mask
 593:Generated_Source\PSoC4/RTC.h **** * The mask for a bit to be checked.
 594:Generated_Source\PSoC4/RTC.h **** *
 595:Generated_Source\PSoC4/RTC.h **** * \return
 596:Generated_Source\PSoC4/RTC.h **** *  0u - Bit is not set. <br> 1u - Bit is set.
 597:Generated_Source\PSoC4/RTC.h **** *
 598:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 599:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_IsBitSet(uint32 var, uint32 mask)
 600:Generated_Source\PSoC4/RTC.h **** {
 601:Generated_Source\PSoC4/RTC.h ****     return ((mask == (var & mask)) ? 1Lu : 0Lu);
 602:Generated_Source\PSoC4/RTC.h **** }
 603:Generated_Source\PSoC4/RTC.h **** 
 604:Generated_Source\PSoC4/RTC.h **** 
 605:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 606:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_LeapYear
 607:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 608:Generated_Source\PSoC4/RTC.h **** *
 609:Generated_Source\PSoC4/RTC.h **** * Checks whether the year passed through the parameter is leap or no.
 610:Generated_Source\PSoC4/RTC.h **** *
 611:Generated_Source\PSoC4/RTC.h **** * \param year
 612:Generated_Source\PSoC4/RTC.h **** * The year to be checked.
 613:Generated_Source\PSoC4/RTC.h **** *
 614:Generated_Source\PSoC4/RTC.h **** * \return
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 25


 615:Generated_Source\PSoC4/RTC.h **** * 0u - The year is not leap <br> 1u - The year is leap.
 616:Generated_Source\PSoC4/RTC.h **** *
 617:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 618:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_LeapYear(uint32 year)
 619:Generated_Source\PSoC4/RTC.h **** {
 620:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 621:Generated_Source\PSoC4/RTC.h **** 
 622:Generated_Source\PSoC4/RTC.h ****     if(((0u == (year % 4Lu)) && (0u != (year % 100Lu))) || (0u == (year % 400Lu)))
 623:Generated_Source\PSoC4/RTC.h ****     {
 624:Generated_Source\PSoC4/RTC.h ****         retVal = 1uL;
 625:Generated_Source\PSoC4/RTC.h ****     }
 626:Generated_Source\PSoC4/RTC.h ****     else
 627:Generated_Source\PSoC4/RTC.h ****     {
 628:Generated_Source\PSoC4/RTC.h ****         retVal = 0uL;
 629:Generated_Source\PSoC4/RTC.h ****     }
 630:Generated_Source\PSoC4/RTC.h **** 
 631:Generated_Source\PSoC4/RTC.h ****     return(retVal);
 632:Generated_Source\PSoC4/RTC.h **** }
 633:Generated_Source\PSoC4/RTC.h **** 
 634:Generated_Source\PSoC4/RTC.h **** 
 635:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 636:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetSecond
 637:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 638:Generated_Source\PSoC4/RTC.h **** *
 639:Generated_Source\PSoC4/RTC.h **** * Returns the seconds value from the time value that is passed as a/the 
 640:Generated_Source\PSoC4/RTC.h **** * parameter.
 641:Generated_Source\PSoC4/RTC.h **** *
 642:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 643:Generated_Source\PSoC4/RTC.h **** * The time value.
 644:Generated_Source\PSoC4/RTC.h **** *
 645:Generated_Source\PSoC4/RTC.h **** * \return
 646:Generated_Source\PSoC4/RTC.h **** * The seconds value.
 647:Generated_Source\PSoC4/RTC.h **** *
 648:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 649:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetSecond(uint32 inputTime)
 650:Generated_Source\PSoC4/RTC.h **** {
 651:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 652:Generated_Source\PSoC4/RTC.h **** 
 653:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_SECONDS_MASK) >> RTC_10_SECONDS_OFFSET) * 10u;
 654:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_SECONDS_MASK) >> RTC_SECONDS_OFFSET;
 655:Generated_Source\PSoC4/RTC.h **** 
 656:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 657:Generated_Source\PSoC4/RTC.h **** }
 658:Generated_Source\PSoC4/RTC.h **** 
 659:Generated_Source\PSoC4/RTC.h **** 
 660:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 661:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetMinutes
 662:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 663:Generated_Source\PSoC4/RTC.h **** *
 664:Generated_Source\PSoC4/RTC.h **** * Returns the minutes value from the time value that is passed as a/the 
 665:Generated_Source\PSoC4/RTC.h **** * parameter.
 666:Generated_Source\PSoC4/RTC.h **** *
 667:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 668:Generated_Source\PSoC4/RTC.h **** * The time value.
 669:Generated_Source\PSoC4/RTC.h **** *
 670:Generated_Source\PSoC4/RTC.h **** * \return
 671:Generated_Source\PSoC4/RTC.h **** * The minutes value.
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 26


 672:Generated_Source\PSoC4/RTC.h **** *
 673:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 674:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetMinutes(uint32 inputTime)
 675:Generated_Source\PSoC4/RTC.h **** {
 676:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 677:Generated_Source\PSoC4/RTC.h **** 
 678:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_MINUTES_MASK) >> RTC_10_MINUTES_OFFSET) * 10u;
 679:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_MINUTES_MASK) >> RTC_MINUTES_OFFSET;
 680:Generated_Source\PSoC4/RTC.h **** 
 681:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 682:Generated_Source\PSoC4/RTC.h **** }
 683:Generated_Source\PSoC4/RTC.h **** 
 684:Generated_Source\PSoC4/RTC.h **** 
 685:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 686:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetHours
 687:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 688:Generated_Source\PSoC4/RTC.h **** *
 689:Generated_Source\PSoC4/RTC.h **** * Returns the hours value from the time value that is passed as a/the parameter.
 690:Generated_Source\PSoC4/RTC.h **** *
 691:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 692:Generated_Source\PSoC4/RTC.h **** * The time value.
 693:Generated_Source\PSoC4/RTC.h **** *
 694:Generated_Source\PSoC4/RTC.h **** * \return
 695:Generated_Source\PSoC4/RTC.h **** * The hours value.
 696:Generated_Source\PSoC4/RTC.h **** *
 697:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 698:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetHours(uint32 inputTime)
 699:Generated_Source\PSoC4/RTC.h **** {
 700:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 701:Generated_Source\PSoC4/RTC.h **** 
 702:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_HOURS_MASK) >> RTC_10_HOURS_OFFSET) * 10u;
 359              		.loc 2 702 0
 360 0092 2B0D     		lsrs	r3, r5, #20
 361 0094 0322     		movs	r2, #3
 362 0096 9046     		mov	r8, r2
 363 0098 1340     		ands	r3, r2
 364 009a 9A00     		lsls	r2, r3, #2
 365 009c D318     		adds	r3, r2, r3
 366 009e 5900     		lsls	r1, r3, #1
 367              	.LVL40:
 703:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_HOURS_MASK) >> RTC_HOURS_OFFSET;
 368              		.loc 2 703 0
 369 00a0 2A0C     		lsrs	r2, r5, #16
 370 00a2 0F26     		movs	r6, #15
 371 00a4 3240     		ands	r2, r6
 372 00a6 8A18     		adds	r2, r1, r2
 373              	.LVL41:
 374              	.LBE15:
 375              	.LBE14:
 376              	.LBB16:
 377              	.LBB17:
 678:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_MINUTES_MASK) >> RTC_MINUTES_OFFSET;
 378              		.loc 2 678 0
 379 00a8 280B     		lsrs	r0, r5, #12
 380              	.LVL42:
 381 00aa 0723     		movs	r3, #7
 382 00ac 9C46     		mov	ip, r3
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 27


 383 00ae 1840     		ands	r0, r3
 384 00b0 8300     		lsls	r3, r0, #2
 385 00b2 1818     		adds	r0, r3, r0
 386 00b4 4100     		lsls	r1, r0, #1
 387              	.LVL43:
 679:Generated_Source\PSoC4/RTC.h **** 
 388              		.loc 2 679 0
 389 00b6 2B0A     		lsrs	r3, r5, #8
 390 00b8 3340     		ands	r3, r6
 391 00ba CB18     		adds	r3, r1, r3
 392              	.LVL44:
 393              	.LBE17:
 394              	.LBE16:
 395              	.LBB18:
 396              	.LBB19:
 653:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_SECONDS_MASK) >> RTC_SECONDS_OFFSET;
 397              		.loc 2 653 0
 398 00bc 2909     		lsrs	r1, r5, #4
 399 00be 6046     		mov	r0, ip
 400 00c0 0140     		ands	r1, r0
 401 00c2 8800     		lsls	r0, r1, #2
 402 00c4 4118     		adds	r1, r0, r1
 403 00c6 4800     		lsls	r0, r1, #1
 404              	.LVL45:
 654:Generated_Source\PSoC4/RTC.h **** 
 405              		.loc 2 654 0
 406 00c8 3540     		ands	r5, r6
 407              	.LVL46:
 408 00ca 4519     		adds	r5, r0, r5
 409              	.LVL47:
 410              	.LBE19:
 411              	.LBE18:
 189:main.c        ****             sprintf(dateBuffer, "%02lu/%02lu/%02lu", RTC_GetMonth(date), RTC_GetDay(date), RTC_GetY
 412              		.loc 1 189 0
 413 00cc 3968     		ldr	r1, [r7]
 414 00ce 0191     		str	r1, [sp, #4]
 415 00d0 0095     		str	r5, [sp]
 416 00d2 3049     		ldr	r1, .L21+36
 417 00d4 06A8     		add	r0, sp, #24
 418 00d6 FFF7FEFF 		bl	sprintf
 419              	.LVL48:
 420              	.LBB20:
 421              	.LBB21:
 704:Generated_Source\PSoC4/RTC.h **** 
 705:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 706:Generated_Source\PSoC4/RTC.h **** }
 707:Generated_Source\PSoC4/RTC.h **** 
 708:Generated_Source\PSoC4/RTC.h **** 
 709:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 710:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetAmPm
 711:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 712:Generated_Source\PSoC4/RTC.h **** *
 713:Generated_Source\PSoC4/RTC.h **** * Returns the AM/PM status from the time value that is passed as parameter.
 714:Generated_Source\PSoC4/RTC.h **** *
 715:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 716:Generated_Source\PSoC4/RTC.h **** * The time value.
 717:Generated_Source\PSoC4/RTC.h **** *
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 28


 718:Generated_Source\PSoC4/RTC.h **** * \return
 719:Generated_Source\PSoC4/RTC.h **** * The am/pm period of day, see \ref group_rtc_am_pm.
 720:Generated_Source\PSoC4/RTC.h **** *
 721:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 722:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetAmPm(uint32 inputTime)
 723:Generated_Source\PSoC4/RTC.h **** {
 724:Generated_Source\PSoC4/RTC.h ****     return (RTC_IsBitSet(inputTime, RTC_PERIOD_OF_DAY_MASK));
 725:Generated_Source\PSoC4/RTC.h **** }
 726:Generated_Source\PSoC4/RTC.h **** 
 727:Generated_Source\PSoC4/RTC.h **** 
 728:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 729:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetDay
 730:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 731:Generated_Source\PSoC4/RTC.h **** *
 732:Generated_Source\PSoC4/RTC.h **** * Returns the day value from the date value that is passed as parameter.
 733:Generated_Source\PSoC4/RTC.h **** *
 734:Generated_Source\PSoC4/RTC.h **** * \param date
 735:Generated_Source\PSoC4/RTC.h **** * The date value.
 736:Generated_Source\PSoC4/RTC.h **** *
 737:Generated_Source\PSoC4/RTC.h **** * \return
 738:Generated_Source\PSoC4/RTC.h **** * The day value.
 739:Generated_Source\PSoC4/RTC.h **** *
 740:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 741:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetDay(uint32 date)
 742:Generated_Source\PSoC4/RTC.h **** {
 743:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 744:Generated_Source\PSoC4/RTC.h **** 
 745:Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_10_DAY_MASK) >> RTC_10_DAY_OFFSET) * 10u;
 746:Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_DAY_MASK) >> RTC_DAY_OFFSET;
 747:Generated_Source\PSoC4/RTC.h **** 
 748:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 749:Generated_Source\PSoC4/RTC.h **** }
 750:Generated_Source\PSoC4/RTC.h **** 
 751:Generated_Source\PSoC4/RTC.h **** 
 752:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 753:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetMonth
 754:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 755:Generated_Source\PSoC4/RTC.h **** *
 756:Generated_Source\PSoC4/RTC.h **** * Returns the month value from the date value that is passed as parameter.
 757:Generated_Source\PSoC4/RTC.h **** *
 758:Generated_Source\PSoC4/RTC.h **** * \param date
 759:Generated_Source\PSoC4/RTC.h **** * The date value.
 760:Generated_Source\PSoC4/RTC.h **** *
 761:Generated_Source\PSoC4/RTC.h **** * \return
 762:Generated_Source\PSoC4/RTC.h **** * The month value.
 763:Generated_Source\PSoC4/RTC.h **** *
 764:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 765:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetMonth(uint32 date)
 766:Generated_Source\PSoC4/RTC.h **** {
 767:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 768:Generated_Source\PSoC4/RTC.h **** 
 769:Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_10_MONTH_MASK) >> RTC_10_MONTH_OFFSET) * 10u;
 422              		.loc 2 769 0
 423 00da 230F     		lsrs	r3, r4, #28
 424 00dc 0122     		movs	r2, #1
 425 00de 1340     		ands	r3, r2
 426 00e0 9A00     		lsls	r2, r3, #2
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 29


 427 00e2 D318     		adds	r3, r2, r3
 428 00e4 5900     		lsls	r1, r3, #1
 429              	.LVL49:
 770:Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_MONTH_MASK) >> RTC_MONTH_OFFSET;
 430              		.loc 2 770 0
 431 00e6 220E     		lsrs	r2, r4, #24
 432 00e8 3240     		ands	r2, r6
 433 00ea 8A18     		adds	r2, r1, r2
 434              	.LVL50:
 435              	.LBE21:
 436              	.LBE20:
 437              	.LBB22:
 438              	.LBB23:
 745:Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_DAY_MASK) >> RTC_DAY_OFFSET;
 439              		.loc 2 745 0
 440 00ec 210D     		lsrs	r1, r4, #20
 441 00ee 4346     		mov	r3, r8
 442 00f0 1940     		ands	r1, r3
 443 00f2 8B00     		lsls	r3, r1, #2
 444 00f4 5918     		adds	r1, r3, r1
 445 00f6 4800     		lsls	r0, r1, #1
 446              	.LVL51:
 746:Generated_Source\PSoC4/RTC.h **** 
 447              		.loc 2 746 0
 448 00f8 230C     		lsrs	r3, r4, #16
 449 00fa 3340     		ands	r3, r6
 450 00fc C318     		adds	r3, r0, r3
 451              	.LVL52:
 452              	.LBE23:
 453              	.LBE22:
 454              	.LBB24:
 455              	.LBB25:
 771:Generated_Source\PSoC4/RTC.h **** 
 772:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 773:Generated_Source\PSoC4/RTC.h **** }
 774:Generated_Source\PSoC4/RTC.h **** 
 775:Generated_Source\PSoC4/RTC.h **** 
 776:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 777:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetYear
 778:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 779:Generated_Source\PSoC4/RTC.h **** *
 780:Generated_Source\PSoC4/RTC.h **** * Returns the year value from the date value that is passed as parameter.
 781:Generated_Source\PSoC4/RTC.h **** *
 782:Generated_Source\PSoC4/RTC.h **** * \param date
 783:Generated_Source\PSoC4/RTC.h **** * The date value.
 784:Generated_Source\PSoC4/RTC.h **** *
 785:Generated_Source\PSoC4/RTC.h **** * \return
 786:Generated_Source\PSoC4/RTC.h **** * The year value.
 787:Generated_Source\PSoC4/RTC.h **** *
 788:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 789:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetYear(uint32 date)
 790:Generated_Source\PSoC4/RTC.h **** {
 791:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 792:Generated_Source\PSoC4/RTC.h **** 
 793:Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_1000_YEAR_MASK) >> RTC_1000_YEAR_OFFSET) * 1000u;
 456              		.loc 2 793 0
 457 00fe 200B     		lsrs	r0, r4, #12
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 30


 458 0100 4146     		mov	r1, r8
 459 0102 0840     		ands	r0, r1
 460 0104 FA25     		movs	r5, #250
 461 0106 AD00     		lsls	r5, r5, #2
 462 0108 2900     		movs	r1, r5
 463 010a 4143     		muls	r1, r0
 464              	.LVL53:
 794:Generated_Source\PSoC4/RTC.h ****     retVal += ((date & RTC_100_YEAR_MASK) >> RTC_100_YEAR_OFFSET) * 100u;
 465              		.loc 2 794 0
 466 010c 200A     		lsrs	r0, r4, #8
 467 010e 3040     		ands	r0, r6
 468 0110 6425     		movs	r5, #100
 469 0112 6843     		muls	r0, r5
 470 0114 4018     		adds	r0, r0, r1
 471              	.LVL54:
 795:Generated_Source\PSoC4/RTC.h ****     retVal += ((date & RTC_10_YEAR_MASK) >> RTC_10_YEAR_OFFSET) * 10u;
 472              		.loc 2 795 0
 473 0116 2109     		lsrs	r1, r4, #4
 474 0118 3140     		ands	r1, r6
 475 011a 8D00     		lsls	r5, r1, #2
 476 011c 6918     		adds	r1, r5, r1
 477 011e 4D00     		lsls	r5, r1, #1
 478 0120 4019     		adds	r0, r0, r5
 479              	.LVL55:
 796:Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_YEAR_MASK) >> RTC_YEAR_OFFSET;
 480              		.loc 2 796 0
 481 0122 3440     		ands	r4, r6
 482              	.LVL56:
 483 0124 0419     		adds	r4, r0, r4
 484              	.LVL57:
 485              	.LBE25:
 486              	.LBE24:
 190:main.c        **** 
 487              		.loc 1 190 0
 488 0126 0094     		str	r4, [sp]
 489 0128 1B49     		ldr	r1, .L21+40
 490 012a 02A8     		add	r0, sp, #8
 491 012c FFF7FEFF 		bl	sprintf
 492              	.LVL58:
 192:main.c        ****             UART_PutString(" | ");
 493              		.loc 1 192 0
 494 0130 06A8     		add	r0, sp, #24
 495 0132 FFF7FEFF 		bl	UART_PutString
 496              	.LVL59:
 193:main.c        ****             UART_PutString(dateBuffer);
 497              		.loc 1 193 0
 498 0136 194C     		ldr	r4, .L21+44
 499 0138 2000     		movs	r0, r4
 500 013a FFF7FEFF 		bl	UART_PutString
 501              	.LVL60:
 194:main.c        ****             UART_PutString(" | ");
 502              		.loc 1 194 0
 503 013e 02A8     		add	r0, sp, #8
 504 0140 FFF7FEFF 		bl	UART_PutString
 505              	.LVL61:
 195:main.c        **** 
 506              		.loc 1 195 0
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 31


 507 0144 2000     		movs	r0, r4
 508 0146 FFF7FEFF 		bl	UART_PutString
 509              	.LVL62:
 197:main.c        ****             {
 510              		.loc 1 197 0
 511 014a BB68     		ldr	r3, [r7, #8]
 512 014c 012B     		cmp	r3, #1
 513 014e 06D1     		bne	.L18
 199:main.c        ****                 alarmFlag  = 0u;
 514              		.loc 1 199 0
 515 0150 1348     		ldr	r0, .L21+48
 516 0152 FFF7FEFF 		bl	UART_PutString
 517              	.LVL63:
 200:main.c        ****             }
 518              		.loc 1 200 0
 519 0156 0022     		movs	r2, #0
 520 0158 0D4B     		ldr	r3, .L21+32
 521 015a 9A60     		str	r2, [r3, #8]
 522 015c 02E0     		b	.L19
 523              	.L18:
 204:main.c        ****             }
 524              		.loc 1 204 0
 525 015e 1148     		ldr	r0, .L21+52
 526 0160 FFF7FEFF 		bl	UART_PutString
 527              	.LVL64:
 528              	.L19:
 207:main.c        ****         }
 529              		.loc 1 207 0
 530 0164 1048     		ldr	r0, .L21+56
 531 0166 FFF7FEFF 		bl	UART_PutString
 532              	.LVL65:
 533              	.L17:
 228:main.c        ****         #endif    
 534              		.loc 1 228 0
 535 016a FFF7FEFF 		bl	CySysPmSleep
 536              	.LVL66:
 230:main.c        **** }
 537              		.loc 1 230 0
 538 016e 83E7     		b	.L20
 539              	.L22:
 540              		.align	2
 541              	.L21:
 542 0170 00000000 		.word	alarmTimeDate
 543 0174 30010400 		.word	262448
 544 0178 20201008 		.word	135274528
 545 017c 00000000 		.word	EnableRtcOperation
 546 0180 CC0C0000 		.word	3276
 547 0184 00481300 		.word	1263616
 548 0188 00000000 		.word	AlarmIsrHandler
 549 018c 00000000 		.word	Time1_ISR_Handler
 550 0190 00000000 		.word	.LANCHOR0
 551 0194 00000000 		.word	.LC9
 552 0198 18000000 		.word	.LC11
 553 019c 2C000000 		.word	.LC13
 554 01a0 30000000 		.word	.LC15
 555 01a4 3C000000 		.word	.LC17
 556 01a8 48000000 		.word	.LC19
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 32


 557              		.cfi_endproc
 558              	.LFE63:
 559              		.size	main, .-main
 560              		.global	byUpdateCapture
 561              		.comm	Timer1Count,4,4
 562              		.global	byUpdateTime
 563              		.global	ui100mS
 564              		.global	alarmFlag
 565              		.comm	alarmTimeDate,16,4
 566              		.section	.rodata.str1.4,"aMS",%progbits,1
 567              		.align	2
 568              	.LC9:
 569 0000 2530326C 		.ascii	"%02lu:%02lu:%02lu.%1lu\000"
 569      753A2530 
 569      326C753A 
 569      2530326C 
 569      752E2531 
 570 0017 00       		.space	1
 571              	.LC11:
 572 0018 2530326C 		.ascii	"%02lu/%02lu/%02lu\000"
 572      752F2530 
 572      326C752F 
 572      2530326C 
 572      7500
 573 002a 0000     		.space	2
 574              	.LC13:
 575 002c 207C2000 		.ascii	" | \000"
 576              	.LC15:
 577 0030 2020416C 		.ascii	"  Alarm \000"
 577      61726D20 
 577      00
 578 0039 000000   		.space	3
 579              	.LC17:
 580 003c 4E6F2061 		.ascii	"No alarm\000"
 580      6C61726D 
 580      00
 581 0045 000000   		.space	3
 582              	.LC19:
 583 0048 0D00     		.ascii	"\015\000"
 584              		.bss
 585              		.align	2
 586              		.set	.LANCHOR0,. + 0
 587              		.type	ui100mS, %object
 588              		.size	ui100mS, 4
 589              	ui100mS:
 590 0000 00000000 		.space	4
 591              		.type	byUpdateTime, %object
 592              		.size	byUpdateTime, 1
 593              	byUpdateTime:
 594 0004 00       		.space	1
 595 0005 000000   		.space	3
 596              		.type	alarmFlag, %object
 597              		.size	alarmFlag, 4
 598              	alarmFlag:
 599 0008 00000000 		.space	4
 600              		.type	byUpdateCapture, %object
 601              		.size	byUpdateCapture, 1
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 33


 602              	byUpdateCapture:
 603 000c 00       		.space	1
 604              		.text
 605              	.Letext0:
 606              		.file 3 "Generated_Source\\PSoC4/cytypes.h"
 607              		.file 4 "Generated_Source\\PSoC4/CyLFClk.h"
 608              		.file 5 "Generated_Source\\PSoC4/LFCLK_Out.h"
 609              		.file 6 "Generated_Source\\PSoC4/isrTimer1.h"
 610              		.file 7 "Generated_Source\\PSoC4/Timer1.h"
 611              		.file 8 "Generated_Source\\PSoC4/LED_Alarm.h"
 612              		.file 9 "Generated_Source\\PSoC4/LED_WdtIsr.h"
 613              		.file 10 "c:\\program files\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.1\\ar
 614              		.file 11 "Generated_Source\\PSoC4/UART.h"
 615              		.file 12 "Generated_Source\\PSoC4/cyPm.h"
 616              		.section	.debug_info,"",%progbits
 617              	.Ldebug_info0:
 618 0000 7B090000 		.4byte	0x97b
 619 0004 0400     		.2byte	0x4
 620 0006 00000000 		.4byte	.Ldebug_abbrev0
 621 000a 04       		.byte	0x4
 622 000b 01       		.uleb128 0x1
 623 000c E4000000 		.4byte	.LASF83
 624 0010 0C       		.byte	0xc
 625 0011 EC030000 		.4byte	.LASF84
 626 0015 20040000 		.4byte	.LASF85
 627 0019 00000000 		.4byte	.Ldebug_ranges0+0
 628 001d 00000000 		.4byte	0
 629 0021 00000000 		.4byte	.Ldebug_line0
 630 0025 02       		.uleb128 0x2
 631 0026 01       		.byte	0x1
 632 0027 06       		.byte	0x6
 633 0028 AF020000 		.4byte	.LASF0
 634 002c 02       		.uleb128 0x2
 635 002d 01       		.byte	0x1
 636 002e 08       		.byte	0x8
 637 002f 76020000 		.4byte	.LASF1
 638 0033 02       		.uleb128 0x2
 639 0034 02       		.byte	0x2
 640 0035 05       		.byte	0x5
 641 0036 66000000 		.4byte	.LASF2
 642 003a 02       		.uleb128 0x2
 643 003b 02       		.byte	0x2
 644 003c 07       		.byte	0x7
 645 003d 4F030000 		.4byte	.LASF3
 646 0041 02       		.uleb128 0x2
 647 0042 04       		.byte	0x4
 648 0043 05       		.byte	0x5
 649 0044 E7010000 		.4byte	.LASF4
 650 0048 02       		.uleb128 0x2
 651 0049 04       		.byte	0x4
 652 004a 07       		.byte	0x7
 653 004b F3030000 		.4byte	.LASF5
 654 004f 02       		.uleb128 0x2
 655 0050 08       		.byte	0x8
 656 0051 05       		.byte	0x5
 657 0052 8B050000 		.4byte	.LASF6
 658 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 34


 659 0057 08       		.byte	0x8
 660 0058 07       		.byte	0x7
 661 0059 D2020000 		.4byte	.LASF7
 662 005d 03       		.uleb128 0x3
 663 005e 04       		.byte	0x4
 664 005f 05       		.byte	0x5
 665 0060 696E7400 		.ascii	"int\000"
 666 0064 02       		.uleb128 0x2
 667 0065 04       		.byte	0x4
 668 0066 07       		.byte	0x7
 669 0067 FA020000 		.4byte	.LASF8
 670 006b 04       		.uleb128 0x4
 671 006c 7C010000 		.4byte	.LASF9
 672 0070 03       		.byte	0x3
 673 0071 E401     		.2byte	0x1e4
 674 0073 2C000000 		.4byte	0x2c
 675 0077 04       		.uleb128 0x4
 676 0078 C4030000 		.4byte	.LASF10
 677 007c 03       		.byte	0x3
 678 007d E501     		.2byte	0x1e5
 679 007f 3A000000 		.4byte	0x3a
 680 0083 04       		.uleb128 0x4
 681 0084 11040000 		.4byte	.LASF11
 682 0088 03       		.byte	0x3
 683 0089 E601     		.2byte	0x1e6
 684 008b 48000000 		.4byte	0x48
 685 008f 02       		.uleb128 0x2
 686 0090 04       		.byte	0x4
 687 0091 04       		.byte	0x4
 688 0092 BB010000 		.4byte	.LASF12
 689 0096 02       		.uleb128 0x2
 690 0097 08       		.byte	0x8
 691 0098 04       		.byte	0x4
 692 0099 32050000 		.4byte	.LASF13
 693 009d 02       		.uleb128 0x2
 694 009e 01       		.byte	0x1
 695 009f 08       		.byte	0x8
 696 00a0 69030000 		.4byte	.LASF14
 697 00a4 05       		.uleb128 0x5
 698 00a5 01       		.byte	0x1
 699 00a6 2C000000 		.4byte	0x2c
 700 00aa 04       		.byte	0x4
 701 00ab 1A       		.byte	0x1a
 702 00ac BD000000 		.4byte	0xbd
 703 00b0 06       		.uleb128 0x6
 704 00b1 99050000 		.4byte	.LASF15
 705 00b5 00       		.byte	0
 706 00b6 06       		.uleb128 0x6
 707 00b7 30000000 		.4byte	.LASF16
 708 00bb 01       		.byte	0x1
 709 00bc 00       		.byte	0
 710 00bd 02       		.uleb128 0x2
 711 00be 08       		.byte	0x8
 712 00bf 04       		.byte	0x4
 713 00c0 5D020000 		.4byte	.LASF17
 714 00c4 02       		.uleb128 0x2
 715 00c5 04       		.byte	0x4
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 35


 716 00c6 07       		.byte	0x7
 717 00c7 70000000 		.4byte	.LASF18
 718 00cb 07       		.uleb128 0x7
 719 00cc 10       		.byte	0x10
 720 00cd 02       		.byte	0x2
 721 00ce 2E       		.byte	0x2e
 722 00cf 04010000 		.4byte	0x104
 723 00d3 08       		.uleb128 0x8
 724 00d4 3D030000 		.4byte	.LASF19
 725 00d8 02       		.byte	0x2
 726 00d9 30       		.byte	0x30
 727 00da 83000000 		.4byte	0x83
 728 00de 00       		.byte	0
 729 00df 08       		.uleb128 0x8
 730 00e0 A9000000 		.4byte	.LASF20
 731 00e4 02       		.byte	0x2
 732 00e5 31       		.byte	0x31
 733 00e6 83000000 		.4byte	0x83
 734 00ea 04       		.byte	0x4
 735 00eb 08       		.uleb128 0x8
 736 00ec AE000000 		.4byte	.LASF21
 737 00f0 02       		.byte	0x2
 738 00f1 32       		.byte	0x32
 739 00f2 83000000 		.4byte	0x83
 740 00f6 08       		.byte	0x8
 741 00f7 08       		.uleb128 0x8
 742 00f8 62030000 		.4byte	.LASF22
 743 00fc 02       		.byte	0x2
 744 00fd 33       		.byte	0x33
 745 00fe 83000000 		.4byte	0x83
 746 0102 0C       		.byte	0xc
 747 0103 00       		.byte	0
 748 0104 09       		.uleb128 0x9
 749 0105 32020000 		.4byte	.LASF23
 750 0109 02       		.byte	0x2
 751 010a 34       		.byte	0x34
 752 010b CB000000 		.4byte	0xcb
 753 010f 0A       		.uleb128 0xa
 754 0110 05040000 		.4byte	.LASF24
 755 0114 02       		.byte	0x2
 756 0115 1503     		.2byte	0x315
 757 0117 83000000 		.4byte	0x83
 758 011b 03       		.byte	0x3
 759 011c 39010000 		.4byte	0x139
 760 0120 0B       		.uleb128 0xb
 761 0121 A9000000 		.4byte	.LASF20
 762 0125 02       		.byte	0x2
 763 0126 1503     		.2byte	0x315
 764 0128 83000000 		.4byte	0x83
 765 012c 0C       		.uleb128 0xc
 766 012d 8C010000 		.4byte	.LASF26
 767 0131 02       		.byte	0x2
 768 0132 1703     		.2byte	0x317
 769 0134 83000000 		.4byte	0x83
 770 0138 00       		.byte	0
 771 0139 0A       		.uleb128 0xa
 772 013a E1030000 		.4byte	.LASF25
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 36


 773 013e 02       		.byte	0x2
 774 013f E502     		.2byte	0x2e5
 775 0141 83000000 		.4byte	0x83
 776 0145 03       		.byte	0x3
 777 0146 63010000 		.4byte	0x163
 778 014a 0B       		.uleb128 0xb
 779 014b A9000000 		.4byte	.LASF20
 780 014f 02       		.byte	0x2
 781 0150 E502     		.2byte	0x2e5
 782 0152 83000000 		.4byte	0x83
 783 0156 0C       		.uleb128 0xc
 784 0157 8C010000 		.4byte	.LASF26
 785 015b 02       		.byte	0x2
 786 015c E702     		.2byte	0x2e7
 787 015e 83000000 		.4byte	0x83
 788 0162 00       		.byte	0
 789 0163 0A       		.uleb128 0xa
 790 0164 79000000 		.4byte	.LASF27
 791 0168 02       		.byte	0x2
 792 0169 FD02     		.2byte	0x2fd
 793 016b 83000000 		.4byte	0x83
 794 016f 03       		.byte	0x3
 795 0170 8D010000 		.4byte	0x18d
 796 0174 0B       		.uleb128 0xb
 797 0175 A9000000 		.4byte	.LASF20
 798 0179 02       		.byte	0x2
 799 017a FD02     		.2byte	0x2fd
 800 017c 83000000 		.4byte	0x83
 801 0180 0C       		.uleb128 0xc
 802 0181 8C010000 		.4byte	.LASF26
 803 0185 02       		.byte	0x2
 804 0186 FF02     		.2byte	0x2ff
 805 0188 83000000 		.4byte	0x83
 806 018c 00       		.byte	0
 807 018d 0A       		.uleb128 0xa
 808 018e C7000000 		.4byte	.LASF28
 809 0192 02       		.byte	0x2
 810 0193 8902     		.2byte	0x289
 811 0195 83000000 		.4byte	0x83
 812 0199 03       		.byte	0x3
 813 019a B7010000 		.4byte	0x1b7
 814 019e 0B       		.uleb128 0xb
 815 019f 53020000 		.4byte	.LASF29
 816 01a3 02       		.byte	0x2
 817 01a4 8902     		.2byte	0x289
 818 01a6 83000000 		.4byte	0x83
 819 01aa 0C       		.uleb128 0xc
 820 01ab 8C010000 		.4byte	.LASF26
 821 01af 02       		.byte	0x2
 822 01b0 8B02     		.2byte	0x28b
 823 01b2 83000000 		.4byte	0x83
 824 01b6 00       		.byte	0
 825 01b7 0A       		.uleb128 0xa
 826 01b8 73030000 		.4byte	.LASF30
 827 01bc 02       		.byte	0x2
 828 01bd A202     		.2byte	0x2a2
 829 01bf 83000000 		.4byte	0x83
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 37


 830 01c3 03       		.byte	0x3
 831 01c4 E1010000 		.4byte	0x1e1
 832 01c8 0B       		.uleb128 0xb
 833 01c9 53020000 		.4byte	.LASF29
 834 01cd 02       		.byte	0x2
 835 01ce A202     		.2byte	0x2a2
 836 01d0 83000000 		.4byte	0x83
 837 01d4 0C       		.uleb128 0xc
 838 01d5 8C010000 		.4byte	.LASF26
 839 01d9 02       		.byte	0x2
 840 01da A402     		.2byte	0x2a4
 841 01dc 83000000 		.4byte	0x83
 842 01e0 00       		.byte	0
 843 01e1 0A       		.uleb128 0xa
 844 01e2 69020000 		.4byte	.LASF31
 845 01e6 02       		.byte	0x2
 846 01e7 BA02     		.2byte	0x2ba
 847 01e9 83000000 		.4byte	0x83
 848 01ed 03       		.byte	0x3
 849 01ee 0B020000 		.4byte	0x20b
 850 01f2 0B       		.uleb128 0xb
 851 01f3 53020000 		.4byte	.LASF29
 852 01f7 02       		.byte	0x2
 853 01f8 BA02     		.2byte	0x2ba
 854 01fa 83000000 		.4byte	0x83
 855 01fe 0C       		.uleb128 0xc
 856 01ff 8C010000 		.4byte	.LASF26
 857 0203 02       		.byte	0x2
 858 0204 BC02     		.2byte	0x2bc
 859 0206 83000000 		.4byte	0x83
 860 020a 00       		.byte	0
 861 020b 0D       		.uleb128 0xd
 862 020c B0040000 		.4byte	.LASF32
 863 0210 01       		.byte	0x1
 864 0211 F8       		.byte	0xf8
 865 0212 00000000 		.4byte	.LFB64
 866 0216 44000000 		.4byte	.LFE64-.LFB64
 867 021a 01       		.uleb128 0x1
 868 021b 9C       		.byte	0x9c
 869 021c CC020000 		.4byte	0x2cc
 870 0220 0E       		.uleb128 0xe
 871 0221 0A000000 		.4byte	.LVL0
 872 0225 EF070000 		.4byte	0x7ef
 873 0229 35020000 		.4byte	0x235
 874 022d 0F       		.uleb128 0xf
 875 022e 01       		.uleb128 0x1
 876 022f 50       		.byte	0x50
 877 0230 03       		.uleb128 0x3
 878 0231 40       		.byte	0x40
 879 0232 4A       		.byte	0x4a
 880 0233 24       		.byte	0x24
 881 0234 00       		.byte	0
 882 0235 0E       		.uleb128 0xe
 883 0236 10000000 		.4byte	.LVL1
 884 023a FA070000 		.4byte	0x7fa
 885 023e 48020000 		.4byte	0x248
 886 0242 0F       		.uleb128 0xf
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 38


 887 0243 01       		.uleb128 0x1
 888 0244 50       		.byte	0x50
 889 0245 01       		.uleb128 0x1
 890 0246 31       		.byte	0x31
 891 0247 00       		.byte	0
 892 0248 0E       		.uleb128 0xe
 893 0249 18000000 		.4byte	.LVL2
 894 024d 05080000 		.4byte	0x805
 895 0251 60020000 		.4byte	0x260
 896 0255 0F       		.uleb128 0xf
 897 0256 01       		.uleb128 0x1
 898 0257 50       		.byte	0x50
 899 0258 01       		.uleb128 0x1
 900 0259 30       		.byte	0x30
 901 025a 0F       		.uleb128 0xf
 902 025b 01       		.uleb128 0x1
 903 025c 51       		.byte	0x51
 904 025d 01       		.uleb128 0x1
 905 025e 31       		.byte	0x31
 906 025f 00       		.byte	0
 907 0260 0E       		.uleb128 0xe
 908 0261 20000000 		.4byte	.LVL3
 909 0265 10080000 		.4byte	0x810
 910 0269 7A020000 		.4byte	0x27a
 911 026d 0F       		.uleb128 0xf
 912 026e 01       		.uleb128 0x1
 913 026f 50       		.byte	0x50
 914 0270 01       		.uleb128 0x1
 915 0271 30       		.byte	0x30
 916 0272 0F       		.uleb128 0xf
 917 0273 01       		.uleb128 0x1
 918 0274 51       		.byte	0x51
 919 0275 03       		.uleb128 0x3
 920 0276 0A       		.byte	0xa
 921 0277 CC0C     		.2byte	0xccc
 922 0279 00       		.byte	0
 923 027a 0E       		.uleb128 0xe
 924 027b 26000000 		.4byte	.LVL4
 925 027f 1B080000 		.4byte	0x81b
 926 0283 8D020000 		.4byte	0x28d
 927 0287 0F       		.uleb128 0xf
 928 0288 01       		.uleb128 0x1
 929 0289 50       		.byte	0x50
 930 028a 01       		.uleb128 0x1
 931 028b 31       		.byte	0x31
 932 028c 00       		.byte	0
 933 028d 0E       		.uleb128 0xe
 934 028e 2E000000 		.4byte	.LVL5
 935 0292 26080000 		.4byte	0x826
 936 0296 A9020000 		.4byte	0x2a9
 937 029a 0F       		.uleb128 0xf
 938 029b 01       		.uleb128 0x1
 939 029c 50       		.byte	0x50
 940 029d 01       		.uleb128 0x1
 941 029e 30       		.byte	0x30
 942 029f 0F       		.uleb128 0xf
 943 02a0 01       		.uleb128 0x1
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 39


 944 02a1 51       		.byte	0x51
 945 02a2 05       		.uleb128 0x5
 946 02a3 03       		.byte	0x3
 947 02a4 00000000 		.4byte	UpdateTimeIsrHandler
 948 02a8 00       		.byte	0
 949 02a9 0E       		.uleb128 0xe
 950 02aa 34000000 		.4byte	.LVL6
 951 02ae 31080000 		.4byte	0x831
 952 02b2 BC020000 		.4byte	0x2bc
 953 02b6 0F       		.uleb128 0xf
 954 02b7 01       		.uleb128 0x1
 955 02b8 50       		.byte	0x50
 956 02b9 01       		.uleb128 0x1
 957 02ba 30       		.byte	0x30
 958 02bb 00       		.byte	0
 959 02bc 10       		.uleb128 0x10
 960 02bd 3A000000 		.4byte	.LVL7
 961 02c1 3C080000 		.4byte	0x83c
 962 02c5 0F       		.uleb128 0xf
 963 02c6 01       		.uleb128 0x1
 964 02c7 50       		.byte	0x50
 965 02c8 01       		.uleb128 0x1
 966 02c9 36       		.byte	0x36
 967 02ca 00       		.byte	0
 968 02cb 00       		.byte	0
 969 02cc 11       		.uleb128 0x11
 970 02cd 50050000 		.4byte	.LASF33
 971 02d1 01       		.byte	0x1
 972 02d2 1C01     		.2byte	0x11c
 973 02d4 00000000 		.4byte	.LFB65
 974 02d8 24000000 		.4byte	.LFE65-.LFB65
 975 02dc 01       		.uleb128 0x1
 976 02dd 9C       		.byte	0x9c
 977 02de EC020000 		.4byte	0x2ec
 978 02e2 12       		.uleb128 0x12
 979 02e3 18000000 		.4byte	.LVL8
 980 02e7 47080000 		.4byte	0x847
 981 02eb 00       		.byte	0
 982 02ec 11       		.uleb128 0x11
 983 02ed 80040000 		.4byte	.LASF34
 984 02f1 01       		.byte	0x1
 985 02f2 3801     		.2byte	0x138
 986 02f4 00000000 		.4byte	.LFB66
 987 02f8 14000000 		.4byte	.LFE66-.LFB66
 988 02fc 01       		.uleb128 0x1
 989 02fd 9C       		.byte	0x9c
 990 02fe 0C030000 		.4byte	0x30c
 991 0302 12       		.uleb128 0x12
 992 0303 0C000000 		.4byte	.LVL9
 993 0307 53080000 		.4byte	0x853
 994 030b 00       		.byte	0
 995 030c 11       		.uleb128 0x11
 996 030d 20050000 		.4byte	.LASF35
 997 0311 01       		.byte	0x1
 998 0312 5201     		.2byte	0x152
 999 0314 00000000 		.4byte	.LFB67
 1000 0318 48000000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 40


 1001 031c 01       		.uleb128 0x1
 1002 031d 9C       		.byte	0x9c
 1003 031e 8F030000 		.4byte	0x38f
 1004 0322 13       		.uleb128 0x13
 1005 0323 CF010000 		.4byte	.LASF36
 1006 0327 01       		.byte	0x1
 1007 0328 5F01     		.2byte	0x15f
 1008 032a 83000000 		.4byte	0x83
 1009 032e 00000000 		.4byte	.LLST0
 1010 0332 12       		.uleb128 0x12
 1011 0333 06000000 		.4byte	.LVL10
 1012 0337 5F080000 		.4byte	0x85f
 1013 033b 12       		.uleb128 0x12
 1014 033c 0A000000 		.4byte	.LVL11
 1015 0340 6A080000 		.4byte	0x86a
 1016 0344 0E       		.uleb128 0xe
 1017 0345 10000000 		.4byte	.LVL13
 1018 0349 76080000 		.4byte	0x876
 1019 034d 58030000 		.4byte	0x358
 1020 0351 0F       		.uleb128 0xf
 1021 0352 01       		.uleb128 0x1
 1022 0353 50       		.byte	0x50
 1023 0354 02       		.uleb128 0x2
 1024 0355 74       		.byte	0x74
 1025 0356 00       		.sleb128 0
 1026 0357 00       		.byte	0
 1027 0358 12       		.uleb128 0x12
 1028 0359 18000000 		.4byte	.LVL14
 1029 035d 82080000 		.4byte	0x882
 1030 0361 12       		.uleb128 0x12
 1031 0362 20000000 		.4byte	.LVL15
 1032 0366 8E080000 		.4byte	0x88e
 1033 036a 12       		.uleb128 0x12
 1034 036b 28000000 		.4byte	.LVL16
 1035 036f 99080000 		.4byte	0x899
 1036 0373 12       		.uleb128 0x12
 1037 0374 30000000 		.4byte	.LVL17
 1038 0378 82080000 		.4byte	0x882
 1039 037c 12       		.uleb128 0x12
 1040 037d 38000000 		.4byte	.LVL18
 1041 0381 A4080000 		.4byte	0x8a4
 1042 0385 12       		.uleb128 0x12
 1043 0386 40000000 		.4byte	.LVL19
 1044 038a AF080000 		.4byte	0x8af
 1045 038e 00       		.byte	0
 1046 038f 14       		.uleb128 0x14
 1047 0390 6E030000 		.4byte	.LASF86
 1048 0394 01       		.byte	0x1
 1049 0395 64       		.byte	0x64
 1050 0396 5D000000 		.4byte	0x5d
 1051 039a 00000000 		.4byte	.LFB63
 1052 039e AC010000 		.4byte	.LFE63-.LFB63
 1053 03a2 01       		.uleb128 0x1
 1054 03a3 9C       		.byte	0x9c
 1055 03a4 53070000 		.4byte	0x753
 1056 03a8 15       		.uleb128 0x15
 1057 03a9 80050000 		.4byte	.LASF37
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 41


 1058 03ad 01       		.byte	0x1
 1059 03ae 66       		.byte	0x66
 1060 03af 53070000 		.4byte	0x753
 1061 03b3 02       		.uleb128 0x2
 1062 03b4 91       		.byte	0x91
 1063 03b5 58       		.sleb128 -40
 1064 03b6 15       		.uleb128 0x15
 1065 03b7 92030000 		.4byte	.LASF38
 1066 03bb 01       		.byte	0x1
 1067 03bc 67       		.byte	0x67
 1068 03bd 53070000 		.4byte	0x753
 1069 03c1 02       		.uleb128 0x2
 1070 03c2 91       		.byte	0x91
 1071 03c3 48       		.sleb128 -56
 1072 03c4 16       		.uleb128 0x16
 1073 03c5 47000000 		.4byte	.LASF39
 1074 03c9 01       		.byte	0x1
 1075 03ca 6A       		.byte	0x6a
 1076 03cb 53070000 		.4byte	0x753
 1077 03cf 17       		.uleb128 0x17
 1078 03d0 3D030000 		.4byte	.LASF19
 1079 03d4 01       		.byte	0x1
 1080 03d5 6B       		.byte	0x6b
 1081 03d6 83000000 		.4byte	0x83
 1082 03da 1E000000 		.4byte	.LLST1
 1083 03de 17       		.uleb128 0x17
 1084 03df A9000000 		.4byte	.LASF20
 1085 03e3 01       		.byte	0x1
 1086 03e4 6C       		.byte	0x6c
 1087 03e5 83000000 		.4byte	0x83
 1088 03e9 3C000000 		.4byte	.LLST2
 1089 03ed 16       		.uleb128 0x16
 1090 03ee CF010000 		.4byte	.LASF36
 1091 03f2 01       		.byte	0x1
 1092 03f3 6D       		.byte	0x6d
 1093 03f4 83000000 		.4byte	0x83
 1094 03f8 16       		.uleb128 0x16
 1095 03f9 82010000 		.4byte	.LASF40
 1096 03fd 01       		.byte	0x1
 1097 03fe 6E       		.byte	0x6e
 1098 03ff 83000000 		.4byte	0x83
 1099 0403 18       		.uleb128 0x18
 1100 0404 E1010000 		.4byte	0x1e1
 1101 0408 92000000 		.4byte	.LBB14
 1102 040c 16000000 		.4byte	.LBE14-.LBB14
 1103 0410 01       		.byte	0x1
 1104 0411 BD       		.byte	0xbd
 1105 0412 33040000 		.4byte	0x433
 1106 0416 19       		.uleb128 0x19
 1107 0417 F2010000 		.4byte	0x1f2
 1108 041b 5A000000 		.4byte	.LLST3
 1109 041f 1A       		.uleb128 0x1a
 1110 0420 92000000 		.4byte	.LBB15
 1111 0424 16000000 		.4byte	.LBE15-.LBB15
 1112 0428 1B       		.uleb128 0x1b
 1113 0429 FE010000 		.4byte	0x1fe
 1114 042d 6D000000 		.4byte	.LLST4
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 42


 1115 0431 00       		.byte	0
 1116 0432 00       		.byte	0
 1117 0433 18       		.uleb128 0x18
 1118 0434 B7010000 		.4byte	0x1b7
 1119 0438 A8000000 		.4byte	.LBB16
 1120 043c 14000000 		.4byte	.LBE16-.LBB16
 1121 0440 01       		.byte	0x1
 1122 0441 BD       		.byte	0xbd
 1123 0442 63040000 		.4byte	0x463
 1124 0446 19       		.uleb128 0x19
 1125 0447 C8010000 		.4byte	0x1c8
 1126 044b 80000000 		.4byte	.LLST5
 1127 044f 1A       		.uleb128 0x1a
 1128 0450 A8000000 		.4byte	.LBB17
 1129 0454 14000000 		.4byte	.LBE17-.LBB17
 1130 0458 1B       		.uleb128 0x1b
 1131 0459 D4010000 		.4byte	0x1d4
 1132 045d 93000000 		.4byte	.LLST6
 1133 0461 00       		.byte	0
 1134 0462 00       		.byte	0
 1135 0463 18       		.uleb128 0x18
 1136 0464 8D010000 		.4byte	0x18d
 1137 0468 BC000000 		.4byte	.LBB18
 1138 046c 10000000 		.4byte	.LBE18-.LBB18
 1139 0470 01       		.byte	0x1
 1140 0471 BD       		.byte	0xbd
 1141 0472 93040000 		.4byte	0x493
 1142 0476 19       		.uleb128 0x19
 1143 0477 9E010000 		.4byte	0x19e
 1144 047b A6000000 		.4byte	.LLST7
 1145 047f 1A       		.uleb128 0x1a
 1146 0480 BC000000 		.4byte	.LBB19
 1147 0484 10000000 		.4byte	.LBE19-.LBB19
 1148 0488 1B       		.uleb128 0x1b
 1149 0489 AA010000 		.4byte	0x1aa
 1150 048d B9000000 		.4byte	.LLST8
 1151 0491 00       		.byte	0
 1152 0492 00       		.byte	0
 1153 0493 18       		.uleb128 0x18
 1154 0494 63010000 		.4byte	0x163
 1155 0498 DA000000 		.4byte	.LBB20
 1156 049c 12000000 		.4byte	.LBE20-.LBB20
 1157 04a0 01       		.byte	0x1
 1158 04a1 BE       		.byte	0xbe
 1159 04a2 C3040000 		.4byte	0x4c3
 1160 04a6 19       		.uleb128 0x19
 1161 04a7 74010000 		.4byte	0x174
 1162 04ab CC000000 		.4byte	.LLST9
 1163 04af 1A       		.uleb128 0x1a
 1164 04b0 DA000000 		.4byte	.LBB21
 1165 04b4 12000000 		.4byte	.LBE21-.LBB21
 1166 04b8 1B       		.uleb128 0x1b
 1167 04b9 80010000 		.4byte	0x180
 1168 04bd DF000000 		.4byte	.LLST10
 1169 04c1 00       		.byte	0
 1170 04c2 00       		.byte	0
 1171 04c3 18       		.uleb128 0x18
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 43


 1172 04c4 39010000 		.4byte	0x139
 1173 04c8 EC000000 		.4byte	.LBB22
 1174 04cc 12000000 		.4byte	.LBE22-.LBB22
 1175 04d0 01       		.byte	0x1
 1176 04d1 BE       		.byte	0xbe
 1177 04d2 F3040000 		.4byte	0x4f3
 1178 04d6 19       		.uleb128 0x19
 1179 04d7 4A010000 		.4byte	0x14a
 1180 04db F2000000 		.4byte	.LLST11
 1181 04df 1A       		.uleb128 0x1a
 1182 04e0 EC000000 		.4byte	.LBB23
 1183 04e4 12000000 		.4byte	.LBE23-.LBB23
 1184 04e8 1B       		.uleb128 0x1b
 1185 04e9 56010000 		.4byte	0x156
 1186 04ed 05010000 		.4byte	.LLST12
 1187 04f1 00       		.byte	0
 1188 04f2 00       		.byte	0
 1189 04f3 18       		.uleb128 0x18
 1190 04f4 0F010000 		.4byte	0x10f
 1191 04f8 FE000000 		.4byte	.LBB24
 1192 04fc 28000000 		.4byte	.LBE24-.LBB24
 1193 0500 01       		.byte	0x1
 1194 0501 BE       		.byte	0xbe
 1195 0502 23050000 		.4byte	0x523
 1196 0506 19       		.uleb128 0x19
 1197 0507 20010000 		.4byte	0x120
 1198 050b 18010000 		.4byte	.LLST13
 1199 050f 1A       		.uleb128 0x1a
 1200 0510 FE000000 		.4byte	.LBB25
 1201 0514 28000000 		.4byte	.LBE25-.LBB25
 1202 0518 1B       		.uleb128 0x1b
 1203 0519 2C010000 		.4byte	0x12c
 1204 051d 2B010000 		.4byte	.LLST14
 1205 0521 00       		.byte	0
 1206 0522 00       		.byte	0
 1207 0523 12       		.uleb128 0x12
 1208 0524 0C000000 		.4byte	.LVL21
 1209 0528 BA080000 		.4byte	0x8ba
 1210 052c 0E       		.uleb128 0xe
 1211 052d 20000000 		.4byte	.LVL22
 1212 0531 05080000 		.4byte	0x805
 1213 0535 44050000 		.4byte	0x544
 1214 0539 0F       		.uleb128 0xf
 1215 053a 01       		.uleb128 0x1
 1216 053b 50       		.byte	0x50
 1217 053c 01       		.uleb128 0x1
 1218 053d 30       		.byte	0x30
 1219 053e 0F       		.uleb128 0xf
 1220 053f 01       		.uleb128 0x1
 1221 0540 51       		.byte	0x51
 1222 0541 01       		.uleb128 0x1
 1223 0542 30       		.byte	0x30
 1224 0543 00       		.byte	0
 1225 0544 0E       		.uleb128 0xe
 1226 0545 28000000 		.4byte	.LVL23
 1227 0549 C5080000 		.4byte	0x8c5
 1228 054d 5C050000 		.4byte	0x55c
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 44


 1229 0551 0F       		.uleb128 0xf
 1230 0552 01       		.uleb128 0x1
 1231 0553 50       		.byte	0x50
 1232 0554 01       		.uleb128 0x1
 1233 0555 30       		.byte	0x30
 1234 0556 0F       		.uleb128 0xf
 1235 0557 01       		.uleb128 0x1
 1236 0558 51       		.byte	0x51
 1237 0559 01       		.uleb128 0x1
 1238 055a 31       		.byte	0x31
 1239 055b 00       		.byte	0
 1240 055c 0E       		.uleb128 0xe
 1241 055d 2E000000 		.4byte	.LVL24
 1242 0561 1B080000 		.4byte	0x81b
 1243 0565 6F050000 		.4byte	0x56f
 1244 0569 0F       		.uleb128 0xf
 1245 056a 01       		.uleb128 0x1
 1246 056b 50       		.byte	0x50
 1247 056c 01       		.uleb128 0x1
 1248 056d 31       		.byte	0x31
 1249 056e 00       		.byte	0
 1250 056f 0E       		.uleb128 0xe
 1251 0570 34000000 		.4byte	.LVL25
 1252 0574 D0080000 		.4byte	0x8d0
 1253 0578 82050000 		.4byte	0x582
 1254 057c 0F       		.uleb128 0xf
 1255 057d 01       		.uleb128 0x1
 1256 057e 50       		.byte	0x50
 1257 057f 01       		.uleb128 0x1
 1258 0580 30       		.byte	0x30
 1259 0581 00       		.byte	0
 1260 0582 0E       		.uleb128 0xe
 1261 0583 3C000000 		.4byte	.LVL26
 1262 0587 26080000 		.4byte	0x826
 1263 058b 9E050000 		.4byte	0x59e
 1264 058f 0F       		.uleb128 0xf
 1265 0590 01       		.uleb128 0x1
 1266 0591 50       		.byte	0x50
 1267 0592 01       		.uleb128 0x1
 1268 0593 30       		.byte	0x30
 1269 0594 0F       		.uleb128 0xf
 1270 0595 01       		.uleb128 0x1
 1271 0596 51       		.byte	0x51
 1272 0597 05       		.uleb128 0x5
 1273 0598 03       		.byte	0x3
 1274 0599 00000000 		.4byte	EnableRtcOperation
 1275 059d 00       		.byte	0
 1276 059e 0E       		.uleb128 0xe
 1277 059f 46000000 		.4byte	.LVL27
 1278 05a3 DB080000 		.4byte	0x8db
 1279 05a7 BD050000 		.4byte	0x5bd
 1280 05ab 0F       		.uleb128 0xf
 1281 05ac 01       		.uleb128 0x1
 1282 05ad 50       		.byte	0x50
 1283 05ae 01       		.uleb128 0x1
 1284 05af 30       		.byte	0x30
 1285 05b0 0F       		.uleb128 0xf
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 45


 1286 05b1 01       		.uleb128 0x1
 1287 05b2 51       		.byte	0x51
 1288 05b3 01       		.uleb128 0x1
 1289 05b4 31       		.byte	0x31
 1290 05b5 0F       		.uleb128 0xf
 1291 05b6 01       		.uleb128 0x1
 1292 05b7 52       		.byte	0x52
 1293 05b8 03       		.uleb128 0x3
 1294 05b9 0A       		.byte	0xa
 1295 05ba CC0C     		.2byte	0xccc
 1296 05bc 00       		.byte	0
 1297 05bd 12       		.uleb128 0x12
 1298 05be 4A000000 		.4byte	.LVL28
 1299 05c2 E6080000 		.4byte	0x8e6
 1300 05c6 0E       		.uleb128 0xe
 1301 05c7 52000000 		.4byte	.LVL29
 1302 05cb F2080000 		.4byte	0x8f2
 1303 05cf E3050000 		.4byte	0x5e3
 1304 05d3 0F       		.uleb128 0xf
 1305 05d4 01       		.uleb128 0x1
 1306 05d5 50       		.byte	0x50
 1307 05d6 05       		.uleb128 0x5
 1308 05d7 0C       		.byte	0xc
 1309 05d8 00481300 		.4byte	0x134800
 1310 05dc 0F       		.uleb128 0xf
 1311 05dd 01       		.uleb128 0x1
 1312 05de 51       		.byte	0x51
 1313 05df 02       		.uleb128 0x2
 1314 05e0 75       		.byte	0x75
 1315 05e1 00       		.sleb128 0
 1316 05e2 00       		.byte	0
 1317 05e3 0E       		.uleb128 0xe
 1318 05e4 5A000000 		.4byte	.LVL30
 1319 05e8 FE080000 		.4byte	0x8fe
 1320 05ec F7050000 		.4byte	0x5f7
 1321 05f0 0F       		.uleb128 0xf
 1322 05f1 01       		.uleb128 0x1
 1323 05f2 50       		.byte	0x50
 1324 05f3 02       		.uleb128 0x2
 1325 05f4 09       		.byte	0x9
 1326 05f5 FE       		.byte	0xfe
 1327 05f6 00       		.byte	0
 1328 05f7 0E       		.uleb128 0xe
 1329 05f8 60000000 		.4byte	.LVL31
 1330 05fc 0A090000 		.4byte	0x90a
 1331 0600 0B060000 		.4byte	0x60b
 1332 0604 0F       		.uleb128 0xf
 1333 0605 01       		.uleb128 0x1
 1334 0606 50       		.byte	0x50
 1335 0607 02       		.uleb128 0x2
 1336 0608 74       		.byte	0x74
 1337 0609 00       		.sleb128 0
 1338 060a 00       		.byte	0
 1339 060b 0E       		.uleb128 0xe
 1340 060c 68000000 		.4byte	.LVL32
 1341 0610 16090000 		.4byte	0x916
 1342 0614 23060000 		.4byte	0x623
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 46


 1343 0618 0F       		.uleb128 0xf
 1344 0619 01       		.uleb128 0x1
 1345 061a 50       		.byte	0x50
 1346 061b 01       		.uleb128 0x1
 1347 061c 31       		.byte	0x31
 1348 061d 0F       		.uleb128 0xf
 1349 061e 01       		.uleb128 0x1
 1350 061f 51       		.byte	0x51
 1351 0620 01       		.uleb128 0x1
 1352 0621 3A       		.byte	0x3a
 1353 0622 00       		.byte	0
 1354 0623 0E       		.uleb128 0xe
 1355 0624 6E000000 		.4byte	.LVL33
 1356 0628 22090000 		.4byte	0x922
 1357 062c 3A060000 		.4byte	0x63a
 1358 0630 0F       		.uleb128 0xf
 1359 0631 01       		.uleb128 0x1
 1360 0632 50       		.byte	0x50
 1361 0633 05       		.uleb128 0x5
 1362 0634 03       		.byte	0x3
 1363 0635 00000000 		.4byte	AlarmIsrHandler
 1364 0639 00       		.byte	0
 1365 063a 0E       		.uleb128 0xe
 1366 063b 74000000 		.4byte	.LVL34
 1367 063f 2E090000 		.4byte	0x92e
 1368 0643 51060000 		.4byte	0x651
 1369 0647 0F       		.uleb128 0xf
 1370 0648 01       		.uleb128 0x1
 1371 0649 50       		.byte	0x50
 1372 064a 05       		.uleb128 0x5
 1373 064b 03       		.byte	0x3
 1374 064c 00000000 		.4byte	Time1_ISR_Handler
 1375 0650 00       		.byte	0
 1376 0651 12       		.uleb128 0x12
 1377 0652 78000000 		.4byte	.LVL35
 1378 0656 39090000 		.4byte	0x939
 1379 065a 12       		.uleb128 0x12
 1380 065b 8A000000 		.4byte	.LVL36
 1381 065f 45090000 		.4byte	0x945
 1382 0663 12       		.uleb128 0x12
 1383 0664 90000000 		.4byte	.LVL38
 1384 0668 51090000 		.4byte	0x951
 1385 066c 0E       		.uleb128 0xe
 1386 066d DA000000 		.4byte	.LVL48
 1387 0671 5D090000 		.4byte	0x95d
 1388 0675 90060000 		.4byte	0x690
 1389 0679 0F       		.uleb128 0xf
 1390 067a 01       		.uleb128 0x1
 1391 067b 50       		.byte	0x50
 1392 067c 02       		.uleb128 0x2
 1393 067d 91       		.byte	0x91
 1394 067e 58       		.sleb128 -40
 1395 067f 0F       		.uleb128 0xf
 1396 0680 01       		.uleb128 0x1
 1397 0681 51       		.byte	0x51
 1398 0682 05       		.uleb128 0x5
 1399 0683 03       		.byte	0x3
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 47


 1400 0684 00000000 		.4byte	.LC9
 1401 0688 0F       		.uleb128 0xf
 1402 0689 02       		.uleb128 0x2
 1403 068a 7D       		.byte	0x7d
 1404 068b 00       		.sleb128 0
 1405 068c 02       		.uleb128 0x2
 1406 068d 75       		.byte	0x75
 1407 068e 00       		.sleb128 0
 1408 068f 00       		.byte	0
 1409 0690 0E       		.uleb128 0xe
 1410 0691 30010000 		.4byte	.LVL58
 1411 0695 5D090000 		.4byte	0x95d
 1412 0699 B4060000 		.4byte	0x6b4
 1413 069d 0F       		.uleb128 0xf
 1414 069e 01       		.uleb128 0x1
 1415 069f 50       		.byte	0x50
 1416 06a0 02       		.uleb128 0x2
 1417 06a1 91       		.byte	0x91
 1418 06a2 48       		.sleb128 -56
 1419 06a3 0F       		.uleb128 0xf
 1420 06a4 01       		.uleb128 0x1
 1421 06a5 51       		.byte	0x51
 1422 06a6 05       		.uleb128 0x5
 1423 06a7 03       		.byte	0x3
 1424 06a8 18000000 		.4byte	.LC11
 1425 06ac 0F       		.uleb128 0xf
 1426 06ad 02       		.uleb128 0x2
 1427 06ae 7D       		.byte	0x7d
 1428 06af 00       		.sleb128 0
 1429 06b0 02       		.uleb128 0x2
 1430 06b1 74       		.byte	0x74
 1431 06b2 00       		.sleb128 0
 1432 06b3 00       		.byte	0
 1433 06b4 0E       		.uleb128 0xe
 1434 06b5 36010000 		.4byte	.LVL59
 1435 06b9 68090000 		.4byte	0x968
 1436 06bd C8060000 		.4byte	0x6c8
 1437 06c1 0F       		.uleb128 0xf
 1438 06c2 01       		.uleb128 0x1
 1439 06c3 50       		.byte	0x50
 1440 06c4 02       		.uleb128 0x2
 1441 06c5 91       		.byte	0x91
 1442 06c6 58       		.sleb128 -40
 1443 06c7 00       		.byte	0
 1444 06c8 0E       		.uleb128 0xe
 1445 06c9 3E010000 		.4byte	.LVL60
 1446 06cd 68090000 		.4byte	0x968
 1447 06d1 DC060000 		.4byte	0x6dc
 1448 06d5 0F       		.uleb128 0xf
 1449 06d6 01       		.uleb128 0x1
 1450 06d7 50       		.byte	0x50
 1451 06d8 02       		.uleb128 0x2
 1452 06d9 74       		.byte	0x74
 1453 06da 00       		.sleb128 0
 1454 06db 00       		.byte	0
 1455 06dc 0E       		.uleb128 0xe
 1456 06dd 44010000 		.4byte	.LVL61
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 48


 1457 06e1 68090000 		.4byte	0x968
 1458 06e5 F0060000 		.4byte	0x6f0
 1459 06e9 0F       		.uleb128 0xf
 1460 06ea 01       		.uleb128 0x1
 1461 06eb 50       		.byte	0x50
 1462 06ec 02       		.uleb128 0x2
 1463 06ed 91       		.byte	0x91
 1464 06ee 48       		.sleb128 -56
 1465 06ef 00       		.byte	0
 1466 06f0 0E       		.uleb128 0xe
 1467 06f1 4A010000 		.4byte	.LVL62
 1468 06f5 68090000 		.4byte	0x968
 1469 06f9 04070000 		.4byte	0x704
 1470 06fd 0F       		.uleb128 0xf
 1471 06fe 01       		.uleb128 0x1
 1472 06ff 50       		.byte	0x50
 1473 0700 02       		.uleb128 0x2
 1474 0701 74       		.byte	0x74
 1475 0702 00       		.sleb128 0
 1476 0703 00       		.byte	0
 1477 0704 0E       		.uleb128 0xe
 1478 0705 56010000 		.4byte	.LVL63
 1479 0709 68090000 		.4byte	0x968
 1480 070d 1B070000 		.4byte	0x71b
 1481 0711 0F       		.uleb128 0xf
 1482 0712 01       		.uleb128 0x1
 1483 0713 50       		.byte	0x50
 1484 0714 05       		.uleb128 0x5
 1485 0715 03       		.byte	0x3
 1486 0716 30000000 		.4byte	.LC15
 1487 071a 00       		.byte	0
 1488 071b 0E       		.uleb128 0xe
 1489 071c 64010000 		.4byte	.LVL64
 1490 0720 68090000 		.4byte	0x968
 1491 0724 32070000 		.4byte	0x732
 1492 0728 0F       		.uleb128 0xf
 1493 0729 01       		.uleb128 0x1
 1494 072a 50       		.byte	0x50
 1495 072b 05       		.uleb128 0x5
 1496 072c 03       		.byte	0x3
 1497 072d 3C000000 		.4byte	.LC17
 1498 0731 00       		.byte	0
 1499 0732 0E       		.uleb128 0xe
 1500 0733 6A010000 		.4byte	.LVL65
 1501 0737 68090000 		.4byte	0x968
 1502 073b 49070000 		.4byte	0x749
 1503 073f 0F       		.uleb128 0xf
 1504 0740 01       		.uleb128 0x1
 1505 0741 50       		.byte	0x50
 1506 0742 05       		.uleb128 0x5
 1507 0743 03       		.byte	0x3
 1508 0744 48000000 		.4byte	.LC19
 1509 0748 00       		.byte	0
 1510 0749 12       		.uleb128 0x12
 1511 074a 6E010000 		.4byte	.LVL66
 1512 074e 73090000 		.4byte	0x973
 1513 0752 00       		.byte	0
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 49


 1514 0753 1C       		.uleb128 0x1c
 1515 0754 9D000000 		.4byte	0x9d
 1516 0758 63070000 		.4byte	0x763
 1517 075c 1D       		.uleb128 0x1d
 1518 075d C4000000 		.4byte	0xc4
 1519 0761 0F       		.byte	0xf
 1520 0762 00       		.byte	0
 1521 0763 1C       		.uleb128 0x1c
 1522 0764 73070000 		.4byte	0x773
 1523 0768 73070000 		.4byte	0x773
 1524 076c 1D       		.uleb128 0x1d
 1525 076d C4000000 		.4byte	0xc4
 1526 0771 0B       		.byte	0xb
 1527 0772 00       		.byte	0
 1528 0773 1E       		.uleb128 0x1e
 1529 0774 77000000 		.4byte	0x77
 1530 0778 1F       		.uleb128 0x1f
 1531 0779 86000000 		.4byte	.LASF41
 1532 077d 02       		.byte	0x2
 1533 077e E001     		.2byte	0x1e0
 1534 0780 84070000 		.4byte	0x784
 1535 0784 1E       		.uleb128 0x1e
 1536 0785 63070000 		.4byte	0x763
 1537 0789 20       		.uleb128 0x20
 1538 078a C1010000 		.4byte	.LASF42
 1539 078e 01       		.byte	0x1
 1540 078f 3E       		.byte	0x3e
 1541 0790 04010000 		.4byte	0x104
 1542 0794 05       		.uleb128 0x5
 1543 0795 03       		.byte	0x3
 1544 0796 00000000 		.4byte	alarmTimeDate
 1545 079a 20       		.uleb128 0x20
 1546 079b 72010000 		.4byte	.LASF43
 1547 079f 01       		.byte	0x1
 1548 07a0 41       		.byte	0x41
 1549 07a1 83000000 		.4byte	0x83
 1550 07a5 05       		.uleb128 0x5
 1551 07a6 03       		.byte	0x3
 1552 07a7 00000000 		.4byte	alarmFlag
 1553 07ab 20       		.uleb128 0x20
 1554 07ac 18040000 		.4byte	.LASF44
 1555 07b0 01       		.byte	0x1
 1556 07b1 4B       		.byte	0x4b
 1557 07b2 83000000 		.4byte	0x83
 1558 07b6 05       		.uleb128 0x5
 1559 07b7 03       		.byte	0x3
 1560 07b8 00000000 		.4byte	ui100mS
 1561 07bc 20       		.uleb128 0x20
 1562 07bd C3040000 		.4byte	.LASF45
 1563 07c1 01       		.byte	0x1
 1564 07c2 4C       		.byte	0x4c
 1565 07c3 6B000000 		.4byte	0x6b
 1566 07c7 05       		.uleb128 0x5
 1567 07c8 03       		.byte	0x3
 1568 07c9 00000000 		.4byte	byUpdateTime
 1569 07cd 20       		.uleb128 0x20
 1570 07ce D0040000 		.4byte	.LASF46
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 50


 1571 07d2 01       		.byte	0x1
 1572 07d3 4E       		.byte	0x4e
 1573 07d4 83000000 		.4byte	0x83
 1574 07d8 05       		.uleb128 0x5
 1575 07d9 03       		.byte	0x3
 1576 07da 00000000 		.4byte	Timer1Count
 1577 07de 20       		.uleb128 0x20
 1578 07df 82030000 		.4byte	.LASF47
 1579 07e3 01       		.byte	0x1
 1580 07e4 4F       		.byte	0x4f
 1581 07e5 6B000000 		.4byte	0x6b
 1582 07e9 05       		.uleb128 0x5
 1583 07ea 03       		.byte	0x3
 1584 07eb 00000000 		.4byte	byUpdateCapture
 1585 07ef 21       		.uleb128 0x21
 1586 07f0 09020000 		.4byte	.LASF48
 1587 07f4 09020000 		.4byte	.LASF48
 1588 07f8 04       		.byte	0x4
 1589 07f9 45       		.byte	0x45
 1590 07fa 21       		.uleb128 0x21
 1591 07fb D7010000 		.4byte	.LASF49
 1592 07ff D7010000 		.4byte	.LASF49
 1593 0803 04       		.byte	0x4
 1594 0804 6D       		.byte	0x6d
 1595 0805 21       		.uleb128 0x21
 1596 0806 93010000 		.4byte	.LASF50
 1597 080a 93010000 		.4byte	.LASF50
 1598 080e 04       		.byte	0x4
 1599 080f 6A       		.byte	0x6a
 1600 0810 21       		.uleb128 0x21
 1601 0811 65050000 		.4byte	.LASF51
 1602 0815 65050000 		.4byte	.LASF51
 1603 0819 04       		.byte	0x4
 1604 081a 70       		.byte	0x70
 1605 081b 21       		.uleb128 0x21
 1606 081c 00000000 		.4byte	.LASF52
 1607 0820 00000000 		.4byte	.LASF52
 1608 0824 04       		.byte	0x4
 1609 0825 6C       		.byte	0x6c
 1610 0826 21       		.uleb128 0x21
 1611 0827 DC040000 		.4byte	.LASF53
 1612 082b DC040000 		.4byte	.LASF53
 1613 082f 04       		.byte	0x4
 1614 0830 78       		.byte	0x78
 1615 0831 21       		.uleb128 0x21
 1616 0832 F0010000 		.4byte	.LASF54
 1617 0836 F0010000 		.4byte	.LASF54
 1618 083a 04       		.byte	0x4
 1619 083b 7D       		.byte	0x7d
 1620 083c 21       		.uleb128 0x21
 1621 083d BB020000 		.4byte	.LASF55
 1622 0841 BB020000 		.4byte	.LASF55
 1623 0845 05       		.byte	0x5
 1624 0846 36       		.byte	0x36
 1625 0847 22       		.uleb128 0x22
 1626 0848 A4020000 		.4byte	.LASF56
 1627 084c A4020000 		.4byte	.LASF56
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 51


 1628 0850 02       		.byte	0x2
 1629 0851 0402     		.2byte	0x204
 1630 0853 22       		.uleb128 0x22
 1631 0854 28030000 		.4byte	.LASF57
 1632 0858 28030000 		.4byte	.LASF57
 1633 085c 02       		.byte	0x2
 1634 085d FD01     		.2byte	0x1fd
 1635 085f 21       		.uleb128 0x21
 1636 0860 39050000 		.4byte	.LASF58
 1637 0864 39050000 		.4byte	.LASF58
 1638 0868 06       		.byte	0x6
 1639 0869 28       		.byte	0x28
 1640 086a 22       		.uleb128 0x22
 1641 086b 90040000 		.4byte	.LASF59
 1642 086f 90040000 		.4byte	.LASF59
 1643 0873 07       		.byte	0x7
 1644 0874 4501     		.2byte	0x145
 1645 0876 22       		.uleb128 0x22
 1646 0877 CB030000 		.4byte	.LASF60
 1647 087b CB030000 		.4byte	.LASF60
 1648 087f 07       		.byte	0x7
 1649 0880 4701     		.2byte	0x147
 1650 0882 22       		.uleb128 0x22
 1651 0883 B1030000 		.4byte	.LASF61
 1652 0887 B1030000 		.4byte	.LASF61
 1653 088b 07       		.byte	0x7
 1654 088c 4B01     		.2byte	0x14b
 1655 088e 21       		.uleb128 0x21
 1656 088f B8000000 		.4byte	.LASF62
 1657 0893 B8000000 		.4byte	.LASF62
 1658 0897 08       		.byte	0x8
 1659 0898 32       		.byte	0x32
 1660 0899 21       		.uleb128 0x21
 1661 089a 0F000000 		.4byte	.LASF63
 1662 089e 0F000000 		.4byte	.LASF63
 1663 08a2 08       		.byte	0x8
 1664 08a3 33       		.byte	0x33
 1665 08a4 21       		.uleb128 0x21
 1666 08a5 AB010000 		.4byte	.LASF64
 1667 08a9 AB010000 		.4byte	.LASF64
 1668 08ad 09       		.byte	0x9
 1669 08ae 32       		.byte	0x32
 1670 08af 21       		.uleb128 0x21
 1671 08b0 17030000 		.4byte	.LASF65
 1672 08b4 17030000 		.4byte	.LASF65
 1673 08b8 09       		.byte	0x9
 1674 08b9 33       		.byte	0x33
 1675 08ba 21       		.uleb128 0x21
 1676 08bb E9020000 		.4byte	.LASF66
 1677 08bf E9020000 		.4byte	.LASF66
 1678 08c3 04       		.byte	0x4
 1679 08c4 4E       		.byte	0x4e
 1680 08c5 21       		.uleb128 0x21
 1681 08c6 07030000 		.4byte	.LASF67
 1682 08ca 07030000 		.4byte	.LASF67
 1683 08ce 04       		.byte	0x4
 1684 08cf 67       		.byte	0x67
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 52


 1685 08d0 21       		.uleb128 0x21
 1686 08d1 F9040000 		.4byte	.LASF68
 1687 08d5 F9040000 		.4byte	.LASF68
 1688 08d9 04       		.byte	0x4
 1689 08da 7E       		.byte	0x7e
 1690 08db 21       		.uleb128 0x21
 1691 08dc 70040000 		.4byte	.LASF69
 1692 08e0 70040000 		.4byte	.LASF69
 1693 08e4 04       		.byte	0x4
 1694 08e5 7A       		.byte	0x7a
 1695 08e6 22       		.uleb128 0x22
 1696 08e7 76050000 		.4byte	.LASF70
 1697 08eb 76050000 		.4byte	.LASF70
 1698 08ef 02       		.byte	0x2
 1699 08f0 EB01     		.2byte	0x1eb
 1700 08f2 22       		.uleb128 0x22
 1701 08f3 40020000 		.4byte	.LASF71
 1702 08f7 40020000 		.4byte	.LASF71
 1703 08fb 02       		.byte	0x2
 1704 08fc F301     		.2byte	0x1f3
 1705 08fe 22       		.uleb128 0x22
 1706 08ff 1F000000 		.4byte	.LASF72
 1707 0903 1F000000 		.4byte	.LASF72
 1708 0907 02       		.byte	0x2
 1709 0908 F901     		.2byte	0x1f9
 1710 090a 22       		.uleb128 0x22
 1711 090b 84020000 		.4byte	.LASF73
 1712 090f 84020000 		.4byte	.LASF73
 1713 0913 02       		.byte	0x2
 1714 0914 F701     		.2byte	0x1f7
 1715 0916 22       		.uleb128 0x22
 1716 0917 58000000 		.4byte	.LASF74
 1717 091b 58000000 		.4byte	.LASF74
 1718 091f 02       		.byte	0x2
 1719 0920 F001     		.2byte	0x1f0
 1720 0922 22       		.uleb128 0x22
 1721 0923 9D030000 		.4byte	.LASF75
 1722 0927 9D030000 		.4byte	.LASF75
 1723 092b 02       		.byte	0x2
 1724 092c 0502     		.2byte	0x205
 1725 092e 21       		.uleb128 0x21
 1726 092f 20020000 		.4byte	.LASF76
 1727 0933 20020000 		.4byte	.LASF76
 1728 0937 06       		.byte	0x6
 1729 0938 18       		.byte	0x18
 1730 0939 22       		.uleb128 0x22
 1731 093a 13050000 		.4byte	.LASF77
 1732 093e 13050000 		.4byte	.LASF77
 1733 0942 07       		.byte	0x7
 1734 0943 3201     		.2byte	0x132
 1735 0945 22       		.uleb128 0x22
 1736 0946 9D000000 		.4byte	.LASF78
 1737 094a 9D000000 		.4byte	.LASF78
 1738 094e 02       		.byte	0x2
 1739 094f F501     		.2byte	0x1f5
 1740 0951 22       		.uleb128 0x22
 1741 0952 64040000 		.4byte	.LASF79
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 53


 1742 0956 64040000 		.4byte	.LASF79
 1743 095a 02       		.byte	0x2
 1744 095b F601     		.2byte	0x1f6
 1745 095d 21       		.uleb128 0x21
 1746 095e 9C020000 		.4byte	.LASF80
 1747 0962 9C020000 		.4byte	.LASF80
 1748 0966 0A       		.byte	0xa
 1749 0967 E7       		.byte	0xe7
 1750 0968 21       		.uleb128 0x21
 1751 0969 D5000000 		.4byte	.LASF81
 1752 096d D5000000 		.4byte	.LASF81
 1753 0971 0B       		.byte	0xb
 1754 0972 26       		.byte	0x26
 1755 0973 21       		.uleb128 0x21
 1756 0974 42030000 		.4byte	.LASF82
 1757 0978 42030000 		.4byte	.LASF82
 1758 097c 0C       		.byte	0xc
 1759 097d 56       		.byte	0x56
 1760 097e 00       		.byte	0
 1761              		.section	.debug_abbrev,"",%progbits
 1762              	.Ldebug_abbrev0:
 1763 0000 01       		.uleb128 0x1
 1764 0001 11       		.uleb128 0x11
 1765 0002 01       		.byte	0x1
 1766 0003 25       		.uleb128 0x25
 1767 0004 0E       		.uleb128 0xe
 1768 0005 13       		.uleb128 0x13
 1769 0006 0B       		.uleb128 0xb
 1770 0007 03       		.uleb128 0x3
 1771 0008 0E       		.uleb128 0xe
 1772 0009 1B       		.uleb128 0x1b
 1773 000a 0E       		.uleb128 0xe
 1774 000b 55       		.uleb128 0x55
 1775 000c 17       		.uleb128 0x17
 1776 000d 11       		.uleb128 0x11
 1777 000e 01       		.uleb128 0x1
 1778 000f 10       		.uleb128 0x10
 1779 0010 17       		.uleb128 0x17
 1780 0011 00       		.byte	0
 1781 0012 00       		.byte	0
 1782 0013 02       		.uleb128 0x2
 1783 0014 24       		.uleb128 0x24
 1784 0015 00       		.byte	0
 1785 0016 0B       		.uleb128 0xb
 1786 0017 0B       		.uleb128 0xb
 1787 0018 3E       		.uleb128 0x3e
 1788 0019 0B       		.uleb128 0xb
 1789 001a 03       		.uleb128 0x3
 1790 001b 0E       		.uleb128 0xe
 1791 001c 00       		.byte	0
 1792 001d 00       		.byte	0
 1793 001e 03       		.uleb128 0x3
 1794 001f 24       		.uleb128 0x24
 1795 0020 00       		.byte	0
 1796 0021 0B       		.uleb128 0xb
 1797 0022 0B       		.uleb128 0xb
 1798 0023 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 54


 1799 0024 0B       		.uleb128 0xb
 1800 0025 03       		.uleb128 0x3
 1801 0026 08       		.uleb128 0x8
 1802 0027 00       		.byte	0
 1803 0028 00       		.byte	0
 1804 0029 04       		.uleb128 0x4
 1805 002a 16       		.uleb128 0x16
 1806 002b 00       		.byte	0
 1807 002c 03       		.uleb128 0x3
 1808 002d 0E       		.uleb128 0xe
 1809 002e 3A       		.uleb128 0x3a
 1810 002f 0B       		.uleb128 0xb
 1811 0030 3B       		.uleb128 0x3b
 1812 0031 05       		.uleb128 0x5
 1813 0032 49       		.uleb128 0x49
 1814 0033 13       		.uleb128 0x13
 1815 0034 00       		.byte	0
 1816 0035 00       		.byte	0
 1817 0036 05       		.uleb128 0x5
 1818 0037 04       		.uleb128 0x4
 1819 0038 01       		.byte	0x1
 1820 0039 0B       		.uleb128 0xb
 1821 003a 0B       		.uleb128 0xb
 1822 003b 49       		.uleb128 0x49
 1823 003c 13       		.uleb128 0x13
 1824 003d 3A       		.uleb128 0x3a
 1825 003e 0B       		.uleb128 0xb
 1826 003f 3B       		.uleb128 0x3b
 1827 0040 0B       		.uleb128 0xb
 1828 0041 01       		.uleb128 0x1
 1829 0042 13       		.uleb128 0x13
 1830 0043 00       		.byte	0
 1831 0044 00       		.byte	0
 1832 0045 06       		.uleb128 0x6
 1833 0046 28       		.uleb128 0x28
 1834 0047 00       		.byte	0
 1835 0048 03       		.uleb128 0x3
 1836 0049 0E       		.uleb128 0xe
 1837 004a 1C       		.uleb128 0x1c
 1838 004b 0B       		.uleb128 0xb
 1839 004c 00       		.byte	0
 1840 004d 00       		.byte	0
 1841 004e 07       		.uleb128 0x7
 1842 004f 13       		.uleb128 0x13
 1843 0050 01       		.byte	0x1
 1844 0051 0B       		.uleb128 0xb
 1845 0052 0B       		.uleb128 0xb
 1846 0053 3A       		.uleb128 0x3a
 1847 0054 0B       		.uleb128 0xb
 1848 0055 3B       		.uleb128 0x3b
 1849 0056 0B       		.uleb128 0xb
 1850 0057 01       		.uleb128 0x1
 1851 0058 13       		.uleb128 0x13
 1852 0059 00       		.byte	0
 1853 005a 00       		.byte	0
 1854 005b 08       		.uleb128 0x8
 1855 005c 0D       		.uleb128 0xd
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 55


 1856 005d 00       		.byte	0
 1857 005e 03       		.uleb128 0x3
 1858 005f 0E       		.uleb128 0xe
 1859 0060 3A       		.uleb128 0x3a
 1860 0061 0B       		.uleb128 0xb
 1861 0062 3B       		.uleb128 0x3b
 1862 0063 0B       		.uleb128 0xb
 1863 0064 49       		.uleb128 0x49
 1864 0065 13       		.uleb128 0x13
 1865 0066 38       		.uleb128 0x38
 1866 0067 0B       		.uleb128 0xb
 1867 0068 00       		.byte	0
 1868 0069 00       		.byte	0
 1869 006a 09       		.uleb128 0x9
 1870 006b 16       		.uleb128 0x16
 1871 006c 00       		.byte	0
 1872 006d 03       		.uleb128 0x3
 1873 006e 0E       		.uleb128 0xe
 1874 006f 3A       		.uleb128 0x3a
 1875 0070 0B       		.uleb128 0xb
 1876 0071 3B       		.uleb128 0x3b
 1877 0072 0B       		.uleb128 0xb
 1878 0073 49       		.uleb128 0x49
 1879 0074 13       		.uleb128 0x13
 1880 0075 00       		.byte	0
 1881 0076 00       		.byte	0
 1882 0077 0A       		.uleb128 0xa
 1883 0078 2E       		.uleb128 0x2e
 1884 0079 01       		.byte	0x1
 1885 007a 03       		.uleb128 0x3
 1886 007b 0E       		.uleb128 0xe
 1887 007c 3A       		.uleb128 0x3a
 1888 007d 0B       		.uleb128 0xb
 1889 007e 3B       		.uleb128 0x3b
 1890 007f 05       		.uleb128 0x5
 1891 0080 27       		.uleb128 0x27
 1892 0081 19       		.uleb128 0x19
 1893 0082 49       		.uleb128 0x49
 1894 0083 13       		.uleb128 0x13
 1895 0084 20       		.uleb128 0x20
 1896 0085 0B       		.uleb128 0xb
 1897 0086 01       		.uleb128 0x1
 1898 0087 13       		.uleb128 0x13
 1899 0088 00       		.byte	0
 1900 0089 00       		.byte	0
 1901 008a 0B       		.uleb128 0xb
 1902 008b 05       		.uleb128 0x5
 1903 008c 00       		.byte	0
 1904 008d 03       		.uleb128 0x3
 1905 008e 0E       		.uleb128 0xe
 1906 008f 3A       		.uleb128 0x3a
 1907 0090 0B       		.uleb128 0xb
 1908 0091 3B       		.uleb128 0x3b
 1909 0092 05       		.uleb128 0x5
 1910 0093 49       		.uleb128 0x49
 1911 0094 13       		.uleb128 0x13
 1912 0095 00       		.byte	0
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 56


 1913 0096 00       		.byte	0
 1914 0097 0C       		.uleb128 0xc
 1915 0098 34       		.uleb128 0x34
 1916 0099 00       		.byte	0
 1917 009a 03       		.uleb128 0x3
 1918 009b 0E       		.uleb128 0xe
 1919 009c 3A       		.uleb128 0x3a
 1920 009d 0B       		.uleb128 0xb
 1921 009e 3B       		.uleb128 0x3b
 1922 009f 05       		.uleb128 0x5
 1923 00a0 49       		.uleb128 0x49
 1924 00a1 13       		.uleb128 0x13
 1925 00a2 00       		.byte	0
 1926 00a3 00       		.byte	0
 1927 00a4 0D       		.uleb128 0xd
 1928 00a5 2E       		.uleb128 0x2e
 1929 00a6 01       		.byte	0x1
 1930 00a7 3F       		.uleb128 0x3f
 1931 00a8 19       		.uleb128 0x19
 1932 00a9 03       		.uleb128 0x3
 1933 00aa 0E       		.uleb128 0xe
 1934 00ab 3A       		.uleb128 0x3a
 1935 00ac 0B       		.uleb128 0xb
 1936 00ad 3B       		.uleb128 0x3b
 1937 00ae 0B       		.uleb128 0xb
 1938 00af 27       		.uleb128 0x27
 1939 00b0 19       		.uleb128 0x19
 1940 00b1 11       		.uleb128 0x11
 1941 00b2 01       		.uleb128 0x1
 1942 00b3 12       		.uleb128 0x12
 1943 00b4 06       		.uleb128 0x6
 1944 00b5 40       		.uleb128 0x40
 1945 00b6 18       		.uleb128 0x18
 1946 00b7 9742     		.uleb128 0x2117
 1947 00b9 19       		.uleb128 0x19
 1948 00ba 01       		.uleb128 0x1
 1949 00bb 13       		.uleb128 0x13
 1950 00bc 00       		.byte	0
 1951 00bd 00       		.byte	0
 1952 00be 0E       		.uleb128 0xe
 1953 00bf 898201   		.uleb128 0x4109
 1954 00c2 01       		.byte	0x1
 1955 00c3 11       		.uleb128 0x11
 1956 00c4 01       		.uleb128 0x1
 1957 00c5 31       		.uleb128 0x31
 1958 00c6 13       		.uleb128 0x13
 1959 00c7 01       		.uleb128 0x1
 1960 00c8 13       		.uleb128 0x13
 1961 00c9 00       		.byte	0
 1962 00ca 00       		.byte	0
 1963 00cb 0F       		.uleb128 0xf
 1964 00cc 8A8201   		.uleb128 0x410a
 1965 00cf 00       		.byte	0
 1966 00d0 02       		.uleb128 0x2
 1967 00d1 18       		.uleb128 0x18
 1968 00d2 9142     		.uleb128 0x2111
 1969 00d4 18       		.uleb128 0x18
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 57


 1970 00d5 00       		.byte	0
 1971 00d6 00       		.byte	0
 1972 00d7 10       		.uleb128 0x10
 1973 00d8 898201   		.uleb128 0x4109
 1974 00db 01       		.byte	0x1
 1975 00dc 11       		.uleb128 0x11
 1976 00dd 01       		.uleb128 0x1
 1977 00de 31       		.uleb128 0x31
 1978 00df 13       		.uleb128 0x13
 1979 00e0 00       		.byte	0
 1980 00e1 00       		.byte	0
 1981 00e2 11       		.uleb128 0x11
 1982 00e3 2E       		.uleb128 0x2e
 1983 00e4 01       		.byte	0x1
 1984 00e5 3F       		.uleb128 0x3f
 1985 00e6 19       		.uleb128 0x19
 1986 00e7 03       		.uleb128 0x3
 1987 00e8 0E       		.uleb128 0xe
 1988 00e9 3A       		.uleb128 0x3a
 1989 00ea 0B       		.uleb128 0xb
 1990 00eb 3B       		.uleb128 0x3b
 1991 00ec 05       		.uleb128 0x5
 1992 00ed 27       		.uleb128 0x27
 1993 00ee 19       		.uleb128 0x19
 1994 00ef 11       		.uleb128 0x11
 1995 00f0 01       		.uleb128 0x1
 1996 00f1 12       		.uleb128 0x12
 1997 00f2 06       		.uleb128 0x6
 1998 00f3 40       		.uleb128 0x40
 1999 00f4 18       		.uleb128 0x18
 2000 00f5 9742     		.uleb128 0x2117
 2001 00f7 19       		.uleb128 0x19
 2002 00f8 01       		.uleb128 0x1
 2003 00f9 13       		.uleb128 0x13
 2004 00fa 00       		.byte	0
 2005 00fb 00       		.byte	0
 2006 00fc 12       		.uleb128 0x12
 2007 00fd 898201   		.uleb128 0x4109
 2008 0100 00       		.byte	0
 2009 0101 11       		.uleb128 0x11
 2010 0102 01       		.uleb128 0x1
 2011 0103 31       		.uleb128 0x31
 2012 0104 13       		.uleb128 0x13
 2013 0105 00       		.byte	0
 2014 0106 00       		.byte	0
 2015 0107 13       		.uleb128 0x13
 2016 0108 34       		.uleb128 0x34
 2017 0109 00       		.byte	0
 2018 010a 03       		.uleb128 0x3
 2019 010b 0E       		.uleb128 0xe
 2020 010c 3A       		.uleb128 0x3a
 2021 010d 0B       		.uleb128 0xb
 2022 010e 3B       		.uleb128 0x3b
 2023 010f 05       		.uleb128 0x5
 2024 0110 49       		.uleb128 0x49
 2025 0111 13       		.uleb128 0x13
 2026 0112 02       		.uleb128 0x2
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 58


 2027 0113 17       		.uleb128 0x17
 2028 0114 00       		.byte	0
 2029 0115 00       		.byte	0
 2030 0116 14       		.uleb128 0x14
 2031 0117 2E       		.uleb128 0x2e
 2032 0118 01       		.byte	0x1
 2033 0119 3F       		.uleb128 0x3f
 2034 011a 19       		.uleb128 0x19
 2035 011b 03       		.uleb128 0x3
 2036 011c 0E       		.uleb128 0xe
 2037 011d 3A       		.uleb128 0x3a
 2038 011e 0B       		.uleb128 0xb
 2039 011f 3B       		.uleb128 0x3b
 2040 0120 0B       		.uleb128 0xb
 2041 0121 49       		.uleb128 0x49
 2042 0122 13       		.uleb128 0x13
 2043 0123 8701     		.uleb128 0x87
 2044 0125 19       		.uleb128 0x19
 2045 0126 11       		.uleb128 0x11
 2046 0127 01       		.uleb128 0x1
 2047 0128 12       		.uleb128 0x12
 2048 0129 06       		.uleb128 0x6
 2049 012a 40       		.uleb128 0x40
 2050 012b 18       		.uleb128 0x18
 2051 012c 9742     		.uleb128 0x2117
 2052 012e 19       		.uleb128 0x19
 2053 012f 01       		.uleb128 0x1
 2054 0130 13       		.uleb128 0x13
 2055 0131 00       		.byte	0
 2056 0132 00       		.byte	0
 2057 0133 15       		.uleb128 0x15
 2058 0134 34       		.uleb128 0x34
 2059 0135 00       		.byte	0
 2060 0136 03       		.uleb128 0x3
 2061 0137 0E       		.uleb128 0xe
 2062 0138 3A       		.uleb128 0x3a
 2063 0139 0B       		.uleb128 0xb
 2064 013a 3B       		.uleb128 0x3b
 2065 013b 0B       		.uleb128 0xb
 2066 013c 49       		.uleb128 0x49
 2067 013d 13       		.uleb128 0x13
 2068 013e 02       		.uleb128 0x2
 2069 013f 18       		.uleb128 0x18
 2070 0140 00       		.byte	0
 2071 0141 00       		.byte	0
 2072 0142 16       		.uleb128 0x16
 2073 0143 34       		.uleb128 0x34
 2074 0144 00       		.byte	0
 2075 0145 03       		.uleb128 0x3
 2076 0146 0E       		.uleb128 0xe
 2077 0147 3A       		.uleb128 0x3a
 2078 0148 0B       		.uleb128 0xb
 2079 0149 3B       		.uleb128 0x3b
 2080 014a 0B       		.uleb128 0xb
 2081 014b 49       		.uleb128 0x49
 2082 014c 13       		.uleb128 0x13
 2083 014d 00       		.byte	0
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 59


 2084 014e 00       		.byte	0
 2085 014f 17       		.uleb128 0x17
 2086 0150 34       		.uleb128 0x34
 2087 0151 00       		.byte	0
 2088 0152 03       		.uleb128 0x3
 2089 0153 0E       		.uleb128 0xe
 2090 0154 3A       		.uleb128 0x3a
 2091 0155 0B       		.uleb128 0xb
 2092 0156 3B       		.uleb128 0x3b
 2093 0157 0B       		.uleb128 0xb
 2094 0158 49       		.uleb128 0x49
 2095 0159 13       		.uleb128 0x13
 2096 015a 02       		.uleb128 0x2
 2097 015b 17       		.uleb128 0x17
 2098 015c 00       		.byte	0
 2099 015d 00       		.byte	0
 2100 015e 18       		.uleb128 0x18
 2101 015f 1D       		.uleb128 0x1d
 2102 0160 01       		.byte	0x1
 2103 0161 31       		.uleb128 0x31
 2104 0162 13       		.uleb128 0x13
 2105 0163 11       		.uleb128 0x11
 2106 0164 01       		.uleb128 0x1
 2107 0165 12       		.uleb128 0x12
 2108 0166 06       		.uleb128 0x6
 2109 0167 58       		.uleb128 0x58
 2110 0168 0B       		.uleb128 0xb
 2111 0169 59       		.uleb128 0x59
 2112 016a 0B       		.uleb128 0xb
 2113 016b 01       		.uleb128 0x1
 2114 016c 13       		.uleb128 0x13
 2115 016d 00       		.byte	0
 2116 016e 00       		.byte	0
 2117 016f 19       		.uleb128 0x19
 2118 0170 05       		.uleb128 0x5
 2119 0171 00       		.byte	0
 2120 0172 31       		.uleb128 0x31
 2121 0173 13       		.uleb128 0x13
 2122 0174 02       		.uleb128 0x2
 2123 0175 17       		.uleb128 0x17
 2124 0176 00       		.byte	0
 2125 0177 00       		.byte	0
 2126 0178 1A       		.uleb128 0x1a
 2127 0179 0B       		.uleb128 0xb
 2128 017a 01       		.byte	0x1
 2129 017b 11       		.uleb128 0x11
 2130 017c 01       		.uleb128 0x1
 2131 017d 12       		.uleb128 0x12
 2132 017e 06       		.uleb128 0x6
 2133 017f 00       		.byte	0
 2134 0180 00       		.byte	0
 2135 0181 1B       		.uleb128 0x1b
 2136 0182 34       		.uleb128 0x34
 2137 0183 00       		.byte	0
 2138 0184 31       		.uleb128 0x31
 2139 0185 13       		.uleb128 0x13
 2140 0186 02       		.uleb128 0x2
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 60


 2141 0187 17       		.uleb128 0x17
 2142 0188 00       		.byte	0
 2143 0189 00       		.byte	0
 2144 018a 1C       		.uleb128 0x1c
 2145 018b 01       		.uleb128 0x1
 2146 018c 01       		.byte	0x1
 2147 018d 49       		.uleb128 0x49
 2148 018e 13       		.uleb128 0x13
 2149 018f 01       		.uleb128 0x1
 2150 0190 13       		.uleb128 0x13
 2151 0191 00       		.byte	0
 2152 0192 00       		.byte	0
 2153 0193 1D       		.uleb128 0x1d
 2154 0194 21       		.uleb128 0x21
 2155 0195 00       		.byte	0
 2156 0196 49       		.uleb128 0x49
 2157 0197 13       		.uleb128 0x13
 2158 0198 2F       		.uleb128 0x2f
 2159 0199 0B       		.uleb128 0xb
 2160 019a 00       		.byte	0
 2161 019b 00       		.byte	0
 2162 019c 1E       		.uleb128 0x1e
 2163 019d 26       		.uleb128 0x26
 2164 019e 00       		.byte	0
 2165 019f 49       		.uleb128 0x49
 2166 01a0 13       		.uleb128 0x13
 2167 01a1 00       		.byte	0
 2168 01a2 00       		.byte	0
 2169 01a3 1F       		.uleb128 0x1f
 2170 01a4 34       		.uleb128 0x34
 2171 01a5 00       		.byte	0
 2172 01a6 03       		.uleb128 0x3
 2173 01a7 0E       		.uleb128 0xe
 2174 01a8 3A       		.uleb128 0x3a
 2175 01a9 0B       		.uleb128 0xb
 2176 01aa 3B       		.uleb128 0x3b
 2177 01ab 05       		.uleb128 0x5
 2178 01ac 49       		.uleb128 0x49
 2179 01ad 13       		.uleb128 0x13
 2180 01ae 3F       		.uleb128 0x3f
 2181 01af 19       		.uleb128 0x19
 2182 01b0 3C       		.uleb128 0x3c
 2183 01b1 19       		.uleb128 0x19
 2184 01b2 00       		.byte	0
 2185 01b3 00       		.byte	0
 2186 01b4 20       		.uleb128 0x20
 2187 01b5 34       		.uleb128 0x34
 2188 01b6 00       		.byte	0
 2189 01b7 03       		.uleb128 0x3
 2190 01b8 0E       		.uleb128 0xe
 2191 01b9 3A       		.uleb128 0x3a
 2192 01ba 0B       		.uleb128 0xb
 2193 01bb 3B       		.uleb128 0x3b
 2194 01bc 0B       		.uleb128 0xb
 2195 01bd 49       		.uleb128 0x49
 2196 01be 13       		.uleb128 0x13
 2197 01bf 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 61


 2198 01c0 19       		.uleb128 0x19
 2199 01c1 02       		.uleb128 0x2
 2200 01c2 18       		.uleb128 0x18
 2201 01c3 00       		.byte	0
 2202 01c4 00       		.byte	0
 2203 01c5 21       		.uleb128 0x21
 2204 01c6 2E       		.uleb128 0x2e
 2205 01c7 00       		.byte	0
 2206 01c8 3F       		.uleb128 0x3f
 2207 01c9 19       		.uleb128 0x19
 2208 01ca 3C       		.uleb128 0x3c
 2209 01cb 19       		.uleb128 0x19
 2210 01cc 6E       		.uleb128 0x6e
 2211 01cd 0E       		.uleb128 0xe
 2212 01ce 03       		.uleb128 0x3
 2213 01cf 0E       		.uleb128 0xe
 2214 01d0 3A       		.uleb128 0x3a
 2215 01d1 0B       		.uleb128 0xb
 2216 01d2 3B       		.uleb128 0x3b
 2217 01d3 0B       		.uleb128 0xb
 2218 01d4 00       		.byte	0
 2219 01d5 00       		.byte	0
 2220 01d6 22       		.uleb128 0x22
 2221 01d7 2E       		.uleb128 0x2e
 2222 01d8 00       		.byte	0
 2223 01d9 3F       		.uleb128 0x3f
 2224 01da 19       		.uleb128 0x19
 2225 01db 3C       		.uleb128 0x3c
 2226 01dc 19       		.uleb128 0x19
 2227 01dd 6E       		.uleb128 0x6e
 2228 01de 0E       		.uleb128 0xe
 2229 01df 03       		.uleb128 0x3
 2230 01e0 0E       		.uleb128 0xe
 2231 01e1 3A       		.uleb128 0x3a
 2232 01e2 0B       		.uleb128 0xb
 2233 01e3 3B       		.uleb128 0x3b
 2234 01e4 05       		.uleb128 0x5
 2235 01e5 00       		.byte	0
 2236 01e6 00       		.byte	0
 2237 01e7 00       		.byte	0
 2238              		.section	.debug_loc,"",%progbits
 2239              	.Ldebug_loc0:
 2240              	.LLST0:
 2241 0000 0C000000 		.4byte	.LVL12
 2242 0004 0F000000 		.4byte	.LVL13-1
 2243 0008 0100     		.2byte	0x1
 2244 000a 50       		.byte	0x50
 2245 000b 0F000000 		.4byte	.LVL13-1
 2246 000f 40000000 		.4byte	.LVL20
 2247 0013 0100     		.2byte	0x1
 2248 0015 54       		.byte	0x54
 2249 0016 00000000 		.4byte	0
 2250 001a 00000000 		.4byte	0
 2251              	.LLST1:
 2252 001e 8C000000 		.4byte	.LVL37
 2253 0022 8F000000 		.4byte	.LVL38-1
 2254 0026 0100     		.2byte	0x1
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 62


 2255 0028 50       		.byte	0x50
 2256 0029 8F000000 		.4byte	.LVL38-1
 2257 002d CA000000 		.4byte	.LVL46
 2258 0031 0100     		.2byte	0x1
 2259 0033 55       		.byte	0x55
 2260 0034 00000000 		.4byte	0
 2261 0038 00000000 		.4byte	0
 2262              	.LLST2:
 2263 003c 92000000 		.4byte	.LVL39
 2264 0040 AA000000 		.4byte	.LVL42
 2265 0044 0100     		.2byte	0x1
 2266 0046 50       		.byte	0x50
 2267 0047 AA000000 		.4byte	.LVL42
 2268 004b 24010000 		.4byte	.LVL56
 2269 004f 0100     		.2byte	0x1
 2270 0051 54       		.byte	0x54
 2271 0052 00000000 		.4byte	0
 2272 0056 00000000 		.4byte	0
 2273              	.LLST3:
 2274 005a 92000000 		.4byte	.LVL39
 2275 005e A8000000 		.4byte	.LVL41
 2276 0062 0100     		.2byte	0x1
 2277 0064 55       		.byte	0x55
 2278 0065 00000000 		.4byte	0
 2279 0069 00000000 		.4byte	0
 2280              	.LLST4:
 2281 006d A0000000 		.4byte	.LVL40
 2282 0071 A8000000 		.4byte	.LVL41
 2283 0075 0100     		.2byte	0x1
 2284 0077 51       		.byte	0x51
 2285 0078 00000000 		.4byte	0
 2286 007c 00000000 		.4byte	0
 2287              	.LLST5:
 2288 0080 A8000000 		.4byte	.LVL41
 2289 0084 BC000000 		.4byte	.LVL44
 2290 0088 0100     		.2byte	0x1
 2291 008a 55       		.byte	0x55
 2292 008b 00000000 		.4byte	0
 2293 008f 00000000 		.4byte	0
 2294              	.LLST6:
 2295 0093 B6000000 		.4byte	.LVL43
 2296 0097 BC000000 		.4byte	.LVL44
 2297 009b 0100     		.2byte	0x1
 2298 009d 51       		.byte	0x51
 2299 009e 00000000 		.4byte	0
 2300 00a2 00000000 		.4byte	0
 2301              	.LLST7:
 2302 00a6 BC000000 		.4byte	.LVL44
 2303 00aa CA000000 		.4byte	.LVL46
 2304 00ae 0100     		.2byte	0x1
 2305 00b0 55       		.byte	0x55
 2306 00b1 00000000 		.4byte	0
 2307 00b5 00000000 		.4byte	0
 2308              	.LLST8:
 2309 00b9 C8000000 		.4byte	.LVL45
 2310 00bd CC000000 		.4byte	.LVL47
 2311 00c1 0100     		.2byte	0x1
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 63


 2312 00c3 50       		.byte	0x50
 2313 00c4 00000000 		.4byte	0
 2314 00c8 00000000 		.4byte	0
 2315              	.LLST9:
 2316 00cc DA000000 		.4byte	.LVL48
 2317 00d0 EC000000 		.4byte	.LVL50
 2318 00d4 0100     		.2byte	0x1
 2319 00d6 54       		.byte	0x54
 2320 00d7 00000000 		.4byte	0
 2321 00db 00000000 		.4byte	0
 2322              	.LLST10:
 2323 00df E6000000 		.4byte	.LVL49
 2324 00e3 EC000000 		.4byte	.LVL50
 2325 00e7 0100     		.2byte	0x1
 2326 00e9 51       		.byte	0x51
 2327 00ea 00000000 		.4byte	0
 2328 00ee 00000000 		.4byte	0
 2329              	.LLST11:
 2330 00f2 EC000000 		.4byte	.LVL50
 2331 00f6 FE000000 		.4byte	.LVL52
 2332 00fa 0100     		.2byte	0x1
 2333 00fc 54       		.byte	0x54
 2334 00fd 00000000 		.4byte	0
 2335 0101 00000000 		.4byte	0
 2336              	.LLST12:
 2337 0105 F8000000 		.4byte	.LVL51
 2338 0109 FE000000 		.4byte	.LVL52
 2339 010d 0100     		.2byte	0x1
 2340 010f 50       		.byte	0x50
 2341 0110 00000000 		.4byte	0
 2342 0114 00000000 		.4byte	0
 2343              	.LLST13:
 2344 0118 FE000000 		.4byte	.LVL52
 2345 011c 24010000 		.4byte	.LVL56
 2346 0120 0100     		.2byte	0x1
 2347 0122 54       		.byte	0x54
 2348 0123 00000000 		.4byte	0
 2349 0127 00000000 		.4byte	0
 2350              	.LLST14:
 2351 012b 0C010000 		.4byte	.LVL53
 2352 012f 16010000 		.4byte	.LVL54
 2353 0133 0100     		.2byte	0x1
 2354 0135 51       		.byte	0x51
 2355 0136 16010000 		.4byte	.LVL54
 2356 013a 26010000 		.4byte	.LVL57
 2357 013e 0100     		.2byte	0x1
 2358 0140 50       		.byte	0x50
 2359 0141 00000000 		.4byte	0
 2360 0145 00000000 		.4byte	0
 2361              		.section	.debug_aranges,"",%progbits
 2362 0000 3C000000 		.4byte	0x3c
 2363 0004 0200     		.2byte	0x2
 2364 0006 00000000 		.4byte	.Ldebug_info0
 2365 000a 04       		.byte	0x4
 2366 000b 00       		.byte	0
 2367 000c 0000     		.2byte	0
 2368 000e 0000     		.2byte	0
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 64


 2369 0010 00000000 		.4byte	.LFB64
 2370 0014 44000000 		.4byte	.LFE64-.LFB64
 2371 0018 00000000 		.4byte	.LFB65
 2372 001c 24000000 		.4byte	.LFE65-.LFB65
 2373 0020 00000000 		.4byte	.LFB66
 2374 0024 14000000 		.4byte	.LFE66-.LFB66
 2375 0028 00000000 		.4byte	.LFB67
 2376 002c 48000000 		.4byte	.LFE67-.LFB67
 2377 0030 00000000 		.4byte	.LFB63
 2378 0034 AC010000 		.4byte	.LFE63-.LFB63
 2379 0038 00000000 		.4byte	0
 2380 003c 00000000 		.4byte	0
 2381              		.section	.debug_ranges,"",%progbits
 2382              	.Ldebug_ranges0:
 2383 0000 00000000 		.4byte	.LFB64
 2384 0004 44000000 		.4byte	.LFE64
 2385 0008 00000000 		.4byte	.LFB65
 2386 000c 24000000 		.4byte	.LFE65
 2387 0010 00000000 		.4byte	.LFB66
 2388 0014 14000000 		.4byte	.LFE66
 2389 0018 00000000 		.4byte	.LFB67
 2390 001c 48000000 		.4byte	.LFE67
 2391 0020 00000000 		.4byte	.LFB63
 2392 0024 AC010000 		.4byte	.LFE63
 2393 0028 00000000 		.4byte	0
 2394 002c 00000000 		.4byte	0
 2395              		.section	.debug_line,"",%progbits
 2396              	.Ldebug_line0:
 2397 0000 E8010000 		.section	.debug_str,"MS",%progbits,1
 2397      02002101 
 2397      00000201 
 2397      FB0E0D00 
 2397      01010101 
 2398              	.LASF52:
 2399 0000 43795379 		.ascii	"CySysWdtEnable\000"
 2399      73576474 
 2399      456E6162 
 2399      6C6500
 2400              	.LASF63:
 2401 000f 4C45445F 		.ascii	"LED_Alarm_Write\000"
 2401      416C6172 
 2401      6D5F5772 
 2401      69746500 
 2402              	.LASF72:
 2403 001f 5254435F 		.ascii	"RTC_SetAlarmMask\000"
 2403      53657441 
 2403      6C61726D 
 2403      4D61736B 
 2403      00
 2404              	.LASF16:
 2405 0030 43595F53 		.ascii	"CY_SYS_TIMER_INTERRUPT\000"
 2405      59535F54 
 2405      494D4552 
 2405      5F494E54 
 2405      45525255 
 2406              	.LASF39:
 2407 0047 54696D65 		.ascii	"TimerCountBuffer\000"
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 65


 2407      72436F75 
 2407      6E744275 
 2407      66666572 
 2407      00
 2408              	.LASF74:
 2409 0058 5254435F 		.ascii	"RTC_SetPeriod\000"
 2409      53657450 
 2409      6572696F 
 2409      6400
 2410              	.LASF2:
 2411 0066 73686F72 		.ascii	"short int\000"
 2411      7420696E 
 2411      7400
 2412              	.LASF18:
 2413 0070 73697A65 		.ascii	"sizetype\000"
 2413      74797065 
 2413      00
 2414              	.LASF27:
 2415 0079 5254435F 		.ascii	"RTC_GetMonth\000"
 2415      4765744D 
 2415      6F6E7468 
 2415      00
 2416              	.LASF41:
 2417 0086 5254435F 		.ascii	"RTC_daysBeforeMonthTbl\000"
 2417      64617973 
 2417      4265666F 
 2417      72654D6F 
 2417      6E746854 
 2418              	.LASF78:
 2419 009d 5254435F 		.ascii	"RTC_GetTime\000"
 2419      47657454 
 2419      696D6500 
 2420              	.LASF20:
 2421 00a9 64617465 		.ascii	"date\000"
 2421      00
 2422              	.LASF21:
 2423 00ae 6461794F 		.ascii	"dayOfWeek\000"
 2423      66576565 
 2423      6B00
 2424              	.LASF62:
 2425 00b8 4C45445F 		.ascii	"LED_Alarm_Read\000"
 2425      416C6172 
 2425      6D5F5265 
 2425      616400
 2426              	.LASF28:
 2427 00c7 5254435F 		.ascii	"RTC_GetSecond\000"
 2427      47657453 
 2427      65636F6E 
 2427      6400
 2428              	.LASF81:
 2429 00d5 55415254 		.ascii	"UART_PutString\000"
 2429      5F507574 
 2429      53747269 
 2429      6E6700
 2430              	.LASF83:
 2431 00e4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2431      43313120 
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 66


 2431      352E342E 
 2431      31203230 
 2431      31363036 
 2432 0117 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2432      20726576 
 2432      6973696F 
 2432      6E203233 
 2432      37373135 
 2433 014a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2433      66756E63 
 2433      74696F6E 
 2433      2D736563 
 2433      74696F6E 
 2434              	.LASF43:
 2435 0172 616C6172 		.ascii	"alarmFlag\000"
 2435      6D466C61 
 2435      6700
 2436              	.LASF9:
 2437 017c 75696E74 		.ascii	"uint8\000"
 2437      3800
 2438              	.LASF40:
 2439 0182 696E7453 		.ascii	"intSource\000"
 2439      6F757263 
 2439      6500
 2440              	.LASF26:
 2441 018c 72657456 		.ascii	"retVal\000"
 2441      616C00
 2442              	.LASF50:
 2443 0193 43795379 		.ascii	"CySysWdtSetClearOnMatch\000"
 2443      73576474 
 2443      53657443 
 2443      6C656172 
 2443      4F6E4D61 
 2444              	.LASF64:
 2445 01ab 4C45445F 		.ascii	"LED_WdtIsr_Read\000"
 2445      57647449 
 2445      73725F52 
 2445      65616400 
 2446              	.LASF12:
 2447 01bb 666C6F61 		.ascii	"float\000"
 2447      7400
 2448              	.LASF42:
 2449 01c1 616C6172 		.ascii	"alarmTimeDate\000"
 2449      6D54696D 
 2449      65446174 
 2449      6500
 2450              	.LASF36:
 2451 01cf 696E746D 		.ascii	"intmask\000"
 2451      61736B00 
 2452              	.LASF49:
 2453 01d7 43795379 		.ascii	"CySysWdtDisable\000"
 2453      73576474 
 2453      44697361 
 2453      626C6500 
 2454              	.LASF4:
 2455 01e7 6C6F6E67 		.ascii	"long int\000"
 2455      20696E74 
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 67


 2455      00
 2456              	.LASF54:
 2457 01f0 43795379 		.ascii	"CySysWdtEnableCounterIsr\000"
 2457      73576474 
 2457      456E6162 
 2457      6C65436F 
 2457      756E7465 
 2458              	.LASF48:
 2459 0209 43795379 		.ascii	"CySysClkSetLfclkSource\000"
 2459      73436C6B 
 2459      5365744C 
 2459      66636C6B 
 2459      536F7572 
 2460              	.LASF76:
 2461 0220 69737254 		.ascii	"isrTimer1_StartEx\000"
 2461      696D6572 
 2461      315F5374 
 2461      61727445 
 2461      7800
 2462              	.LASF23:
 2463 0232 5254435F 		.ascii	"RTC_DATE_TIME\000"
 2463      44415445 
 2463      5F54494D 
 2463      4500
 2464              	.LASF71:
 2465 0240 5254435F 		.ascii	"RTC_SetDateAndTime\000"
 2465      53657444 
 2465      61746541 
 2465      6E645469 
 2465      6D6500
 2466              	.LASF29:
 2467 0253 696E7075 		.ascii	"inputTime\000"
 2467      7454696D 
 2467      6500
 2468              	.LASF17:
 2469 025d 6C6F6E67 		.ascii	"long double\000"
 2469      20646F75 
 2469      626C6500 
 2470              	.LASF31:
 2471 0269 5254435F 		.ascii	"RTC_GetHours\000"
 2471      47657448 
 2471      6F757273 
 2471      00
 2472              	.LASF1:
 2473 0276 756E7369 		.ascii	"unsigned char\000"
 2473      676E6564 
 2473      20636861 
 2473      7200
 2474              	.LASF73:
 2475 0284 5254435F 		.ascii	"RTC_SetAlarmDateAndTime\000"
 2475      53657441 
 2475      6C61726D 
 2475      44617465 
 2475      416E6454 
 2476              	.LASF80:
 2477 029c 73707269 		.ascii	"sprintf\000"
 2477      6E746600 
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 68


 2478              	.LASF56:
 2479 02a4 5254435F 		.ascii	"RTC_Update\000"
 2479      55706461 
 2479      746500
 2480              	.LASF0:
 2481 02af 7369676E 		.ascii	"signed char\000"
 2481      65642063 
 2481      68617200 
 2482              	.LASF55:
 2483 02bb 4C46434C 		.ascii	"LFCLK_Out_SetDriveMode\000"
 2483      4B5F4F75 
 2483      745F5365 
 2483      74447269 
 2483      76654D6F 
 2484              	.LASF7:
 2485 02d2 6C6F6E67 		.ascii	"long long unsigned int\000"
 2485      206C6F6E 
 2485      6720756E 
 2485      7369676E 
 2485      65642069 
 2486              	.LASF66:
 2487 02e9 43795379 		.ascii	"CySysClkWcoStart\000"
 2487      73436C6B 
 2487      57636F53 
 2487      74617274 
 2487      00
 2488              	.LASF8:
 2489 02fa 756E7369 		.ascii	"unsigned int\000"
 2489      676E6564 
 2489      20696E74 
 2489      00
 2490              	.LASF67:
 2491 0307 43795379 		.ascii	"CySysWdtSetMode\000"
 2491      73576474 
 2491      5365744D 
 2491      6F646500 
 2492              	.LASF65:
 2493 0317 4C45445F 		.ascii	"LED_WdtIsr_Write\000"
 2493      57647449 
 2493      73725F57 
 2493      72697465 
 2493      00
 2494              	.LASF57:
 2495 0328 5254435F 		.ascii	"RTC_ClearAlarmStatus\000"
 2495      436C6561 
 2495      72416C61 
 2495      726D5374 
 2495      61747573 
 2496              	.LASF19:
 2497 033d 74696D65 		.ascii	"time\000"
 2497      00
 2498              	.LASF82:
 2499 0342 43795379 		.ascii	"CySysPmSleep\000"
 2499      73506D53 
 2499      6C656570 
 2499      00
 2500              	.LASF3:
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 69


 2501 034f 73686F72 		.ascii	"short unsigned int\000"
 2501      7420756E 
 2501      7369676E 
 2501      65642069 
 2501      6E7400
 2502              	.LASF22:
 2503 0362 73746174 		.ascii	"status\000"
 2503      757300
 2504              	.LASF14:
 2505 0369 63686172 		.ascii	"char\000"
 2505      00
 2506              	.LASF86:
 2507 036e 6D61696E 		.ascii	"main\000"
 2507      00
 2508              	.LASF30:
 2509 0373 5254435F 		.ascii	"RTC_GetMinutes\000"
 2509      4765744D 
 2509      696E7574 
 2509      657300
 2510              	.LASF47:
 2511 0382 62795570 		.ascii	"byUpdateCapture\000"
 2511      64617465 
 2511      43617074 
 2511      75726500 
 2512              	.LASF38:
 2513 0392 64617465 		.ascii	"dateBuffer\000"
 2513      42756666 
 2513      657200
 2514              	.LASF75:
 2515 039d 5254435F 		.ascii	"RTC_SetAlarmHandler\000"
 2515      53657441 
 2515      6C61726D 
 2515      48616E64 
 2515      6C657200 
 2516              	.LASF61:
 2517 03b1 54696D65 		.ascii	"Timer1_ReadCounter\000"
 2517      72315F52 
 2517      65616443 
 2517      6F756E74 
 2517      657200
 2518              	.LASF10:
 2519 03c4 75696E74 		.ascii	"uint16\000"
 2519      313600
 2520              	.LASF60:
 2521 03cb 54696D65 		.ascii	"Timer1_ClearInterrupt\000"
 2521      72315F43 
 2521      6C656172 
 2521      496E7465 
 2521      72727570 
 2522              	.LASF25:
 2523 03e1 5254435F 		.ascii	"RTC_GetDay\000"
 2523      47657444 
 2523      617900
 2524              	.LASF84:
 2525 03ec 6D61696E 		.ascii	"main.c\000"
 2525      2E6300
 2526              	.LASF5:
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 70


 2527 03f3 6C6F6E67 		.ascii	"long unsigned int\000"
 2527      20756E73 
 2527      69676E65 
 2527      6420696E 
 2527      7400
 2528              	.LASF24:
 2529 0405 5254435F 		.ascii	"RTC_GetYear\000"
 2529      47657459 
 2529      65617200 
 2530              	.LASF11:
 2531 0411 75696E74 		.ascii	"uint32\000"
 2531      333200
 2532              	.LASF44:
 2533 0418 75693130 		.ascii	"ui100mS\000"
 2533      306D5300 
 2534              	.LASF85:
 2535 0420 433A5C55 		.ascii	"C:\\Users\\Jimmy\\temp\\RTC_P4_WDT_Example01\\RTC_P"
 2535      73657273 
 2535      5C4A696D 
 2535      6D795C74 
 2535      656D705C 
 2536 044e 345F5744 		.ascii	"4_WDT_Example01.cydsn\000"
 2536      545F4578 
 2536      616D706C 
 2536      6530312E 
 2536      63796473 
 2537              	.LASF79:
 2538 0464 5254435F 		.ascii	"RTC_GetDate\000"
 2538      47657444 
 2538      61746500 
 2539              	.LASF69:
 2540 0470 43795379 		.ascii	"CySysTimerDelay\000"
 2540      7354696D 
 2540      65724465 
 2540      6C617900 
 2541              	.LASF34:
 2542 0480 416C6172 		.ascii	"AlarmIsrHandler\000"
 2542      6D497372 
 2542      48616E64 
 2542      6C657200 
 2543              	.LASF59:
 2544 0490 54696D65 		.ascii	"Timer1_GetInterruptSourceMasked\000"
 2544      72315F47 
 2544      6574496E 
 2544      74657272 
 2544      75707453 
 2545              	.LASF32:
 2546 04b0 456E6162 		.ascii	"EnableRtcOperation\000"
 2546      6C655274 
 2546      634F7065 
 2546      72617469 
 2546      6F6E00
 2547              	.LASF45:
 2548 04c3 62795570 		.ascii	"byUpdateTime\000"
 2548      64617465 
 2548      54696D65 
 2548      00
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 71


 2549              	.LASF46:
 2550 04d0 54696D65 		.ascii	"Timer1Count\000"
 2550      7231436F 
 2550      756E7400 
 2551              	.LASF53:
 2552 04dc 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 2552      73576474 
 2552      53657449 
 2552      6E746572 
 2552      72757074 
 2553              	.LASF68:
 2554 04f9 43795379 		.ascii	"CySysWdtDisableCounterIsr\000"
 2554      73576474 
 2554      44697361 
 2554      626C6543 
 2554      6F756E74 
 2555              	.LASF77:
 2556 0513 54696D65 		.ascii	"Timer1_Start\000"
 2556      72315F53 
 2556      74617274 
 2556      00
 2557              	.LASF35:
 2558 0520 54696D65 		.ascii	"Time1_ISR_Handler\000"
 2558      315F4953 
 2558      525F4861 
 2558      6E646C65 
 2558      7200
 2559              	.LASF13:
 2560 0532 646F7562 		.ascii	"double\000"
 2560      6C6500
 2561              	.LASF58:
 2562 0539 69737254 		.ascii	"isrTimer1_ClearPending\000"
 2562      696D6572 
 2562      315F436C 
 2562      65617250 
 2562      656E6469 
 2563              	.LASF33:
 2564 0550 55706461 		.ascii	"UpdateTimeIsrHandler\000"
 2564      74655469 
 2564      6D654973 
 2564      7248616E 
 2564      646C6572 
 2565              	.LASF51:
 2566 0565 43795379 		.ascii	"CySysWdtSetMatch\000"
 2566      73576474 
 2566      5365744D 
 2566      61746368 
 2566      00
 2567              	.LASF70:
 2568 0576 5254435F 		.ascii	"RTC_Start\000"
 2568      53746172 
 2568      7400
 2569              	.LASF37:
 2570 0580 74696D65 		.ascii	"timeBuffer\000"
 2570      42756666 
 2570      657200
 2571              	.LASF6:
ARM GAS  C:\Users\Jimmy\AppData\Local\Temp\cccLMoev.s 			page 72


 2572 058b 6C6F6E67 		.ascii	"long long int\000"
 2572      206C6F6E 
 2572      6720696E 
 2572      7400
 2573              	.LASF15:
 2574 0599 43595F53 		.ascii	"CY_SYS_TIMER_WAIT\000"
 2574      59535F54 
 2574      494D4552 
 2574      5F574149 
 2574      5400
 2575              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
